[versions]
ktor = "3.1.0"
redis = "0.2.4"
logback = "1.5.16"
slf4j = "2.0.16"

datetime = "0.6.2"
serialization = "1.8.0"
stately = "2.1.0"

kotlin = "2.1.10"
coroutines = "1.10.1"
dokka = "2.0.0"
kotlinter = "5.0.1"
deteKT = "1.23.7"
toml = "0.4.0"

kotest = "5.9.1"
mockk = "1.13.16"
kover = "0.9.1"
krypto = "4.0.10"
urlencoder = "1.6.0"
sslcontext = "9.0.0"
spring = "3.4.2"

ksp = "2.1.10-1.0.29"
poet = "2.0.0"

binvalid = "0.17.0"
publisher = "0.30.0"
gradle-publish = "1.3.1"
env = "1.0.5"

[libraries]
# ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-curl = { module = "io.ktor:ktor-client-curl", version.ref = "ktor" }
ktor-client-winhttp = { module = "io.ktor:ktor-client-winhttp", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }


kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
stately = { module = "co.touchlab:stately-concurrent-collections", version.ref = "stately" }

krypto = { module = "com.soywiz.korlibs.krypto:krypto", version.ref = "krypto" }
urlencoder = { module = "net.thauvin.erik.urlencoder:urlencoder-lib", version.ref = "urlencoder" }

# test
test-kotest-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
test-kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }

ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
poet = { module = "com.squareup:kotlinpoet", version.ref = "poet" }
poet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "poet" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
ksp-plugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }

ssl-utils = { module = "io.github.hakky54:sslcontext-kickstart-for-pem", version.ref = "sslcontext" }
spring-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
publisher = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "publisher" }
redis = { module = "eu.vendeli:re.this", version.ref = "redis" }
env = { module = "dev.scottpierce:kotlin-env-var", version.ref = "env" }
toml = { module = "net.peanuuutz.tomlkt:tomlkt", version.ref = "toml" }

[plugins]
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-js-plain-objects = { id = "org.jetbrains.kotlin.plugin.js-plain-objects", version.ref = "kotlin" }
kotlin-compatability-validator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "binvalid" }
gradle-publish = { id = "com.gradle.plugin-publish", version.ref = "gradle-publish"}
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
ktlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }
deteKT = { id = "io.gitlab.arturbosch.detekt", version.ref = "deteKT" }
