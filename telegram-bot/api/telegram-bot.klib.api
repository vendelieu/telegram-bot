// Klib ABI Dump
// Targets: [js, linuxX64, mingwX64]
// Alias: native => [linuxX64, mingwX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <eu.vendeli:telegram-bot>
open annotation class eu.vendeli.tgbot.annotations.dsl/ConfigurationDSL : kotlin/Annotation { // eu.vendeli.tgbot.annotations.dsl/ConfigurationDSL|null[0]
    constructor <init>() // eu.vendeli.tgbot.annotations.dsl/ConfigurationDSL.<init>|<init>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations.dsl/FunctionalDSL : kotlin/Annotation { // eu.vendeli.tgbot.annotations.dsl/FunctionalDSL|null[0]
    constructor <init>() // eu.vendeli.tgbot.annotations.dsl/FunctionalDSL.<init>|<init>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations.internal/ExperimentalFeature : kotlin/Annotation { // eu.vendeli.tgbot.annotations.internal/ExperimentalFeature|null[0]
    constructor <init>() // eu.vendeli.tgbot.annotations.internal/ExperimentalFeature.<init>|<init>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations.internal/KtGramInternal : kotlin/Annotation { // eu.vendeli.tgbot.annotations.internal/KtGramInternal|null[0]
    constructor <init>() // eu.vendeli.tgbot.annotations.internal/KtGramInternal.<init>|<init>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations.internal/TgAPI : kotlin/Annotation { // eu.vendeli.tgbot.annotations.internal/TgAPI|null[0]
    constructor <init>() // eu.vendeli.tgbot.annotations.internal/TgAPI.<init>|<init>(){}[0]

    open annotation class Ignore : kotlin/Annotation { // eu.vendeli.tgbot.annotations.internal/TgAPI.Ignore|null[0]
        constructor <init>() // eu.vendeli.tgbot.annotations.internal/TgAPI.Ignore.<init>|<init>(){}[0]
    }

    open annotation class Name : kotlin/Annotation { // eu.vendeli.tgbot.annotations.internal/TgAPI.Name|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.tgbot.annotations.internal/TgAPI.Name.<init>|<init>(kotlin.String){}[0]

        final val value // eu.vendeli.tgbot.annotations.internal/TgAPI.Name.value|{}value[0]
            final fun <get-value>(): kotlin/String // eu.vendeli.tgbot.annotations.internal/TgAPI.Name.value.<get-value>|<get-value>(){}[0]
    }
}

open annotation class eu.vendeli.tgbot.annotations/ArgParser : kotlin/Annotation { // eu.vendeli.tgbot.annotations/ArgParser|null[0]
    constructor <init>(kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> = ...) // eu.vendeli.tgbot.annotations/ArgParser.<init>|<init>(kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.ArgumentParser>){}[0]

    final val argParser // eu.vendeli.tgbot.annotations/ArgParser.argParser|{}argParser[0]
        final fun <get-argParser>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> // eu.vendeli.tgbot.annotations/ArgParser.argParser.<get-argParser>|<get-argParser>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations/CommandHandler : kotlin/Annotation { // eu.vendeli.tgbot.annotations/CommandHandler|null[0]
    constructor <init>(kotlin/Array<kotlin/String>, eu.vendeli.tgbot.annotations/RateLimits = ..., kotlin/Array<eu.vendeli.tgbot.types.internal/UpdateType> = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Guard> = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> = ...) // eu.vendeli.tgbot.annotations/CommandHandler.<init>|<init>(kotlin.Array<kotlin.String>;eu.vendeli.tgbot.annotations.RateLimits;kotlin.Array<eu.vendeli.tgbot.types.internal.UpdateType>;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.Guard>;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.ArgumentParser>){}[0]

    final val argParser // eu.vendeli.tgbot.annotations/CommandHandler.argParser|{}argParser[0]
        final fun <get-argParser>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> // eu.vendeli.tgbot.annotations/CommandHandler.argParser.<get-argParser>|<get-argParser>(){}[0]
    final val guard // eu.vendeli.tgbot.annotations/CommandHandler.guard|{}guard[0]
        final fun <get-guard>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Guard> // eu.vendeli.tgbot.annotations/CommandHandler.guard.<get-guard>|<get-guard>(){}[0]
    final val rateLimits // eu.vendeli.tgbot.annotations/CommandHandler.rateLimits|{}rateLimits[0]
        final fun <get-rateLimits>(): eu.vendeli.tgbot.annotations/RateLimits // eu.vendeli.tgbot.annotations/CommandHandler.rateLimits.<get-rateLimits>|<get-rateLimits>(){}[0]
    final val scope // eu.vendeli.tgbot.annotations/CommandHandler.scope|{}scope[0]
        final fun <get-scope>(): kotlin/Array<eu.vendeli.tgbot.types.internal/UpdateType> // eu.vendeli.tgbot.annotations/CommandHandler.scope.<get-scope>|<get-scope>(){}[0]
    final val value // eu.vendeli.tgbot.annotations/CommandHandler.value|{}value[0]
        final fun <get-value>(): kotlin/Array<kotlin/String> // eu.vendeli.tgbot.annotations/CommandHandler.value.<get-value>|<get-value>(){}[0]

    open annotation class CallbackQuery : kotlin/Annotation { // eu.vendeli.tgbot.annotations/CommandHandler.CallbackQuery|null[0]
        constructor <init>(kotlin/Array<kotlin/String>, kotlin/Boolean = ..., eu.vendeli.tgbot.annotations/RateLimits = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Guard> = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> = ...) // eu.vendeli.tgbot.annotations/CommandHandler.CallbackQuery.<init>|<init>(kotlin.Array<kotlin.String>;kotlin.Boolean;eu.vendeli.tgbot.annotations.RateLimits;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.Guard>;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.ArgumentParser>){}[0]

        final val argParser // eu.vendeli.tgbot.annotations/CommandHandler.CallbackQuery.argParser|{}argParser[0]
            final fun <get-argParser>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> // eu.vendeli.tgbot.annotations/CommandHandler.CallbackQuery.argParser.<get-argParser>|<get-argParser>(){}[0]
        final val autoAnswer // eu.vendeli.tgbot.annotations/CommandHandler.CallbackQuery.autoAnswer|{}autoAnswer[0]
            final fun <get-autoAnswer>(): kotlin/Boolean // eu.vendeli.tgbot.annotations/CommandHandler.CallbackQuery.autoAnswer.<get-autoAnswer>|<get-autoAnswer>(){}[0]
        final val guard // eu.vendeli.tgbot.annotations/CommandHandler.CallbackQuery.guard|{}guard[0]
            final fun <get-guard>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Guard> // eu.vendeli.tgbot.annotations/CommandHandler.CallbackQuery.guard.<get-guard>|<get-guard>(){}[0]
        final val rateLimits // eu.vendeli.tgbot.annotations/CommandHandler.CallbackQuery.rateLimits|{}rateLimits[0]
            final fun <get-rateLimits>(): eu.vendeli.tgbot.annotations/RateLimits // eu.vendeli.tgbot.annotations/CommandHandler.CallbackQuery.rateLimits.<get-rateLimits>|<get-rateLimits>(){}[0]
        final val value // eu.vendeli.tgbot.annotations/CommandHandler.CallbackQuery.value|{}value[0]
            final fun <get-value>(): kotlin/Array<kotlin/String> // eu.vendeli.tgbot.annotations/CommandHandler.CallbackQuery.value.<get-value>|<get-value>(){}[0]
    }
}

open annotation class eu.vendeli.tgbot.annotations/CommonHandler : kotlin/Annotation { // eu.vendeli.tgbot.annotations/CommonHandler|null[0]
    constructor <init>() // eu.vendeli.tgbot.annotations/CommonHandler.<init>|<init>(){}[0]

    open annotation class Regex : kotlin/Annotation { // eu.vendeli.tgbot.annotations/CommonHandler.Regex|null[0]
        constructor <init>(kotlin/String, kotlin/Array<kotlin.text/RegexOption> = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Filter> = ..., kotlin/Int = ..., kotlin/Array<eu.vendeli.tgbot.types.internal/UpdateType> = ..., eu.vendeli.tgbot.annotations/RateLimits = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> = ...) // eu.vendeli.tgbot.annotations/CommonHandler.Regex.<init>|<init>(kotlin.String;kotlin.Array<kotlin.text.RegexOption>;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.Filter>;kotlin.Int;kotlin.Array<eu.vendeli.tgbot.types.internal.UpdateType>;eu.vendeli.tgbot.annotations.RateLimits;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.ArgumentParser>){}[0]

        final val argParser // eu.vendeli.tgbot.annotations/CommonHandler.Regex.argParser|{}argParser[0]
            final fun <get-argParser>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> // eu.vendeli.tgbot.annotations/CommonHandler.Regex.argParser.<get-argParser>|<get-argParser>(){}[0]
        final val filter // eu.vendeli.tgbot.annotations/CommonHandler.Regex.filter|{}filter[0]
            final fun <get-filter>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Filter> // eu.vendeli.tgbot.annotations/CommonHandler.Regex.filter.<get-filter>|<get-filter>(){}[0]
        final val options // eu.vendeli.tgbot.annotations/CommonHandler.Regex.options|{}options[0]
            final fun <get-options>(): kotlin/Array<kotlin.text/RegexOption> // eu.vendeli.tgbot.annotations/CommonHandler.Regex.options.<get-options>|<get-options>(){}[0]
        final val priority // eu.vendeli.tgbot.annotations/CommonHandler.Regex.priority|{}priority[0]
            final fun <get-priority>(): kotlin/Int // eu.vendeli.tgbot.annotations/CommonHandler.Regex.priority.<get-priority>|<get-priority>(){}[0]
        final val rateLimits // eu.vendeli.tgbot.annotations/CommonHandler.Regex.rateLimits|{}rateLimits[0]
            final fun <get-rateLimits>(): eu.vendeli.tgbot.annotations/RateLimits // eu.vendeli.tgbot.annotations/CommonHandler.Regex.rateLimits.<get-rateLimits>|<get-rateLimits>(){}[0]
        final val scope // eu.vendeli.tgbot.annotations/CommonHandler.Regex.scope|{}scope[0]
            final fun <get-scope>(): kotlin/Array<eu.vendeli.tgbot.types.internal/UpdateType> // eu.vendeli.tgbot.annotations/CommonHandler.Regex.scope.<get-scope>|<get-scope>(){}[0]
        final val value // eu.vendeli.tgbot.annotations/CommonHandler.Regex.value|{}value[0]
            final fun <get-value>(): kotlin/String // eu.vendeli.tgbot.annotations/CommonHandler.Regex.value.<get-value>|<get-value>(){}[0]
    }

    open annotation class Text : kotlin/Annotation { // eu.vendeli.tgbot.annotations/CommonHandler.Text|null[0]
        constructor <init>(kotlin/Array<kotlin/String>, kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Filter> = ..., kotlin/Int = ..., kotlin/Array<eu.vendeli.tgbot.types.internal/UpdateType> = ..., eu.vendeli.tgbot.annotations/RateLimits = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> = ...) // eu.vendeli.tgbot.annotations/CommonHandler.Text.<init>|<init>(kotlin.Array<kotlin.String>;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.Filter>;kotlin.Int;kotlin.Array<eu.vendeli.tgbot.types.internal.UpdateType>;eu.vendeli.tgbot.annotations.RateLimits;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.ArgumentParser>){}[0]

        final val argParser // eu.vendeli.tgbot.annotations/CommonHandler.Text.argParser|{}argParser[0]
            final fun <get-argParser>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> // eu.vendeli.tgbot.annotations/CommonHandler.Text.argParser.<get-argParser>|<get-argParser>(){}[0]
        final val filter // eu.vendeli.tgbot.annotations/CommonHandler.Text.filter|{}filter[0]
            final fun <get-filter>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Filter> // eu.vendeli.tgbot.annotations/CommonHandler.Text.filter.<get-filter>|<get-filter>(){}[0]
        final val priority // eu.vendeli.tgbot.annotations/CommonHandler.Text.priority|{}priority[0]
            final fun <get-priority>(): kotlin/Int // eu.vendeli.tgbot.annotations/CommonHandler.Text.priority.<get-priority>|<get-priority>(){}[0]
        final val rateLimits // eu.vendeli.tgbot.annotations/CommonHandler.Text.rateLimits|{}rateLimits[0]
            final fun <get-rateLimits>(): eu.vendeli.tgbot.annotations/RateLimits // eu.vendeli.tgbot.annotations/CommonHandler.Text.rateLimits.<get-rateLimits>|<get-rateLimits>(){}[0]
        final val scope // eu.vendeli.tgbot.annotations/CommonHandler.Text.scope|{}scope[0]
            final fun <get-scope>(): kotlin/Array<eu.vendeli.tgbot.types.internal/UpdateType> // eu.vendeli.tgbot.annotations/CommonHandler.Text.scope.<get-scope>|<get-scope>(){}[0]
        final val value // eu.vendeli.tgbot.annotations/CommonHandler.Text.value|{}value[0]
            final fun <get-value>(): kotlin/Array<kotlin/String> // eu.vendeli.tgbot.annotations/CommonHandler.Text.value.<get-value>|<get-value>(){}[0]
    }
}

open annotation class eu.vendeli.tgbot.annotations/CtxProvider : kotlin/Annotation { // eu.vendeli.tgbot.annotations/CtxProvider|null[0]
    constructor <init>() // eu.vendeli.tgbot.annotations/CtxProvider.<init>|<init>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations/Guard : kotlin/Annotation { // eu.vendeli.tgbot.annotations/Guard|null[0]
    constructor <init>(kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Guard> = ...) // eu.vendeli.tgbot.annotations/Guard.<init>|<init>(kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.Guard>){}[0]

    final val guard // eu.vendeli.tgbot.annotations/Guard.guard|{}guard[0]
        final fun <get-guard>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Guard> // eu.vendeli.tgbot.annotations/Guard.guard.<get-guard>|<get-guard>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations/Injectable : kotlin/Annotation { // eu.vendeli.tgbot.annotations/Injectable|null[0]
    constructor <init>() // eu.vendeli.tgbot.annotations/Injectable.<init>|<init>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations/InputChain : kotlin/Annotation { // eu.vendeli.tgbot.annotations/InputChain|null[0]
    constructor <init>(kotlin/Boolean = ...) // eu.vendeli.tgbot.annotations/InputChain.<init>|<init>(kotlin.Boolean){}[0]

    final val autoClean // eu.vendeli.tgbot.annotations/InputChain.autoClean|{}autoClean[0]
        final fun <get-autoClean>(): kotlin/Boolean // eu.vendeli.tgbot.annotations/InputChain.autoClean.<get-autoClean>|<get-autoClean>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations/InputHandler : kotlin/Annotation { // eu.vendeli.tgbot.annotations/InputHandler|null[0]
    constructor <init>(kotlin/Array<kotlin/String>, eu.vendeli.tgbot.annotations/RateLimits = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Guard> = ...) // eu.vendeli.tgbot.annotations/InputHandler.<init>|<init>(kotlin.Array<kotlin.String>;eu.vendeli.tgbot.annotations.RateLimits;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.Guard>){}[0]

    final val guard // eu.vendeli.tgbot.annotations/InputHandler.guard|{}guard[0]
        final fun <get-guard>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Guard> // eu.vendeli.tgbot.annotations/InputHandler.guard.<get-guard>|<get-guard>(){}[0]
    final val rateLimits // eu.vendeli.tgbot.annotations/InputHandler.rateLimits|{}rateLimits[0]
        final fun <get-rateLimits>(): eu.vendeli.tgbot.annotations/RateLimits // eu.vendeli.tgbot.annotations/InputHandler.rateLimits.<get-rateLimits>|<get-rateLimits>(){}[0]
    final val value // eu.vendeli.tgbot.annotations/InputHandler.value|{}value[0]
        final fun <get-value>(): kotlin/Array<kotlin/String> // eu.vendeli.tgbot.annotations/InputHandler.value.<get-value>|<get-value>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations/ParamMapping : kotlin/Annotation { // eu.vendeli.tgbot.annotations/ParamMapping|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.annotations/ParamMapping.<init>|<init>(kotlin.String){}[0]

    final val name // eu.vendeli.tgbot.annotations/ParamMapping.name|{}name[0]
        final fun <get-name>(): kotlin/String // eu.vendeli.tgbot.annotations/ParamMapping.name.<get-name>|<get-name>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations/RateLimits : kotlin/Annotation { // eu.vendeli.tgbot.annotations/RateLimits|null[0]
    constructor <init>(kotlin/Long = ..., kotlin/Long = ...) // eu.vendeli.tgbot.annotations/RateLimits.<init>|<init>(kotlin.Long;kotlin.Long){}[0]

    final val period // eu.vendeli.tgbot.annotations/RateLimits.period|{}period[0]
        final fun <get-period>(): kotlin/Long // eu.vendeli.tgbot.annotations/RateLimits.period.<get-period>|<get-period>(){}[0]
    final val rate // eu.vendeli.tgbot.annotations/RateLimits.rate|{}rate[0]
        final fun <get-rate>(): kotlin/Long // eu.vendeli.tgbot.annotations/RateLimits.rate.<get-rate>|<get-rate>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations/UnprocessedHandler : kotlin/Annotation { // eu.vendeli.tgbot.annotations/UnprocessedHandler|null[0]
    constructor <init>() // eu.vendeli.tgbot.annotations/UnprocessedHandler.<init>|<init>(){}[0]
}

open annotation class eu.vendeli.tgbot.annotations/UpdateHandler : kotlin/Annotation { // eu.vendeli.tgbot.annotations/UpdateHandler|null[0]
    constructor <init>(kotlin/Array<eu.vendeli.tgbot.types.internal/UpdateType>) // eu.vendeli.tgbot.annotations/UpdateHandler.<init>|<init>(kotlin.Array<eu.vendeli.tgbot.types.internal.UpdateType>){}[0]

    final val type // eu.vendeli.tgbot.annotations/UpdateHandler.type|{}type[0]
        final fun <get-type>(): kotlin/Array<eu.vendeli.tgbot.types.internal/UpdateType> // eu.vendeli.tgbot.annotations/UpdateHandler.type.<get-type>|<get-type>(){}[0]
}

final enum class eu.vendeli.tgbot.types.chat/ChatAction : kotlin/Enum<eu.vendeli.tgbot.types.chat/ChatAction> { // eu.vendeli.tgbot.types.chat/ChatAction|null[0]
    enum entry ChooseSticker // eu.vendeli.tgbot.types.chat/ChatAction.ChooseSticker|null[0]
    enum entry FindLocation // eu.vendeli.tgbot.types.chat/ChatAction.FindLocation|null[0]
    enum entry RecordVideo // eu.vendeli.tgbot.types.chat/ChatAction.RecordVideo|null[0]
    enum entry RecordVideoNote // eu.vendeli.tgbot.types.chat/ChatAction.RecordVideoNote|null[0]
    enum entry RecordVoice // eu.vendeli.tgbot.types.chat/ChatAction.RecordVoice|null[0]
    enum entry Typing // eu.vendeli.tgbot.types.chat/ChatAction.Typing|null[0]
    enum entry UploadDocument // eu.vendeli.tgbot.types.chat/ChatAction.UploadDocument|null[0]
    enum entry UploadPhoto // eu.vendeli.tgbot.types.chat/ChatAction.UploadPhoto|null[0]
    enum entry UploadVideo // eu.vendeli.tgbot.types.chat/ChatAction.UploadVideo|null[0]
    enum entry UploadVideoNote // eu.vendeli.tgbot.types.chat/ChatAction.UploadVideoNote|null[0]
    enum entry UploadVoice // eu.vendeli.tgbot.types.chat/ChatAction.UploadVoice|null[0]

    final val entries // eu.vendeli.tgbot.types.chat/ChatAction.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.chat/ChatAction> // eu.vendeli.tgbot.types.chat/ChatAction.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.chat/ChatAction // eu.vendeli.tgbot.types.chat/ChatAction.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.chat/ChatAction> // eu.vendeli.tgbot.types.chat/ChatAction.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.chat/ChatAction.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatAction> // eu.vendeli.tgbot.types.chat/ChatAction.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.chat/ChatAction.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class eu.vendeli.tgbot.types.chat/ChatType : kotlin/Enum<eu.vendeli.tgbot.types.chat/ChatType> { // eu.vendeli.tgbot.types.chat/ChatType|null[0]
    enum entry Channel // eu.vendeli.tgbot.types.chat/ChatType.Channel|null[0]
    enum entry Group // eu.vendeli.tgbot.types.chat/ChatType.Group|null[0]
    enum entry Private // eu.vendeli.tgbot.types.chat/ChatType.Private|null[0]
    enum entry Sender // eu.vendeli.tgbot.types.chat/ChatType.Sender|null[0]
    enum entry Supergroup // eu.vendeli.tgbot.types.chat/ChatType.Supergroup|null[0]

    final val entries // eu.vendeli.tgbot.types.chat/ChatType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.chat/ChatType> // eu.vendeli.tgbot.types.chat/ChatType.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.chat/ChatType // eu.vendeli.tgbot.types.chat/ChatType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.chat/ChatType> // eu.vendeli.tgbot.types.chat/ChatType.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.chat/ChatType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatType> // eu.vendeli.tgbot.types.chat/ChatType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.chat/ChatType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class eu.vendeli.tgbot.types.forum/IconColor : kotlin/Enum<eu.vendeli.tgbot.types.forum/IconColor> { // eu.vendeli.tgbot.types.forum/IconColor|null[0]
    enum entry BLUE // eu.vendeli.tgbot.types.forum/IconColor.BLUE|null[0]
    enum entry GREEN // eu.vendeli.tgbot.types.forum/IconColor.GREEN|null[0]
    enum entry RED // eu.vendeli.tgbot.types.forum/IconColor.RED|null[0]
    enum entry ROSE // eu.vendeli.tgbot.types.forum/IconColor.ROSE|null[0]
    enum entry VIOLET // eu.vendeli.tgbot.types.forum/IconColor.VIOLET|null[0]
    enum entry YELLOW // eu.vendeli.tgbot.types.forum/IconColor.YELLOW|null[0]

    final val entries // eu.vendeli.tgbot.types.forum/IconColor.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.forum/IconColor> // eu.vendeli.tgbot.types.forum/IconColor.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.forum/IconColor // eu.vendeli.tgbot.types.forum/IconColor.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.forum/IconColor> // eu.vendeli.tgbot.types.forum/IconColor.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.forum/IconColor.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.forum/IconColor> // eu.vendeli.tgbot.types.forum/IconColor.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.forum/IconColor.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class eu.vendeli.tgbot.types.internal/Currency : kotlin/Enum<eu.vendeli.tgbot.types.internal/Currency> { // eu.vendeli.tgbot.types.internal/Currency|null[0]
    enum entry AED // eu.vendeli.tgbot.types.internal/Currency.AED|null[0]
    enum entry AFN // eu.vendeli.tgbot.types.internal/Currency.AFN|null[0]
    enum entry ALL // eu.vendeli.tgbot.types.internal/Currency.ALL|null[0]
    enum entry AMD // eu.vendeli.tgbot.types.internal/Currency.AMD|null[0]
    enum entry ARS // eu.vendeli.tgbot.types.internal/Currency.ARS|null[0]
    enum entry AUD // eu.vendeli.tgbot.types.internal/Currency.AUD|null[0]
    enum entry AZN // eu.vendeli.tgbot.types.internal/Currency.AZN|null[0]
    enum entry BAM // eu.vendeli.tgbot.types.internal/Currency.BAM|null[0]
    enum entry BDT // eu.vendeli.tgbot.types.internal/Currency.BDT|null[0]
    enum entry BGN // eu.vendeli.tgbot.types.internal/Currency.BGN|null[0]
    enum entry BND // eu.vendeli.tgbot.types.internal/Currency.BND|null[0]
    enum entry BOB // eu.vendeli.tgbot.types.internal/Currency.BOB|null[0]
    enum entry BRL // eu.vendeli.tgbot.types.internal/Currency.BRL|null[0]
    enum entry CAD // eu.vendeli.tgbot.types.internal/Currency.CAD|null[0]
    enum entry CHF // eu.vendeli.tgbot.types.internal/Currency.CHF|null[0]
    enum entry CLP // eu.vendeli.tgbot.types.internal/Currency.CLP|null[0]
    enum entry CNY // eu.vendeli.tgbot.types.internal/Currency.CNY|null[0]
    enum entry COP // eu.vendeli.tgbot.types.internal/Currency.COP|null[0]
    enum entry CRC // eu.vendeli.tgbot.types.internal/Currency.CRC|null[0]
    enum entry CZK // eu.vendeli.tgbot.types.internal/Currency.CZK|null[0]
    enum entry DKK // eu.vendeli.tgbot.types.internal/Currency.DKK|null[0]
    enum entry DOP // eu.vendeli.tgbot.types.internal/Currency.DOP|null[0]
    enum entry DZD // eu.vendeli.tgbot.types.internal/Currency.DZD|null[0]
    enum entry EGP // eu.vendeli.tgbot.types.internal/Currency.EGP|null[0]
    enum entry EUR // eu.vendeli.tgbot.types.internal/Currency.EUR|null[0]
    enum entry GBP // eu.vendeli.tgbot.types.internal/Currency.GBP|null[0]
    enum entry GEL // eu.vendeli.tgbot.types.internal/Currency.GEL|null[0]
    enum entry GTQ // eu.vendeli.tgbot.types.internal/Currency.GTQ|null[0]
    enum entry HKD // eu.vendeli.tgbot.types.internal/Currency.HKD|null[0]
    enum entry HNL // eu.vendeli.tgbot.types.internal/Currency.HNL|null[0]
    enum entry HRK // eu.vendeli.tgbot.types.internal/Currency.HRK|null[0]
    enum entry HUF // eu.vendeli.tgbot.types.internal/Currency.HUF|null[0]
    enum entry IDR // eu.vendeli.tgbot.types.internal/Currency.IDR|null[0]
    enum entry ILS // eu.vendeli.tgbot.types.internal/Currency.ILS|null[0]
    enum entry INR // eu.vendeli.tgbot.types.internal/Currency.INR|null[0]
    enum entry ISK // eu.vendeli.tgbot.types.internal/Currency.ISK|null[0]
    enum entry JMD // eu.vendeli.tgbot.types.internal/Currency.JMD|null[0]
    enum entry JPY // eu.vendeli.tgbot.types.internal/Currency.JPY|null[0]
    enum entry KES // eu.vendeli.tgbot.types.internal/Currency.KES|null[0]
    enum entry KGS // eu.vendeli.tgbot.types.internal/Currency.KGS|null[0]
    enum entry KRW // eu.vendeli.tgbot.types.internal/Currency.KRW|null[0]
    enum entry KZT // eu.vendeli.tgbot.types.internal/Currency.KZT|null[0]
    enum entry LBP // eu.vendeli.tgbot.types.internal/Currency.LBP|null[0]
    enum entry LKR // eu.vendeli.tgbot.types.internal/Currency.LKR|null[0]
    enum entry MAD // eu.vendeli.tgbot.types.internal/Currency.MAD|null[0]
    enum entry MDL // eu.vendeli.tgbot.types.internal/Currency.MDL|null[0]
    enum entry MNT // eu.vendeli.tgbot.types.internal/Currency.MNT|null[0]
    enum entry MUR // eu.vendeli.tgbot.types.internal/Currency.MUR|null[0]
    enum entry MVR // eu.vendeli.tgbot.types.internal/Currency.MVR|null[0]
    enum entry MXN // eu.vendeli.tgbot.types.internal/Currency.MXN|null[0]
    enum entry MYR // eu.vendeli.tgbot.types.internal/Currency.MYR|null[0]
    enum entry MZN // eu.vendeli.tgbot.types.internal/Currency.MZN|null[0]
    enum entry NGN // eu.vendeli.tgbot.types.internal/Currency.NGN|null[0]
    enum entry NIO // eu.vendeli.tgbot.types.internal/Currency.NIO|null[0]
    enum entry NOK // eu.vendeli.tgbot.types.internal/Currency.NOK|null[0]
    enum entry NPR // eu.vendeli.tgbot.types.internal/Currency.NPR|null[0]
    enum entry NZD // eu.vendeli.tgbot.types.internal/Currency.NZD|null[0]
    enum entry PAB // eu.vendeli.tgbot.types.internal/Currency.PAB|null[0]
    enum entry PEN // eu.vendeli.tgbot.types.internal/Currency.PEN|null[0]
    enum entry PHP // eu.vendeli.tgbot.types.internal/Currency.PHP|null[0]
    enum entry PKR // eu.vendeli.tgbot.types.internal/Currency.PKR|null[0]
    enum entry PLN // eu.vendeli.tgbot.types.internal/Currency.PLN|null[0]
    enum entry PYG // eu.vendeli.tgbot.types.internal/Currency.PYG|null[0]
    enum entry QAR // eu.vendeli.tgbot.types.internal/Currency.QAR|null[0]
    enum entry RON // eu.vendeli.tgbot.types.internal/Currency.RON|null[0]
    enum entry RSD // eu.vendeli.tgbot.types.internal/Currency.RSD|null[0]
    enum entry RUB // eu.vendeli.tgbot.types.internal/Currency.RUB|null[0]
    enum entry SAR // eu.vendeli.tgbot.types.internal/Currency.SAR|null[0]
    enum entry SEK // eu.vendeli.tgbot.types.internal/Currency.SEK|null[0]
    enum entry SGD // eu.vendeli.tgbot.types.internal/Currency.SGD|null[0]
    enum entry THB // eu.vendeli.tgbot.types.internal/Currency.THB|null[0]
    enum entry TJS // eu.vendeli.tgbot.types.internal/Currency.TJS|null[0]
    enum entry TRY // eu.vendeli.tgbot.types.internal/Currency.TRY|null[0]
    enum entry TTD // eu.vendeli.tgbot.types.internal/Currency.TTD|null[0]
    enum entry TWD // eu.vendeli.tgbot.types.internal/Currency.TWD|null[0]
    enum entry TZS // eu.vendeli.tgbot.types.internal/Currency.TZS|null[0]
    enum entry UAH // eu.vendeli.tgbot.types.internal/Currency.UAH|null[0]
    enum entry UGX // eu.vendeli.tgbot.types.internal/Currency.UGX|null[0]
    enum entry USD // eu.vendeli.tgbot.types.internal/Currency.USD|null[0]
    enum entry UYU // eu.vendeli.tgbot.types.internal/Currency.UYU|null[0]
    enum entry UZS // eu.vendeli.tgbot.types.internal/Currency.UZS|null[0]
    enum entry VND // eu.vendeli.tgbot.types.internal/Currency.VND|null[0]
    enum entry XTR // eu.vendeli.tgbot.types.internal/Currency.XTR|null[0]
    enum entry YER // eu.vendeli.tgbot.types.internal/Currency.YER|null[0]
    enum entry ZAR // eu.vendeli.tgbot.types.internal/Currency.ZAR|null[0]

    final val entries // eu.vendeli.tgbot.types.internal/Currency.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.internal/Currency> // eu.vendeli.tgbot.types.internal/Currency.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.internal/Currency // eu.vendeli.tgbot.types.internal/Currency.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.internal/Currency> // eu.vendeli.tgbot.types.internal/Currency.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.internal/Currency.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal/Currency> // eu.vendeli.tgbot.types.internal/Currency.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.internal/Currency.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class eu.vendeli.tgbot.types.internal/HttpLogLevel : kotlin/Enum<eu.vendeli.tgbot.types.internal/HttpLogLevel> { // eu.vendeli.tgbot.types.internal/HttpLogLevel|null[0]
    enum entry ALL // eu.vendeli.tgbot.types.internal/HttpLogLevel.ALL|null[0]
    enum entry BODY // eu.vendeli.tgbot.types.internal/HttpLogLevel.BODY|null[0]
    enum entry HEADERS // eu.vendeli.tgbot.types.internal/HttpLogLevel.HEADERS|null[0]
    enum entry INFO // eu.vendeli.tgbot.types.internal/HttpLogLevel.INFO|null[0]
    enum entry NONE // eu.vendeli.tgbot.types.internal/HttpLogLevel.NONE|null[0]

    final val entries // eu.vendeli.tgbot.types.internal/HttpLogLevel.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.internal/HttpLogLevel> // eu.vendeli.tgbot.types.internal/HttpLogLevel.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.internal/HttpLogLevel // eu.vendeli.tgbot.types.internal/HttpLogLevel.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.internal/HttpLogLevel> // eu.vendeli.tgbot.types.internal/HttpLogLevel.values|values#static(){}[0]
}

final enum class eu.vendeli.tgbot.types.internal/LogLvl : kotlin/Enum<eu.vendeli.tgbot.types.internal/LogLvl> { // eu.vendeli.tgbot.types.internal/LogLvl|null[0]
    enum entry ALL // eu.vendeli.tgbot.types.internal/LogLvl.ALL|null[0]
    enum entry DEBUG // eu.vendeli.tgbot.types.internal/LogLvl.DEBUG|null[0]
    enum entry ERROR // eu.vendeli.tgbot.types.internal/LogLvl.ERROR|null[0]
    enum entry INFO // eu.vendeli.tgbot.types.internal/LogLvl.INFO|null[0]
    enum entry OFF // eu.vendeli.tgbot.types.internal/LogLvl.OFF|null[0]
    enum entry TRACE // eu.vendeli.tgbot.types.internal/LogLvl.TRACE|null[0]
    enum entry WARN // eu.vendeli.tgbot.types.internal/LogLvl.WARN|null[0]

    final val entries // eu.vendeli.tgbot.types.internal/LogLvl.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.internal/LogLvl> // eu.vendeli.tgbot.types.internal/LogLvl.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.internal/LogLvl // eu.vendeli.tgbot.types.internal/LogLvl.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.internal/LogLvl> // eu.vendeli.tgbot.types.internal/LogLvl.values|values#static(){}[0]
}

final enum class eu.vendeli.tgbot.types.internal/UpdateType : kotlin/Enum<eu.vendeli.tgbot.types.internal/UpdateType> { // eu.vendeli.tgbot.types.internal/UpdateType|null[0]
    enum entry BUSINESS_CONNECTION // eu.vendeli.tgbot.types.internal/UpdateType.BUSINESS_CONNECTION|null[0]
    enum entry BUSINESS_MESSAGE // eu.vendeli.tgbot.types.internal/UpdateType.BUSINESS_MESSAGE|null[0]
    enum entry CALLBACK_QUERY // eu.vendeli.tgbot.types.internal/UpdateType.CALLBACK_QUERY|null[0]
    enum entry CHANNEL_POST // eu.vendeli.tgbot.types.internal/UpdateType.CHANNEL_POST|null[0]
    enum entry CHAT_BOOST // eu.vendeli.tgbot.types.internal/UpdateType.CHAT_BOOST|null[0]
    enum entry CHAT_JOIN_REQUEST // eu.vendeli.tgbot.types.internal/UpdateType.CHAT_JOIN_REQUEST|null[0]
    enum entry CHAT_MEMBER // eu.vendeli.tgbot.types.internal/UpdateType.CHAT_MEMBER|null[0]
    enum entry CHOSEN_INLINE_RESULT // eu.vendeli.tgbot.types.internal/UpdateType.CHOSEN_INLINE_RESULT|null[0]
    enum entry DELETED_BUSINESS_MESSAGES // eu.vendeli.tgbot.types.internal/UpdateType.DELETED_BUSINESS_MESSAGES|null[0]
    enum entry EDITED_BUSINESS_MESSAGE // eu.vendeli.tgbot.types.internal/UpdateType.EDITED_BUSINESS_MESSAGE|null[0]
    enum entry EDITED_CHANNEL_POST // eu.vendeli.tgbot.types.internal/UpdateType.EDITED_CHANNEL_POST|null[0]
    enum entry EDITED_MESSAGE // eu.vendeli.tgbot.types.internal/UpdateType.EDITED_MESSAGE|null[0]
    enum entry INLINE_QUERY // eu.vendeli.tgbot.types.internal/UpdateType.INLINE_QUERY|null[0]
    enum entry MESSAGE // eu.vendeli.tgbot.types.internal/UpdateType.MESSAGE|null[0]
    enum entry MESSAGE_REACTION // eu.vendeli.tgbot.types.internal/UpdateType.MESSAGE_REACTION|null[0]
    enum entry MESSAGE_REACTION_COUNT // eu.vendeli.tgbot.types.internal/UpdateType.MESSAGE_REACTION_COUNT|null[0]
    enum entry MY_CHAT_MEMBER // eu.vendeli.tgbot.types.internal/UpdateType.MY_CHAT_MEMBER|null[0]
    enum entry POLL // eu.vendeli.tgbot.types.internal/UpdateType.POLL|null[0]
    enum entry POLL_ANSWER // eu.vendeli.tgbot.types.internal/UpdateType.POLL_ANSWER|null[0]
    enum entry PRE_CHECKOUT_QUERY // eu.vendeli.tgbot.types.internal/UpdateType.PRE_CHECKOUT_QUERY|null[0]
    enum entry PURCHASED_PAID_MEDIA // eu.vendeli.tgbot.types.internal/UpdateType.PURCHASED_PAID_MEDIA|null[0]
    enum entry REMOVED_CHAT_BOOST // eu.vendeli.tgbot.types.internal/UpdateType.REMOVED_CHAT_BOOST|null[0]
    enum entry SHIPPING_QUERY // eu.vendeli.tgbot.types.internal/UpdateType.SHIPPING_QUERY|null[0]

    final val entries // eu.vendeli.tgbot.types.internal/UpdateType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.internal/UpdateType> // eu.vendeli.tgbot.types.internal/UpdateType.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/UpdateType.toString|toString(){}[0]
    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.internal/UpdateType // eu.vendeli.tgbot.types.internal/UpdateType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.internal/UpdateType> // eu.vendeli.tgbot.types.internal/UpdateType.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.internal/UpdateType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal/UpdateType> // eu.vendeli.tgbot.types.internal/UpdateType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.internal/UpdateType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class eu.vendeli.tgbot.types.media/MaskPoint : kotlin/Enum<eu.vendeli.tgbot.types.media/MaskPoint> { // eu.vendeli.tgbot.types.media/MaskPoint|null[0]
    enum entry Chin // eu.vendeli.tgbot.types.media/MaskPoint.Chin|null[0]
    enum entry Eyes // eu.vendeli.tgbot.types.media/MaskPoint.Eyes|null[0]
    enum entry Forehead // eu.vendeli.tgbot.types.media/MaskPoint.Forehead|null[0]
    enum entry Mouth // eu.vendeli.tgbot.types.media/MaskPoint.Mouth|null[0]

    final val entries // eu.vendeli.tgbot.types.media/MaskPoint.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.media/MaskPoint> // eu.vendeli.tgbot.types.media/MaskPoint.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.media/MaskPoint // eu.vendeli.tgbot.types.media/MaskPoint.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.media/MaskPoint> // eu.vendeli.tgbot.types.media/MaskPoint.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.media/MaskPoint.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/MaskPoint> // eu.vendeli.tgbot.types.media/MaskPoint.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.media/MaskPoint.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class eu.vendeli.tgbot.types.media/StickerFormat : kotlin/Enum<eu.vendeli.tgbot.types.media/StickerFormat> { // eu.vendeli.tgbot.types.media/StickerFormat|null[0]
    enum entry Animated // eu.vendeli.tgbot.types.media/StickerFormat.Animated|null[0]
    enum entry Static // eu.vendeli.tgbot.types.media/StickerFormat.Static|null[0]
    enum entry Video // eu.vendeli.tgbot.types.media/StickerFormat.Video|null[0]

    final val entries // eu.vendeli.tgbot.types.media/StickerFormat.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.media/StickerFormat> // eu.vendeli.tgbot.types.media/StickerFormat.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.media/StickerFormat // eu.vendeli.tgbot.types.media/StickerFormat.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.media/StickerFormat> // eu.vendeli.tgbot.types.media/StickerFormat.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.media/StickerFormat.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/StickerFormat> // eu.vendeli.tgbot.types.media/StickerFormat.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.media/StickerFormat.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class eu.vendeli.tgbot.types.media/StickerType : kotlin/Enum<eu.vendeli.tgbot.types.media/StickerType> { // eu.vendeli.tgbot.types.media/StickerType|null[0]
    enum entry CustomEmoji // eu.vendeli.tgbot.types.media/StickerType.CustomEmoji|null[0]
    enum entry Mask // eu.vendeli.tgbot.types.media/StickerType.Mask|null[0]
    enum entry Regular // eu.vendeli.tgbot.types.media/StickerType.Regular|null[0]

    final val entries // eu.vendeli.tgbot.types.media/StickerType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.media/StickerType> // eu.vendeli.tgbot.types.media/StickerType.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.media/StickerType // eu.vendeli.tgbot.types.media/StickerType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.media/StickerType> // eu.vendeli.tgbot.types.media/StickerType.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.media/StickerType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/StickerType> // eu.vendeli.tgbot.types.media/StickerType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.media/StickerType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class eu.vendeli.tgbot.types.msg/EntityType : kotlin/Enum<eu.vendeli.tgbot.types.msg/EntityType> { // eu.vendeli.tgbot.types.msg/EntityType|null[0]
    enum entry Blockquote // eu.vendeli.tgbot.types.msg/EntityType.Blockquote|null[0]
    enum entry Bold // eu.vendeli.tgbot.types.msg/EntityType.Bold|null[0]
    enum entry BotCommand // eu.vendeli.tgbot.types.msg/EntityType.BotCommand|null[0]
    enum entry Cashtag // eu.vendeli.tgbot.types.msg/EntityType.Cashtag|null[0]
    enum entry Code // eu.vendeli.tgbot.types.msg/EntityType.Code|null[0]
    enum entry CustomEmoji // eu.vendeli.tgbot.types.msg/EntityType.CustomEmoji|null[0]
    enum entry Email // eu.vendeli.tgbot.types.msg/EntityType.Email|null[0]
    enum entry ExpandableBlockQuote // eu.vendeli.tgbot.types.msg/EntityType.ExpandableBlockQuote|null[0]
    enum entry Hashtag // eu.vendeli.tgbot.types.msg/EntityType.Hashtag|null[0]
    enum entry Italic // eu.vendeli.tgbot.types.msg/EntityType.Italic|null[0]
    enum entry Mention // eu.vendeli.tgbot.types.msg/EntityType.Mention|null[0]
    enum entry PhoneNumber // eu.vendeli.tgbot.types.msg/EntityType.PhoneNumber|null[0]
    enum entry Pre // eu.vendeli.tgbot.types.msg/EntityType.Pre|null[0]
    enum entry Spoiler // eu.vendeli.tgbot.types.msg/EntityType.Spoiler|null[0]
    enum entry Strikethrough // eu.vendeli.tgbot.types.msg/EntityType.Strikethrough|null[0]
    enum entry TextLink // eu.vendeli.tgbot.types.msg/EntityType.TextLink|null[0]
    enum entry TextMention // eu.vendeli.tgbot.types.msg/EntityType.TextMention|null[0]
    enum entry Underline // eu.vendeli.tgbot.types.msg/EntityType.Underline|null[0]
    enum entry Url // eu.vendeli.tgbot.types.msg/EntityType.Url|null[0]

    final val entries // eu.vendeli.tgbot.types.msg/EntityType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.msg/EntityType> // eu.vendeli.tgbot.types.msg/EntityType.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.msg/EntityType // eu.vendeli.tgbot.types.msg/EntityType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.msg/EntityType> // eu.vendeli.tgbot.types.msg/EntityType.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.msg/EntityType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/EntityType> // eu.vendeli.tgbot.types.msg/EntityType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.msg/EntityType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class eu.vendeli.tgbot.types.passport/EncryptedPassportElementType : kotlin/Enum<eu.vendeli.tgbot.types.passport/EncryptedPassportElementType> { // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType|null[0]
    enum entry Address // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.Address|null[0]
    enum entry BankStatement // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.BankStatement|null[0]
    enum entry DriverLicence // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.DriverLicence|null[0]
    enum entry Email // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.Email|null[0]
    enum entry IdentityCard // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.IdentityCard|null[0]
    enum entry InternalPassport // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.InternalPassport|null[0]
    enum entry Passport // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.Passport|null[0]
    enum entry PassportRegistration // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.PassportRegistration|null[0]
    enum entry PersonalDetails // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.PersonalDetails|null[0]
    enum entry PhoneNumber // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.PhoneNumber|null[0]
    enum entry RentalAgreement // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.RentalAgreement|null[0]
    enum entry TemporaryRegistration // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.TemporaryRegistration|null[0]
    enum entry UtilityBill // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.UtilityBill|null[0]

    final val entries // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.passport/EncryptedPassportElementType> // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.passport/EncryptedPassportElementType> // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/EncryptedPassportElementType> // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.passport/EncryptedPassportElementType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class eu.vendeli.tgbot.types.poll/PollType : kotlin/Enum<eu.vendeli.tgbot.types.poll/PollType> { // eu.vendeli.tgbot.types.poll/PollType|null[0]
    enum entry Quiz // eu.vendeli.tgbot.types.poll/PollType.Quiz|null[0]
    enum entry Regular // eu.vendeli.tgbot.types.poll/PollType.Regular|null[0]

    final val entries // eu.vendeli.tgbot.types.poll/PollType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types.poll/PollType> // eu.vendeli.tgbot.types.poll/PollType.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types.poll/PollType // eu.vendeli.tgbot.types.poll/PollType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types.poll/PollType> // eu.vendeli.tgbot.types.poll/PollType.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.poll/PollType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.poll/PollType> // eu.vendeli.tgbot.types.poll/PollType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.poll/PollType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class eu.vendeli.tgbot.types/EmojiType : kotlin/Enum<eu.vendeli.tgbot.types/EmojiType> { // eu.vendeli.tgbot.types/EmojiType|null[0]
    enum entry AlienMonster // eu.vendeli.tgbot.types/EmojiType.AlienMonster|null[0]
    enum entry Amused // eu.vendeli.tgbot.types/EmojiType.Amused|null[0]
    enum entry Applause // eu.vendeli.tgbot.types/EmojiType.Applause|null[0]
    enum entry Banana // eu.vendeli.tgbot.types/EmojiType.Banana|null[0]
    enum entry BrokenHeart // eu.vendeli.tgbot.types/EmojiType.BrokenHeart|null[0]
    enum entry BurningHeart // eu.vendeli.tgbot.types/EmojiType.BurningHeart|null[0]
    enum entry Champagne // eu.vendeli.tgbot.types/EmojiType.Champagne|null[0]
    enum entry ChristmasTree // eu.vendeli.tgbot.types/EmojiType.ChristmasTree|null[0]
    enum entry Clown // eu.vendeli.tgbot.types/EmojiType.Clown|null[0]
    enum entry Cool // eu.vendeli.tgbot.types/EmojiType.Cool|null[0]
    enum entry CrazyFace // eu.vendeli.tgbot.types/EmojiType.CrazyFace|null[0]
    enum entry Crying // eu.vendeli.tgbot.types/EmojiType.Crying|null[0]
    enum entry Cup // eu.vendeli.tgbot.types/EmojiType.Cup|null[0]
    enum entry Devil // eu.vendeli.tgbot.types/EmojiType.Devil|null[0]
    enum entry DoveOfPeace // eu.vendeli.tgbot.types/EmojiType.DoveOfPeace|null[0]
    enum entry ExplodingHead // eu.vendeli.tgbot.types/EmojiType.ExplodingHead|null[0]
    enum entry Eyes // eu.vendeli.tgbot.types/EmojiType.Eyes|null[0]
    enum entry FU // eu.vendeli.tgbot.types/EmojiType.FU|null[0]
    enum entry Fearful // eu.vendeli.tgbot.types/EmojiType.Fearful|null[0]
    enum entry Fire // eu.vendeli.tgbot.types/EmojiType.Fire|null[0]
    enum entry Firecracker // eu.vendeli.tgbot.types/EmojiType.Firecracker|null[0]
    enum entry FoldedHand // eu.vendeli.tgbot.types/EmojiType.FoldedHand|null[0]
    enum entry Ghost // eu.vendeli.tgbot.types/EmojiType.Ghost|null[0]
    enum entry GloomyFace // eu.vendeli.tgbot.types/EmojiType.GloomyFace|null[0]
    enum entry HaloFace // eu.vendeli.tgbot.types/EmojiType.HaloFace|null[0]
    enum entry Handshake // eu.vendeli.tgbot.types/EmojiType.Handshake|null[0]
    enum entry HearNoEvil // eu.vendeli.tgbot.types/EmojiType.HearNoEvil|null[0]
    enum entry Heart // eu.vendeli.tgbot.types/EmojiType.Heart|null[0]
    enum entry HeartEyes // eu.vendeli.tgbot.types/EmojiType.HeartEyes|null[0]
    enum entry HeartWithArrow // eu.vendeli.tgbot.types/EmojiType.HeartWithArrow|null[0]
    enum entry HotDog // eu.vendeli.tgbot.types/EmojiType.HotDog|null[0]
    enum entry Hugs // eu.vendeli.tgbot.types/EmojiType.Hugs|null[0]
    enum entry Hundred // eu.vendeli.tgbot.types/EmojiType.Hundred|null[0]
    enum entry Kiss // eu.vendeli.tgbot.types/EmojiType.Kiss|null[0]
    enum entry KissingFace // eu.vendeli.tgbot.types/EmojiType.KissingFace|null[0]
    enum entry Lightning // eu.vendeli.tgbot.types/EmojiType.Lightning|null[0]
    enum entry Lmao // eu.vendeli.tgbot.types/EmojiType.Lmao|null[0]
    enum entry LoudCrying // eu.vendeli.tgbot.types/EmojiType.LoudCrying|null[0]
    enum entry Love // eu.vendeli.tgbot.types/EmojiType.Love|null[0]
    enum entry ManShrugs // eu.vendeli.tgbot.types/EmojiType.ManShrugs|null[0]
    enum entry Moai // eu.vendeli.tgbot.types/EmojiType.Moai|null[0]
    enum entry MoonFace // eu.vendeli.tgbot.types/EmojiType.MoonFace|null[0]
    enum entry NailPolish // eu.vendeli.tgbot.types/EmojiType.NailPolish|null[0]
    enum entry Nerd // eu.vendeli.tgbot.types/EmojiType.Nerd|null[0]
    enum entry NeutralFace // eu.vendeli.tgbot.types/EmojiType.NeutralFace|null[0]
    enum entry OK // eu.vendeli.tgbot.types/EmojiType.OK|null[0]
    enum entry Pill // eu.vendeli.tgbot.types/EmojiType.Pill|null[0]
    enum entry Poop // eu.vendeli.tgbot.types/EmojiType.Poop|null[0]
    enum entry Pumpkin // eu.vendeli.tgbot.types/EmojiType.Pumpkin|null[0]
    enum entry RaisedEyebrow // eu.vendeli.tgbot.types/EmojiType.RaisedEyebrow|null[0]
    enum entry Salute // eu.vendeli.tgbot.types/EmojiType.Salute|null[0]
    enum entry Santa // eu.vendeli.tgbot.types/EmojiType.Santa|null[0]
    enum entry ScreamingInFear // eu.vendeli.tgbot.types/EmojiType.ScreamingInFear|null[0]
    enum entry SeeNoEvil // eu.vendeli.tgbot.types/EmojiType.SeeNoEvil|null[0]
    enum entry Shrugs // eu.vendeli.tgbot.types/EmojiType.Shrugs|null[0]
    enum entry Smiling // eu.vendeli.tgbot.types/EmojiType.Smiling|null[0]
    enum entry Snowman // eu.vendeli.tgbot.types/EmojiType.Snowman|null[0]
    enum entry SpeakNoEvil // eu.vendeli.tgbot.types/EmojiType.SpeakNoEvil|null[0]
    enum entry Strawberry // eu.vendeli.tgbot.types/EmojiType.Strawberry|null[0]
    enum entry SunglassesFace // eu.vendeli.tgbot.types/EmojiType.SunglassesFace|null[0]
    enum entry Swearing // eu.vendeli.tgbot.types/EmojiType.Swearing|null[0]
    enum entry Technician // eu.vendeli.tgbot.types/EmojiType.Technician|null[0]
    enum entry Thinking // eu.vendeli.tgbot.types/EmojiType.Thinking|null[0]
    enum entry ThumbDown // eu.vendeli.tgbot.types/EmojiType.ThumbDown|null[0]
    enum entry ThumbUp // eu.vendeli.tgbot.types/EmojiType.ThumbUp|null[0]
    enum entry Unicorn // eu.vendeli.tgbot.types/EmojiType.Unicorn|null[0]
    enum entry Vomiting // eu.vendeli.tgbot.types/EmojiType.Vomiting|null[0]
    enum entry Whale // eu.vendeli.tgbot.types/EmojiType.Whale|null[0]
    enum entry WomanShrugs // eu.vendeli.tgbot.types/EmojiType.WomanShrugs|null[0]
    enum entry Woozy // eu.vendeli.tgbot.types/EmojiType.Woozy|null[0]
    enum entry WritingHand // eu.vendeli.tgbot.types/EmojiType.WritingHand|null[0]
    enum entry Yawning // eu.vendeli.tgbot.types/EmojiType.Yawning|null[0]
    enum entry Zzz // eu.vendeli.tgbot.types/EmojiType.Zzz|null[0]

    final val entries // eu.vendeli.tgbot.types/EmojiType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types/EmojiType> // eu.vendeli.tgbot.types/EmojiType.entries.<get-entries>|<get-entries>#static(){}[0]
    final val literal // eu.vendeli.tgbot.types/EmojiType.literal|{}literal[0]
        final fun <get-literal>(): kotlin/String // eu.vendeli.tgbot.types/EmojiType.literal.<get-literal>|<get-literal>(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types/EmojiType // eu.vendeli.tgbot.types/EmojiType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types/EmojiType> // eu.vendeli.tgbot.types/EmojiType.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types/EmojiType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/EmojiType> // eu.vendeli.tgbot.types/EmojiType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types/EmojiType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final enum class eu.vendeli.tgbot.types/ParseMode : kotlin/Enum<eu.vendeli.tgbot.types/ParseMode> { // eu.vendeli.tgbot.types/ParseMode|null[0]
    enum entry HTML // eu.vendeli.tgbot.types/ParseMode.HTML|null[0]
    enum entry Markdown // eu.vendeli.tgbot.types/ParseMode.Markdown|null[0]
    enum entry MarkdownV2 // eu.vendeli.tgbot.types/ParseMode.MarkdownV2|null[0]

    final val entries // eu.vendeli.tgbot.types/ParseMode.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.tgbot.types/ParseMode> // eu.vendeli.tgbot.types/ParseMode.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.tgbot.types/ParseMode // eu.vendeli.tgbot.types/ParseMode.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.tgbot.types/ParseMode> // eu.vendeli.tgbot.types/ParseMode.values|values#static(){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types/ParseMode.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/ParseMode> // eu.vendeli.tgbot.types/ParseMode.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types/ParseMode.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

abstract fun interface <#A: kotlin/Any?> eu.vendeli.tgbot.types.internal.chain/KeySelector { // eu.vendeli.tgbot.types.internal.chain/KeySelector|null[0]
    abstract fun select(eu.vendeli.tgbot.types.internal/ProcessedUpdate): #A? // eu.vendeli.tgbot.types.internal.chain/KeySelector.select|select(eu.vendeli.tgbot.types.internal.ProcessedUpdate){}[0]
}

abstract fun interface eu.vendeli.tgbot.interfaces.helper/ArgumentParser { // eu.vendeli.tgbot.interfaces.helper/ArgumentParser|null[0]
    abstract fun parse(kotlin/String): kotlin.collections/Map<kotlin/String, kotlin/String> // eu.vendeli.tgbot.interfaces.helper/ArgumentParser.parse|parse(kotlin.String){}[0]
}

abstract fun interface eu.vendeli.tgbot.interfaces.helper/ExceptionHandler { // eu.vendeli.tgbot.interfaces.helper/ExceptionHandler|null[0]
    abstract suspend fun handle(kotlin/Throwable, eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot) // eu.vendeli.tgbot.interfaces.helper/ExceptionHandler.handle|handle(kotlin.Throwable;eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
}

abstract fun interface eu.vendeli.tgbot.interfaces.helper/Guard { // eu.vendeli.tgbot.interfaces.helper/Guard|null[0]
    abstract suspend fun condition(eu.vendeli.tgbot.types/User?, eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot): kotlin/Boolean // eu.vendeli.tgbot.interfaces.helper/Guard.condition|condition(eu.vendeli.tgbot.types.User?;eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
}

abstract fun interface eu.vendeli.tgbot.interfaces.helper/RateLimitMechanism { // eu.vendeli.tgbot.interfaces.helper/RateLimitMechanism|null[0]
    abstract suspend fun isLimited(eu.vendeli.tgbot.types.internal.configuration/RateLimits, kotlin/Long, kotlin/String?): kotlin/Boolean // eu.vendeli.tgbot.interfaces.helper/RateLimitMechanism.isLimited|isLimited(eu.vendeli.tgbot.types.internal.configuration.RateLimits;kotlin.Long;kotlin.String?){}[0]
}

abstract fun interface eu.vendeli.tgbot.types.internal/Action { // eu.vendeli.tgbot.types.internal/Action|null[0]
    abstract suspend fun invoke(eu.vendeli.tgbot.types/User, eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot) // eu.vendeli.tgbot.types.internal/Action.invoke|invoke(eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
}

abstract fun interface eu.vendeli.tgbot.types.internal/BreakCondition { // eu.vendeli.tgbot.types.internal/BreakCondition|null[0]
    abstract suspend fun invoke(eu.vendeli.tgbot.types/User, eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot): kotlin/Boolean // eu.vendeli.tgbot.types.internal/BreakCondition.invoke|invoke(eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
}

abstract interface <#A: eu.vendeli.tgbot.interfaces.action/TgAction<*> & eu.vendeli.tgbot.interfaces.features/CaptionFeature<#A>> eu.vendeli.tgbot.interfaces.features/CaptionFeature : eu.vendeli.tgbot.interfaces.features/Feature, eu.vendeli.tgbot.utils.builders/EntitiesCtxBuilder<#A> { // eu.vendeli.tgbot.interfaces.features/CaptionFeature|null[0]
    open fun caption(kotlin/Function1<eu.vendeli.tgbot.utils.builders/EntitiesCtxBuilder<#A>, kotlin/String>): #A // eu.vendeli.tgbot.interfaces.features/CaptionFeature.caption|caption(kotlin.Function1<eu.vendeli.tgbot.utils.builders.EntitiesCtxBuilder<1:0>,kotlin.String>){}[0]
    open fun captionEntities(kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>): #A // eu.vendeli.tgbot.interfaces.features/CaptionFeature.captionEntities|captionEntities(kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>){}[0]
    open fun captionEntities(kotlin/Function1<eu.vendeli.tgbot.utils.builders/EntitiesBuilder, kotlin/Unit>): #A // eu.vendeli.tgbot.interfaces.features/CaptionFeature.captionEntities|captionEntities(kotlin.Function1<eu.vendeli.tgbot.utils.builders.EntitiesBuilder,kotlin.Unit>){}[0]
}

abstract interface <#A: eu.vendeli.tgbot.interfaces.action/TgAction<*>, #B: out eu.vendeli.tgbot.types.internal.options/Options> eu.vendeli.tgbot.interfaces.features/OptionsFeature : eu.vendeli.tgbot.interfaces.features/Feature { // eu.vendeli.tgbot.interfaces.features/OptionsFeature|null[0]
    open fun options(kotlin/Function1<#B, kotlin/Unit>): #A // eu.vendeli.tgbot.interfaces.features/OptionsFeature.options|options(kotlin.Function1<1:1,kotlin.Unit>){}[0]
}

abstract interface <#A: eu.vendeli.tgbot.interfaces.action/TgAction<*>> eu.vendeli.tgbot.interfaces.features/EntitiesFeature : eu.vendeli.tgbot.interfaces.features/Feature { // eu.vendeli.tgbot.interfaces.features/EntitiesFeature|null[0]
    open fun entities(kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>): #A // eu.vendeli.tgbot.interfaces.features/EntitiesFeature.entities|entities(kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>){}[0]
    open fun entities(kotlin/Function1<eu.vendeli.tgbot.utils.builders/EntitiesBuilder, kotlin/Unit>): #A // eu.vendeli.tgbot.interfaces.features/EntitiesFeature.entities|entities(kotlin.Function1<eu.vendeli.tgbot.utils.builders.EntitiesBuilder,kotlin.Unit>){}[0]
}

abstract interface <#A: eu.vendeli.tgbot.interfaces.action/TgAction<*>> eu.vendeli.tgbot.interfaces.features/MarkupFeature : eu.vendeli.tgbot.interfaces.features/Feature { // eu.vendeli.tgbot.interfaces.features/MarkupFeature|null[0]
    open fun forceReply(kotlin/String? = ..., kotlin/Boolean? = ...): #A // eu.vendeli.tgbot.interfaces.features/MarkupFeature.forceReply|forceReply(kotlin.String?;kotlin.Boolean?){}[0]
    open fun inlineKeyboardMarkup(kotlin/Function1<eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder, kotlin/Unit>): #A // eu.vendeli.tgbot.interfaces.features/MarkupFeature.inlineKeyboardMarkup|inlineKeyboardMarkup(kotlin.Function1<eu.vendeli.tgbot.utils.builders.InlineKeyboardMarkupBuilder,kotlin.Unit>){}[0]
    open fun markup(eu.vendeli.tgbot.interfaces.marker/Keyboard): #A // eu.vendeli.tgbot.interfaces.features/MarkupFeature.markup|markup(eu.vendeli.tgbot.interfaces.marker.Keyboard){}[0]
    open fun markup(kotlin/Function0<eu.vendeli.tgbot.interfaces.marker/Keyboard>): #A // eu.vendeli.tgbot.interfaces.features/MarkupFeature.markup|markup(kotlin.Function0<eu.vendeli.tgbot.interfaces.marker.Keyboard>){}[0]
    open fun replyKeyboardMarkup(kotlin/Function1<eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder, kotlin/Unit>): #A // eu.vendeli.tgbot.interfaces.features/MarkupFeature.replyKeyboardMarkup|replyKeyboardMarkup(kotlin.Function1<eu.vendeli.tgbot.utils.builders.ReplyKeyboardMarkupBuilder,kotlin.Unit>){}[0]
    open fun replyKeyboardRemove(kotlin/Boolean? = ...): #A // eu.vendeli.tgbot.interfaces.features/MarkupFeature.replyKeyboardRemove|replyKeyboardRemove(kotlin.Boolean?){}[0]
}

abstract interface <#A: eu.vendeli.tgbot.interfaces.action/TgAction<*>> eu.vendeli.tgbot.utils.builders/EntitiesCtxBuilder : eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder { // eu.vendeli.tgbot.utils.builders/EntitiesCtxBuilder|null[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).addEntity(eu.vendeli.tgbot.types.msg/MessageEntity) // eu.vendeli.tgbot.utils.builders/EntitiesCtxBuilder.addEntity|addEntity@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(eu.vendeli.tgbot.types.msg.MessageEntity){}[0]
}

abstract interface <#A: kotlin/Any> eu.vendeli.tgbot.interfaces.marker/Autowiring { // eu.vendeli.tgbot.interfaces.marker/Autowiring|null[0]
    abstract suspend fun get(eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot): #A? // eu.vendeli.tgbot.interfaces.marker/Autowiring.get|get(eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
}

abstract interface <#A: kotlin/Any?, #B: kotlin/Any?> eu.vendeli.tgbot.types.internal.chain/LinkStateManager { // eu.vendeli.tgbot.types.internal.chain/LinkStateManager|null[0]
    abstract val stateKey // eu.vendeli.tgbot.types.internal.chain/LinkStateManager.stateKey|{}stateKey[0]
        abstract fun <get-stateKey>(): eu.vendeli.tgbot.types.internal.chain/KeySelector<#A> // eu.vendeli.tgbot.types.internal.chain/LinkStateManager.stateKey.<get-stateKey>|<get-stateKey>(){}[0]

    abstract suspend fun del(#A) // eu.vendeli.tgbot.types.internal.chain/LinkStateManager.del|del(1:0){}[0]
    abstract suspend fun get(#A): #B? // eu.vendeli.tgbot.types.internal.chain/LinkStateManager.get|get(1:0){}[0]
    abstract suspend fun set(#A, #B) // eu.vendeli.tgbot.types.internal.chain/LinkStateManager.set|set(1:0;1:1){}[0]
}

abstract interface <#A: kotlin/Any?> eu.vendeli.tgbot.interfaces.action/BusinessActionExt : eu.vendeli.tgbot.interfaces.action/Request<#A> { // eu.vendeli.tgbot.interfaces.action/BusinessActionExt|null[0]
    open suspend fun sendBusiness(kotlin/Long, kotlin/String, eu.vendeli.tgbot/TelegramBot) // eu.vendeli.tgbot.interfaces.action/BusinessActionExt.sendBusiness|sendBusiness(kotlin.Long;kotlin.String;eu.vendeli.tgbot.TelegramBot){}[0]
    open suspend fun sendBusinessAsync(kotlin/Long, kotlin/String, eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/BusinessActionExt.sendBusinessAsync|sendBusinessAsync(kotlin.Long;kotlin.String;eu.vendeli.tgbot.TelegramBot){}[0]
    open suspend fun sendBusinessReturning(kotlin/Long, kotlin/String, eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/BusinessActionExt.sendBusinessReturning|sendBusinessReturning(kotlin.Long;kotlin.String;eu.vendeli.tgbot.TelegramBot){}[0]
}

abstract interface <#A: kotlin/Any?> eu.vendeli.tgbot.interfaces.action/InlineActionExt : eu.vendeli.tgbot.interfaces.action/Request<#A> { // eu.vendeli.tgbot.interfaces.action/InlineActionExt|null[0]
    open suspend fun sendInline(kotlin/String, eu.vendeli.tgbot/TelegramBot) // eu.vendeli.tgbot.interfaces.action/InlineActionExt.sendInline|sendInline(kotlin.String;eu.vendeli.tgbot.TelegramBot){}[0]
    open suspend fun sendInlineAsync(kotlin/String, eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/InlineActionExt.sendInlineAsync|sendInlineAsync(kotlin.String;eu.vendeli.tgbot.TelegramBot){}[0]
    open suspend fun sendInlineReturning(kotlin/String, eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/InlineActionExt.sendInlineReturning|sendInlineReturning(kotlin.String;eu.vendeli.tgbot.TelegramBot){}[0]
}

abstract interface <#A: kotlin/Any?> eu.vendeli.tgbot.interfaces.action/Request // eu.vendeli.tgbot.interfaces.action/Request|null[0]

abstract interface <#A: kotlin/Any?> eu.vendeli.tgbot.interfaces.ctx/BotContext { // eu.vendeli.tgbot.interfaces.ctx/BotContext|null[0]
    abstract fun del(kotlin/Long, kotlin/String) // eu.vendeli.tgbot.interfaces.ctx/BotContext.del|del(kotlin.Long;kotlin.String){}[0]
    abstract fun get(kotlin/Long, kotlin/String): #A? // eu.vendeli.tgbot.interfaces.ctx/BotContext.get|get(kotlin.Long;kotlin.String){}[0]
    abstract fun set(kotlin/Long, kotlin/String, #A?) // eu.vendeli.tgbot.interfaces.ctx/BotContext.set|set(kotlin.Long;kotlin.String;1:0?){}[0]
    abstract suspend fun delAsync(kotlin/Long, kotlin/String): kotlinx.coroutines/Deferred<kotlin/Boolean> // eu.vendeli.tgbot.interfaces.ctx/BotContext.delAsync|delAsync(kotlin.Long;kotlin.String){}[0]
    abstract suspend fun getAsync(kotlin/Long, kotlin/String): kotlinx.coroutines/Deferred<#A?> // eu.vendeli.tgbot.interfaces.ctx/BotContext.getAsync|getAsync(kotlin.Long;kotlin.String){}[0]
    abstract suspend fun setAsync(kotlin/Long, kotlin/String, #A?): kotlinx.coroutines/Deferred<kotlin/Boolean> // eu.vendeli.tgbot.interfaces.ctx/BotContext.setAsync|setAsync(kotlin.Long;kotlin.String;1:0?){}[0]
    open fun get(eu.vendeli.tgbot.types/User, kotlin/String): #A? // eu.vendeli.tgbot.interfaces.ctx/BotContext.get|get(eu.vendeli.tgbot.types.User;kotlin.String){}[0]
    open fun set(eu.vendeli.tgbot.types/User, kotlin/String, #A?) // eu.vendeli.tgbot.interfaces.ctx/BotContext.set|set(eu.vendeli.tgbot.types.User;kotlin.String;1:0?){}[0]
}

abstract interface <#A: kotlin/Any?> eu.vendeli.tgbot.interfaces.ctx/ClassData : eu.vendeli.tgbot.interfaces.ctx/BotContext<#A> { // eu.vendeli.tgbot.interfaces.ctx/ClassData|null[0]
    abstract suspend fun clearAll(kotlin/Long) // eu.vendeli.tgbot.interfaces.ctx/ClassData.clearAll|clearAll(kotlin.Long){}[0]
}

abstract interface <#A: kotlin/Any?> eu.vendeli.tgbot.interfaces.ctx/UserData : eu.vendeli.tgbot.interfaces.ctx/BotContext<#A> // eu.vendeli.tgbot.interfaces.ctx/UserData|null[0]

abstract interface <#A: kotlin/Any?> eu.vendeli.tgbot.types.internal.chain/Link { // eu.vendeli.tgbot.types.internal.chain/Link|null[0]
    abstract val afterAction // eu.vendeli.tgbot.types.internal.chain/Link.afterAction|{}afterAction[0]
        abstract fun <get-afterAction>(): eu.vendeli.tgbot.types.internal/Action? // eu.vendeli.tgbot.types.internal.chain/Link.afterAction.<get-afterAction>|<get-afterAction>(){}[0]
    abstract val beforeAction // eu.vendeli.tgbot.types.internal.chain/Link.beforeAction|{}beforeAction[0]
        abstract fun <get-beforeAction>(): eu.vendeli.tgbot.types.internal/Action? // eu.vendeli.tgbot.types.internal.chain/Link.beforeAction.<get-beforeAction>|<get-beforeAction>(){}[0]
    abstract val breakCondition // eu.vendeli.tgbot.types.internal.chain/Link.breakCondition|{}breakCondition[0]
        abstract fun <get-breakCondition>(): eu.vendeli.tgbot.types.internal/BreakCondition? // eu.vendeli.tgbot.types.internal.chain/Link.breakCondition.<get-breakCondition>|<get-breakCondition>(){}[0]
    abstract val retryAfterBreak // eu.vendeli.tgbot.types.internal.chain/Link.retryAfterBreak|{}retryAfterBreak[0]
        abstract fun <get-retryAfterBreak>(): kotlin/Boolean // eu.vendeli.tgbot.types.internal.chain/Link.retryAfterBreak.<get-retryAfterBreak>|<get-retryAfterBreak>(){}[0]
    open val chainingStrategy // eu.vendeli.tgbot.types.internal.chain/Link.chainingStrategy|{}chainingStrategy[0]
        open fun <get-chainingStrategy>(): eu.vendeli.tgbot.types.internal.chain/ChainingStrategy // eu.vendeli.tgbot.types.internal.chain/Link.chainingStrategy.<get-chainingStrategy>|<get-chainingStrategy>(){}[0]

    abstract suspend fun action(eu.vendeli.tgbot.types/User, eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot): #A // eu.vendeli.tgbot.types.internal.chain/Link.action|action(eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
    open suspend fun breakAction(eu.vendeli.tgbot.types/User, eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot) // eu.vendeli.tgbot.types.internal.chain/Link.breakAction|breakAction(eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
}

abstract interface eu.vendeli.tgbot.interfaces.ctx/ClassManager { // eu.vendeli.tgbot.interfaces.ctx/ClassManager|null[0]
    open fun getInstance(kotlin.reflect/KClass<*>, kotlin/Array<out kotlin/Any?>...): kotlin/Any // eu.vendeli.tgbot.interfaces.ctx/ClassManager.getInstance|getInstance(kotlin.reflect.KClass<*>;kotlin.Array<out|kotlin.Any?>...){}[0]
}

abstract interface eu.vendeli.tgbot.interfaces.ctx/InputListener { // eu.vendeli.tgbot.interfaces.ctx/InputListener|null[0]
    abstract fun del(kotlin/Long) // eu.vendeli.tgbot.interfaces.ctx/InputListener.del|del(kotlin.Long){}[0]
    abstract fun get(kotlin/Long): kotlin/String? // eu.vendeli.tgbot.interfaces.ctx/InputListener.get|get(kotlin.Long){}[0]
    abstract fun set(kotlin/Long, kotlin/String) // eu.vendeli.tgbot.interfaces.ctx/InputListener.set|set(kotlin.Long;kotlin.String){}[0]
    abstract suspend fun delAsync(kotlin/Long): kotlinx.coroutines/Deferred<kotlin/Boolean> // eu.vendeli.tgbot.interfaces.ctx/InputListener.delAsync|delAsync(kotlin.Long){}[0]
    abstract suspend fun getAsync(kotlin/Long): kotlinx.coroutines/Deferred<kotlin/String?> // eu.vendeli.tgbot.interfaces.ctx/InputListener.getAsync|getAsync(kotlin.Long){}[0]
    abstract suspend fun setAsync(kotlin/Long, kotlin/String): kotlinx.coroutines/Deferred<kotlin/Boolean> // eu.vendeli.tgbot.interfaces.ctx/InputListener.setAsync|setAsync(kotlin.Long;kotlin.String){}[0]
    open fun get(eu.vendeli.tgbot.types/User): kotlin/String? // eu.vendeli.tgbot.interfaces.ctx/InputListener.get|get(eu.vendeli.tgbot.types.User){}[0]
    open fun set(eu.vendeli.tgbot.types/User, kotlin/Function0<kotlin/String>) // eu.vendeli.tgbot.interfaces.ctx/InputListener.set|set(eu.vendeli.tgbot.types.User;kotlin.Function0<kotlin.String>){}[0]
    open fun set(eu.vendeli.tgbot.types/User, kotlin/String) // eu.vendeli.tgbot.interfaces.ctx/InputListener.set|set(eu.vendeli.tgbot.types.User;kotlin.String){}[0]
    open fun set(kotlin/Long, kotlin/Function0<kotlin/String>) // eu.vendeli.tgbot.interfaces.ctx/InputListener.set|set(kotlin.Long;kotlin.Function0<kotlin.String>){}[0]
    open suspend fun setAsync(eu.vendeli.tgbot.types/User, kotlin/Function0<kotlin/String>): kotlinx.coroutines/Deferred<kotlin/Boolean> // eu.vendeli.tgbot.interfaces.ctx/InputListener.setAsync|setAsync(eu.vendeli.tgbot.types.User;kotlin.Function0<kotlin.String>){}[0]
    open suspend fun setAsync(eu.vendeli.tgbot.types/User, kotlin/String): kotlinx.coroutines/Deferred<kotlin/Boolean> // eu.vendeli.tgbot.interfaces.ctx/InputListener.setAsync|setAsync(eu.vendeli.tgbot.types.User;kotlin.String){}[0]
    open suspend fun setAsync(kotlin/Long, kotlin/Function0<kotlin/String>): kotlinx.coroutines/Deferred<kotlin/Boolean> // eu.vendeli.tgbot.interfaces.ctx/InputListener.setAsync|setAsync(kotlin.Long;kotlin.Function0<kotlin.String>){}[0]
}

abstract interface eu.vendeli.tgbot.interfaces.features/Feature // eu.vendeli.tgbot.interfaces.features/Feature|null[0]

abstract interface eu.vendeli.tgbot.interfaces.helper/ConfigLoader { // eu.vendeli.tgbot.interfaces.helper/ConfigLoader|null[0]
    abstract val token // eu.vendeli.tgbot.interfaces.helper/ConfigLoader.token|{}token[0]
        abstract fun <get-token>(): kotlin/String // eu.vendeli.tgbot.interfaces.helper/ConfigLoader.token.<get-token>|<get-token>(){}[0]
    open val commandsPackage // eu.vendeli.tgbot.interfaces.helper/ConfigLoader.commandsPackage|{}commandsPackage[0]
        open fun <get-commandsPackage>(): kotlin/String? // eu.vendeli.tgbot.interfaces.helper/ConfigLoader.commandsPackage.<get-commandsPackage>|<get-commandsPackage>(){}[0]

    abstract fun load(): eu.vendeli.tgbot.types.internal.configuration/BotConfiguration // eu.vendeli.tgbot.interfaces.helper/ConfigLoader.load|load(){}[0]
}

abstract interface eu.vendeli.tgbot.interfaces.helper/Filter { // eu.vendeli.tgbot.interfaces.helper/Filter|null[0]
    abstract suspend fun match(eu.vendeli.tgbot.types/User?, eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot): kotlin/Boolean // eu.vendeli.tgbot.interfaces.helper/Filter.match|match(eu.vendeli.tgbot.types.User?;eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
}

abstract interface eu.vendeli.tgbot.interfaces.helper/ImplicitMediaData { // eu.vendeli.tgbot.interfaces.helper/ImplicitMediaData|null[0]
    abstract var media // eu.vendeli.tgbot.interfaces.helper/ImplicitMediaData.media|{}media[0]
        abstract fun <get-media>(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.interfaces.helper/ImplicitMediaData.media.<get-media>|<get-media>(){}[0]
        abstract fun <set-media>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.interfaces.helper/ImplicitMediaData.media.<set-media>|<set-media>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
    open var thumbnail // eu.vendeli.tgbot.interfaces.helper/ImplicitMediaData.thumbnail|{}thumbnail[0]
        open fun <get-thumbnail>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.interfaces.helper/ImplicitMediaData.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
        open fun <set-thumbnail>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.interfaces.helper/ImplicitMediaData.thumbnail.<set-thumbnail>|<set-thumbnail>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]
}

abstract interface eu.vendeli.tgbot.interfaces.marker/Button // eu.vendeli.tgbot.interfaces.marker/Button|null[0]

abstract interface eu.vendeli.tgbot.interfaces.marker/Keyboard { // eu.vendeli.tgbot.interfaces.marker/Keyboard|null[0]
    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.interfaces.marker/Keyboard.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.interfaces.marker/Keyboard> // eu.vendeli.tgbot.interfaces.marker/Keyboard.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.interfaces.marker/Keyboard.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

abstract interface eu.vendeli.tgbot.interfaces.marker/MultipleResponse // eu.vendeli.tgbot.interfaces.marker/MultipleResponse|null[0]

abstract interface eu.vendeli.tgbot.types.internal.options/ForumProps : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/ForumProps|null[0]
    abstract var messageThreadId // eu.vendeli.tgbot.types.internal.options/ForumProps.messageThreadId|{}messageThreadId[0]
        abstract fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/ForumProps.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        abstract fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/ForumProps.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
}

abstract interface eu.vendeli.tgbot.types.internal.options/LinkPreviewProp : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/LinkPreviewProp|null[0]
    abstract var linkPreviewOptions // eu.vendeli.tgbot.types.internal.options/LinkPreviewProp.linkPreviewOptions|{}linkPreviewOptions[0]
        abstract fun <get-linkPreviewOptions>(): eu.vendeli.tgbot.types/LinkPreviewOptions? // eu.vendeli.tgbot.types.internal.options/LinkPreviewProp.linkPreviewOptions.<get-linkPreviewOptions>|<get-linkPreviewOptions>(){}[0]
        abstract fun <set-linkPreviewOptions>(eu.vendeli.tgbot.types/LinkPreviewOptions?) // eu.vendeli.tgbot.types.internal.options/LinkPreviewProp.linkPreviewOptions.<set-linkPreviewOptions>|<set-linkPreviewOptions>(eu.vendeli.tgbot.types.LinkPreviewOptions?){}[0]

    open fun disableWebPagePreview() // eu.vendeli.tgbot.types.internal.options/LinkPreviewProp.disableWebPagePreview|disableWebPagePreview(){}[0]
    open fun linkPreviewOptions(kotlin/Function1<eu.vendeli.tgbot.types/LinkPreviewOptions, kotlin/Unit>) // eu.vendeli.tgbot.types.internal.options/LinkPreviewProp.linkPreviewOptions|linkPreviewOptions(kotlin.Function1<eu.vendeli.tgbot.types.LinkPreviewOptions,kotlin.Unit>){}[0]
}

abstract interface eu.vendeli.tgbot.types.internal.options/MediaSpoiler : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/MediaSpoiler|null[0]
    abstract var hasSpoiler // eu.vendeli.tgbot.types.internal.options/MediaSpoiler.hasSpoiler|{}hasSpoiler[0]
        abstract fun <get-hasSpoiler>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MediaSpoiler.hasSpoiler.<get-hasSpoiler>|<get-hasSpoiler>(){}[0]
        abstract fun <set-hasSpoiler>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/MediaSpoiler.hasSpoiler.<set-hasSpoiler>|<set-hasSpoiler>(kotlin.Boolean?){}[0]
}

abstract interface eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp|null[0]
    abstract var messageEffectId // eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp.messageEffectId|{}messageEffectId[0]
        abstract fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        abstract fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
}

abstract interface eu.vendeli.tgbot.types.internal.options/OptionsParseMode : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/OptionsParseMode|null[0]
    abstract var parseMode // eu.vendeli.tgbot.types.internal.options/OptionsParseMode.parseMode|{}parseMode[0]
        abstract fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/OptionsParseMode.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        abstract fun <set-parseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/OptionsParseMode.parseMode.<set-parseMode>|<set-parseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
}

abstract interface eu.vendeli.tgbot.types.internal.options/ShowCaptionAboveMediaProp : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/ShowCaptionAboveMediaProp|null[0]
    abstract var showCaptionAboveMedia // eu.vendeli.tgbot.types.internal.options/ShowCaptionAboveMediaProp.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
        abstract fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ShowCaptionAboveMediaProp.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        abstract fun <set-showCaptionAboveMedia>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ShowCaptionAboveMediaProp.showCaptionAboveMedia.<set-showCaptionAboveMedia>|<set-showCaptionAboveMedia>(kotlin.Boolean?){}[0]
}

abstract interface eu.vendeli.tgbot.types.internal.options/ThumbnailProp : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/ThumbnailProp|null[0]
    abstract var thumbnail // eu.vendeli.tgbot.types.internal.options/ThumbnailProp.thumbnail|{}thumbnail[0]
        abstract fun <get-thumbnail>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/ThumbnailProp.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
        abstract fun <set-thumbnail>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.types.internal.options/ThumbnailProp.thumbnail.<set-thumbnail>|<set-thumbnail>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]
}

abstract interface eu.vendeli.tgbot.types.internal/IdLong { // eu.vendeli.tgbot.types.internal/IdLong|null[0]
    abstract val id // eu.vendeli.tgbot.types.internal/IdLong.id|{}id[0]
        abstract fun <get-id>(): kotlin/Long // eu.vendeli.tgbot.types.internal/IdLong.id.<get-id>|<get-id>(){}[0]
}

abstract interface eu.vendeli.tgbot.types.internal/TextReference { // eu.vendeli.tgbot.types.internal/TextReference|null[0]
    open val text // eu.vendeli.tgbot.types.internal/TextReference.text|{}text[0]
        open fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/TextReference.text.<get-text>|<get-text>(){}[0]
}

abstract interface eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/UserReference|null[0]
    abstract val user // eu.vendeli.tgbot.types.internal/UserReference.user|{}user[0]
        abstract fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.internal/UserReference.user.<get-user>|<get-user>(){}[0]
}

abstract interface eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder { // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder|null[0]
    abstract fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).addEntity(eu.vendeli.tgbot.types.msg/MessageEntity) // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.addEntity|addEntity@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(eu.vendeli.tgbot.types.msg.MessageEntity){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).blockquote(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.blockquote|blockquote@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).bold(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.bold|bold@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).botCommand(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.botCommand|botCommand@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).cashtag(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.cashtag|cashtag@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).code(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.code|code@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).customEmoji(kotlin/String? = ..., kotlin/Function0<kotlin/String>): kotlin/Triple<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String, kotlin/String?> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.customEmoji|customEmoji@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.String?;kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).email(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.email|email@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).expandableBlockquote(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.expandableBlockquote|expandableBlockquote@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).hashtag(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.hashtag|hashtag@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).italic(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.italic|italic@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).mention(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.mention|mention@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).phoneNumber(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.phoneNumber|phoneNumber@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).pre(kotlin/String? = ..., kotlin/Function0<kotlin/String>): kotlin/Triple<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String, kotlin/String?> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.pre|pre@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.String?;kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).spoiler(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.spoiler|spoiler@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).strikethrough(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.strikethrough|strikethrough@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).textLink(kotlin/String? = ..., kotlin/Function0<kotlin/String>): kotlin/Triple<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String, kotlin/String?> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.textLink|textLink@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.String?;kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).textMention(eu.vendeli.tgbot.types/User? = ..., kotlin/Function0<kotlin/String>): kotlin/Triple<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String, eu.vendeli.tgbot.types/User?> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.textMention|textMention@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(eu.vendeli.tgbot.types.User?;kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).underline(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.underline|underline@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder).url(kotlin/Function0<kotlin/String>): kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String> // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.url|url@eu.vendeli.tgbot.utils.builders.EntitiesExtBuilder(kotlin.Function0<kotlin.String>){}[0]
    open fun (kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String>).minus(kotlin/String): kotlin/String // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.minus|minus@kotlin.Pair<eu.vendeli.tgbot.types.msg.EntityType,kotlin.String>(kotlin.String){}[0]
    open fun (kotlin/String).minus(kotlin/Pair<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String>): kotlin/String // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.minus|minus@kotlin.String(kotlin.Pair<eu.vendeli.tgbot.types.msg.EntityType,kotlin.String>){}[0]
    open fun (kotlin/String).minus(kotlin/String): kotlin/String // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.minus|minus@kotlin.String(kotlin.String){}[0]
    open fun <#A1: kotlin/Any?> (kotlin/String).minus(kotlin/Triple<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String, #A1?>): kotlin/String // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.minus|minus@kotlin.String(kotlin.Triple<eu.vendeli.tgbot.types.msg.EntityType,kotlin.String,0:0?>){0§<kotlin.Any?>}[0]
    open fun <#A1: kotlin/Any?> (kotlin/Triple<eu.vendeli.tgbot.types.msg/EntityType, kotlin/String, #A1?>).minus(kotlin/String): kotlin/String // eu.vendeli.tgbot.utils.builders/EntitiesExtBuilder.minus|minus@kotlin.Triple<eu.vendeli.tgbot.types.msg.EntityType,kotlin.String,0:0?>(kotlin.String){0§<kotlin.Any?>}[0]
}

sealed interface eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/Options|null[0]
    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.internal.options/Options.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/Options> // eu.vendeli.tgbot.types.internal.options/Options.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.internal.options/Options.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed interface eu.vendeli.tgbot.types.internal.options/OptionsCommon : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/OptionsCommon|null[0]
    abstract var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/OptionsCommon.allowPaidBroadcast|{}allowPaidBroadcast[0]
        abstract fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/OptionsCommon.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        abstract fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/OptionsCommon.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    abstract var disableNotification // eu.vendeli.tgbot.types.internal.options/OptionsCommon.disableNotification|{}disableNotification[0]
        abstract fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/OptionsCommon.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        abstract fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/OptionsCommon.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    abstract var protectContent // eu.vendeli.tgbot.types.internal.options/OptionsCommon.protectContent|{}protectContent[0]
        abstract fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/OptionsCommon.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        abstract fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/OptionsCommon.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    abstract var replyParameters // eu.vendeli.tgbot.types.internal.options/OptionsCommon.replyParameters|{}replyParameters[0]
        abstract fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/OptionsCommon.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        abstract fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/OptionsCommon.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]
    open var replyToMessageId // eu.vendeli.tgbot.types.internal.options/OptionsCommon.replyToMessageId|{}replyToMessageId[0]
        open fun <get-replyToMessageId>(): kotlin/Long? // eu.vendeli.tgbot.types.internal.options/OptionsCommon.replyToMessageId.<get-replyToMessageId>|<get-replyToMessageId>(){}[0]
        open fun <set-replyToMessageId>(kotlin/Long?) // eu.vendeli.tgbot.types.internal.options/OptionsCommon.replyToMessageId.<set-replyToMessageId>|<set-replyToMessageId>(kotlin.Long?){}[0]

    open fun replyParameters(kotlin/Long, kotlin/Function1<eu.vendeli.tgbot.types/ReplyParameters, kotlin/Unit> = ...) // eu.vendeli.tgbot.types.internal.options/OptionsCommon.replyParameters|replyParameters(kotlin.Long;kotlin.Function1<eu.vendeli.tgbot.types.ReplyParameters,kotlin.Unit>){}[0]

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.internal.options/OptionsCommon.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/OptionsCommon> // eu.vendeli.tgbot.types.internal.options/OptionsCommon.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.internal.options/OptionsCommon.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

abstract class <#A: eu.vendeli.tgbot.interfaces.marker/Button> eu.vendeli.tgbot.utils.builders/KeyboardBuilder { // eu.vendeli.tgbot.utils.builders/KeyboardBuilder|null[0]
    constructor <init>() // eu.vendeli.tgbot.utils.builders/KeyboardBuilder.<init>|<init>(){}[0]

    abstract val buttons // eu.vendeli.tgbot.utils.builders/KeyboardBuilder.buttons|{}buttons[0]
        abstract fun <get-buttons>(): kotlin.collections/MutableList<#A?> // eu.vendeli.tgbot.utils.builders/KeyboardBuilder.buttons.<get-buttons>|<get-buttons>(){}[0]

    final fun br() // eu.vendeli.tgbot.utils.builders/KeyboardBuilder.br|br(){}[0]
    final fun newLine() // eu.vendeli.tgbot.utils.builders/KeyboardBuilder.newLine|newLine(){}[0]
}

abstract class <#A: kotlin/Any?, #B: kotlin/Any?> eu.vendeli.tgbot.types.internal.chain/StatefulLink : eu.vendeli.tgbot.types.internal.chain/Link<#B> { // eu.vendeli.tgbot.types.internal.chain/StatefulLink|null[0]
    constructor <init>() // eu.vendeli.tgbot.types.internal.chain/StatefulLink.<init>|<init>(){}[0]

    abstract val state // eu.vendeli.tgbot.types.internal.chain/StatefulLink.state|{}state[0]
        abstract fun <get-state>(): eu.vendeli.tgbot.types.internal.chain/LinkStateManager<#A, #B> // eu.vendeli.tgbot.types.internal.chain/StatefulLink.state.<get-state>|<get-state>(){}[0]
    open val afterAction // eu.vendeli.tgbot.types.internal.chain/StatefulLink.afterAction|{}afterAction[0]
        open fun <get-afterAction>(): eu.vendeli.tgbot.types.internal/Action? // eu.vendeli.tgbot.types.internal.chain/StatefulLink.afterAction.<get-afterAction>|<get-afterAction>(){}[0]
    open val beforeAction // eu.vendeli.tgbot.types.internal.chain/StatefulLink.beforeAction|{}beforeAction[0]
        open fun <get-beforeAction>(): eu.vendeli.tgbot.types.internal/Action? // eu.vendeli.tgbot.types.internal.chain/StatefulLink.beforeAction.<get-beforeAction>|<get-beforeAction>(){}[0]
    open val breakCondition // eu.vendeli.tgbot.types.internal.chain/StatefulLink.breakCondition|{}breakCondition[0]
        open fun <get-breakCondition>(): eu.vendeli.tgbot.types.internal/BreakCondition? // eu.vendeli.tgbot.types.internal.chain/StatefulLink.breakCondition.<get-breakCondition>|<get-breakCondition>(){}[0]
    open val retryAfterBreak // eu.vendeli.tgbot.types.internal.chain/StatefulLink.retryAfterBreak|{}retryAfterBreak[0]
        open fun <get-retryAfterBreak>(): kotlin/Boolean // eu.vendeli.tgbot.types.internal.chain/StatefulLink.retryAfterBreak.<get-retryAfterBreak>|<get-retryAfterBreak>(){}[0]
}

abstract class <#A: kotlin/Any?> eu.vendeli.tgbot.implementations/BotContextMapImpl : eu.vendeli.tgbot.interfaces.ctx/BotContext<#A> { // eu.vendeli.tgbot.implementations/BotContextMapImpl|null[0]
    constructor <init>() // eu.vendeli.tgbot.implementations/BotContextMapImpl.<init>|<init>(){}[0]

    final val storage // eu.vendeli.tgbot.implementations/BotContextMapImpl.storage|{}storage[0]
        final fun <get-storage>(): io.ktor.util.collections/ConcurrentMap<kotlin/String, #A?> // eu.vendeli.tgbot.implementations/BotContextMapImpl.storage.<get-storage>|<get-storage>(){}[0]

    open fun del(kotlin/Long, kotlin/String) // eu.vendeli.tgbot.implementations/BotContextMapImpl.del|del(kotlin.Long;kotlin.String){}[0]
    open fun get(kotlin/Long, kotlin/String): #A? // eu.vendeli.tgbot.implementations/BotContextMapImpl.get|get(kotlin.Long;kotlin.String){}[0]
    open fun set(kotlin/Long, kotlin/String, #A?) // eu.vendeli.tgbot.implementations/BotContextMapImpl.set|set(kotlin.Long;kotlin.String;1:0?){}[0]
    open suspend fun delAsync(kotlin/Long, kotlin/String): kotlinx.coroutines/Deferred<kotlin/Boolean> // eu.vendeli.tgbot.implementations/BotContextMapImpl.delAsync|delAsync(kotlin.Long;kotlin.String){}[0]
    open suspend fun getAsync(kotlin/Long, kotlin/String): kotlinx.coroutines/Deferred<#A?> // eu.vendeli.tgbot.implementations/BotContextMapImpl.getAsync|getAsync(kotlin.Long;kotlin.String){}[0]
    open suspend fun setAsync(kotlin/Long, kotlin/String, #A?): kotlinx.coroutines/Deferred<kotlin/Boolean> // eu.vendeli.tgbot.implementations/BotContextMapImpl.setAsync|setAsync(kotlin.Long;kotlin.String;1:0?){}[0]
}

abstract class <#A: kotlin/Any?> eu.vendeli.tgbot.interfaces.action/Action : eu.vendeli.tgbot.interfaces.action/TgAction<#A> { // eu.vendeli.tgbot.interfaces.action/Action|null[0]
    constructor <init>() // eu.vendeli.tgbot.interfaces.action/Action.<init>|<init>(){}[0]

    final suspend fun send(kotlin/Long, eu.vendeli.tgbot/TelegramBot) // eu.vendeli.tgbot.interfaces.action/Action.send|send(kotlin.Long;eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend fun send(kotlin/String, eu.vendeli.tgbot/TelegramBot) // eu.vendeli.tgbot.interfaces.action/Action.send|send(kotlin.String;eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend fun sendAsync(kotlin/Long, eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/Action.sendAsync|sendAsync(kotlin.Long;eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend fun sendAsync(kotlin/String, eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/Action.sendAsync|sendAsync(kotlin.String;eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend fun sendReturning(kotlin/Long, eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/Action.sendReturning|sendReturning(kotlin.Long;eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend fun sendReturning(kotlin/String, eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/Action.sendReturning|sendReturning(kotlin.String;eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend inline fun send(eu.vendeli.tgbot.types.chat/Chat, eu.vendeli.tgbot/TelegramBot) // eu.vendeli.tgbot.interfaces.action/Action.send|send(eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend inline fun send(eu.vendeli.tgbot.types/User, eu.vendeli.tgbot/TelegramBot) // eu.vendeli.tgbot.interfaces.action/Action.send|send(eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend inline fun sendAsync(eu.vendeli.tgbot.types.chat/Chat, eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/Action.sendAsync|sendAsync(eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend inline fun sendAsync(eu.vendeli.tgbot.types/User, eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/Action.sendAsync|sendAsync(eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend inline fun sendReturning(eu.vendeli.tgbot.types.chat/Chat, eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/Action.sendReturning|sendReturning(eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend inline fun sendReturning(eu.vendeli.tgbot.types/User, eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/Action.sendReturning|sendReturning(eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.TelegramBot){}[0]
}

abstract class <#A: kotlin/Any?> eu.vendeli.tgbot.interfaces.action/MediaAction : eu.vendeli.tgbot.interfaces.action/Action<#A> { // eu.vendeli.tgbot.interfaces.action/MediaAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.interfaces.action/MediaAction.<init>|<init>(){}[0]
}

abstract class <#A: kotlin/Any?> eu.vendeli.tgbot.interfaces.action/SimpleAction : eu.vendeli.tgbot.interfaces.action/TgAction<#A> { // eu.vendeli.tgbot.interfaces.action/SimpleAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.interfaces.action/SimpleAction.<init>|<init>(){}[0]

    final suspend fun send(eu.vendeli.tgbot/TelegramBot) // eu.vendeli.tgbot.interfaces.action/SimpleAction.send|send(eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend inline fun sendAsync(eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/SimpleAction.sendAsync|sendAsync(eu.vendeli.tgbot.TelegramBot){}[0]
    final suspend inline fun sendReturning(eu.vendeli.tgbot/TelegramBot): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>> // eu.vendeli.tgbot.interfaces.action/SimpleAction.sendReturning|sendReturning(eu.vendeli.tgbot.TelegramBot){}[0]
}

abstract class <#A: kotlin/Any?> eu.vendeli.tgbot.interfaces.action/TgAction : eu.vendeli.tgbot.interfaces.action/Request<#A> { // eu.vendeli.tgbot.interfaces.action/TgAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.interfaces.action/TgAction.<init>|<init>(){}[0]

    abstract val returnType // eu.vendeli.tgbot.interfaces.action/TgAction.returnType|{}returnType[0]
        abstract fun <get-returnType>(): kotlinx.serialization/KSerializer<#A> // eu.vendeli.tgbot.interfaces.action/TgAction.returnType.<get-returnType>|<get-returnType>(){}[0]
    open val beforeReq // eu.vendeli.tgbot.interfaces.action/TgAction.beforeReq|{}beforeReq[0]
        open fun <get-beforeReq>(): kotlin/Function0<kotlin/Unit> // eu.vendeli.tgbot.interfaces.action/TgAction.beforeReq.<get-beforeReq>|<get-beforeReq>(){}[0]

    final fun toWebhookResponse(): kotlin/String // eu.vendeli.tgbot.interfaces.action/TgAction.toWebhookResponse|toWebhookResponse(){}[0]
}

abstract class eu.vendeli.tgbot.types.internal.chain/BaseStatefulLink : eu.vendeli.tgbot.types.internal.chain/StatefulLink<eu.vendeli.tgbot.types.internal/IdLong, kotlin/String> { // eu.vendeli.tgbot.types.internal.chain/BaseStatefulLink|null[0]
    constructor <init>() // eu.vendeli.tgbot.types.internal.chain/BaseStatefulLink.<init>|<init>(){}[0]

    open val state // eu.vendeli.tgbot.types.internal.chain/BaseStatefulLink.state|{}state[0]
        open fun <get-state>(): eu.vendeli.tgbot.types.internal.chain/LinkStateManager<eu.vendeli.tgbot.types.internal/IdLong, kotlin/String> // eu.vendeli.tgbot.types.internal.chain/BaseStatefulLink.state.<get-state>|<get-state>(){}[0]
}

abstract class eu.vendeli.tgbot.types.internal/ChainLink : eu.vendeli.tgbot.types.internal.chain/Link<kotlin/Unit> { // eu.vendeli.tgbot.types.internal/ChainLink|null[0]
    constructor <init>() // eu.vendeli.tgbot.types.internal/ChainLink.<init>|<init>(){}[0]

    open val afterAction // eu.vendeli.tgbot.types.internal/ChainLink.afterAction|{}afterAction[0]
        open fun <get-afterAction>(): eu.vendeli.tgbot.types.internal/Action? // eu.vendeli.tgbot.types.internal/ChainLink.afterAction.<get-afterAction>|<get-afterAction>(){}[0]
    open val beforeAction // eu.vendeli.tgbot.types.internal/ChainLink.beforeAction|{}beforeAction[0]
        open fun <get-beforeAction>(): eu.vendeli.tgbot.types.internal/Action? // eu.vendeli.tgbot.types.internal/ChainLink.beforeAction.<get-beforeAction>|<get-beforeAction>(){}[0]
    open val breakCondition // eu.vendeli.tgbot.types.internal/ChainLink.breakCondition|{}breakCondition[0]
        open fun <get-breakCondition>(): eu.vendeli.tgbot.types.internal/BreakCondition? // eu.vendeli.tgbot.types.internal/ChainLink.breakCondition.<get-breakCondition>|<get-breakCondition>(){}[0]
    open val retryAfterBreak // eu.vendeli.tgbot.types.internal/ChainLink.retryAfterBreak|{}retryAfterBreak[0]
        open fun <get-retryAfterBreak>(): kotlin/Boolean // eu.vendeli.tgbot.types.internal/ChainLink.retryAfterBreak.<get-retryAfterBreak>|<get-retryAfterBreak>(){}[0]
}

final class <#A: kotlin/Any> eu.vendeli.tgbot.utils.builders/ListingBuilder { // eu.vendeli.tgbot.utils.builders/ListingBuilder|null[0]
    constructor <init>() // eu.vendeli.tgbot.utils.builders/ListingBuilder.<init>|<init>(){}[0]

    final fun (#A).unaryPlus() // eu.vendeli.tgbot.utils.builders/ListingBuilder.unaryPlus|unaryPlus@1:0(){}[0]
    final fun add(#A) // eu.vendeli.tgbot.utils.builders/ListingBuilder.add|add(1:0){}[0]
    final fun addAll(kotlin/Array<out #A>...): kotlin/Boolean // eu.vendeli.tgbot.utils.builders/ListingBuilder.addAll|addAll(kotlin.Array<out|1:0>...){}[0]
}

final class <#A: out eu.vendeli.tgbot.types.internal/ProcessedUpdate> eu.vendeli.tgbot.types.internal/ActivityCtx { // eu.vendeli.tgbot.types.internal/ActivityCtx|null[0]
    constructor <init>(#A) // eu.vendeli.tgbot.types.internal/ActivityCtx.<init>|<init>(1:0){}[0]

    final val update // eu.vendeli.tgbot.types.internal/ActivityCtx.update|{}update[0]
        final fun <get-update>(): #A // eu.vendeli.tgbot.types.internal/ActivityCtx.update.<get-update>|<get-update>(){}[0]

    final fun component1(): #A // eu.vendeli.tgbot.types.internal/ActivityCtx.component1|component1(){}[0]
    final fun copy(#A = ...): eu.vendeli.tgbot.types.internal/ActivityCtx<#A> // eu.vendeli.tgbot.types.internal/ActivityCtx.copy|copy(1:0){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/ActivityCtx.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/ActivityCtx.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/ActivityCtx.toString|toString(){}[0]
}

final class <#A: out eu.vendeli.tgbot.types.internal/ProcessedUpdate> eu.vendeli.tgbot.types.internal/CommandContext { // eu.vendeli.tgbot.types.internal/CommandContext|null[0]
    constructor <init>(#A, kotlin.collections/Map<kotlin/String, kotlin/String>) // eu.vendeli.tgbot.types.internal/CommandContext.<init>|<init>(1:0;kotlin.collections.Map<kotlin.String,kotlin.String>){}[0]

    final val parameters // eu.vendeli.tgbot.types.internal/CommandContext.parameters|{}parameters[0]
        final fun <get-parameters>(): kotlin.collections/Map<kotlin/String, kotlin/String> // eu.vendeli.tgbot.types.internal/CommandContext.parameters.<get-parameters>|<get-parameters>(){}[0]
    final val update // eu.vendeli.tgbot.types.internal/CommandContext.update|{}update[0]
        final fun <get-update>(): #A // eu.vendeli.tgbot.types.internal/CommandContext.update.<get-update>|<get-update>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/CommandContext.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/CommandContext.user.<get-user>|<get-user>(){}[0]

    final fun component1(): #A // eu.vendeli.tgbot.types.internal/CommandContext.component1|component1(){}[0]
    final fun component2(): kotlin.collections/Map<kotlin/String, kotlin/String> // eu.vendeli.tgbot.types.internal/CommandContext.component2|component2(){}[0]
    final fun copy(#A = ..., kotlin.collections/Map<kotlin/String, kotlin/String> = ...): eu.vendeli.tgbot.types.internal/CommandContext<#A> // eu.vendeli.tgbot.types.internal/CommandContext.copy|copy(1:0;kotlin.collections.Map<kotlin.String,kotlin.String>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/CommandContext.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/CommandContext.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/CommandContext.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.api.answer/AnswerCallbackQueryAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.answer/AnswerCallbackQueryAction, eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions> { // eu.vendeli.tgbot.api.answer/AnswerCallbackQueryAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.answer/AnswerCallbackQueryAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.answer/AnswerInlineQueryAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.answer/AnswerInlineQueryAction, eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions> { // eu.vendeli.tgbot.api.answer/AnswerInlineQueryAction|null[0]
    constructor <init>(kotlin/String, kotlin.collections/List<eu.vendeli.tgbot.types.inline/InlineQueryResult>) // eu.vendeli.tgbot.api.answer/AnswerInlineQueryAction.<init>|<init>(kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.inline.InlineQueryResult>){}[0]
}

final class eu.vendeli.tgbot.api.answer/AnswerPreCheckoutQueryAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.answer/AnswerPreCheckoutQueryAction|null[0]
    constructor <init>(kotlin/String, kotlin/Boolean = ..., kotlin/String? = ...) // eu.vendeli.tgbot.api.answer/AnswerPreCheckoutQueryAction.<init>|<init>(kotlin.String;kotlin.Boolean;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.answer/AnswerShippingQueryAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.answer/AnswerShippingQueryAction|null[0]
    constructor <init>(kotlin/String, kotlin/Boolean = ..., kotlin.collections/List<eu.vendeli.tgbot.types.payment/ShippingOption>? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.api.answer/AnswerShippingQueryAction.<init>|<init>(kotlin.String;kotlin.Boolean;kotlin.collections.List<eu.vendeli.tgbot.types.payment.ShippingOption>?;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.answer/AnswerWebAppQueryAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types/SentWebAppMessage> { // eu.vendeli.tgbot.api.answer/AnswerWebAppQueryAction|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types.inline/InlineQueryResult) // eu.vendeli.tgbot.api.answer/AnswerWebAppQueryAction.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.inline.InlineQueryResult){}[0]
}

final class eu.vendeli.tgbot.api.botactions/CloseAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.botactions/CloseAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.botactions/CloseAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.botactions/CreateInvoiceLinkAction : eu.vendeli.tgbot.interfaces.action/BusinessActionExt<kotlin/String>, eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/String>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.botactions/CreateInvoiceLinkAction, eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions> { // eu.vendeli.tgbot.api.botactions/CreateInvoiceLinkAction|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String, eu.vendeli.tgbot.types.internal/Currency, kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice>) // eu.vendeli.tgbot.api.botactions/CreateInvoiceLinkAction.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;eu.vendeli.tgbot.types.internal.Currency;kotlin.collections.List<eu.vendeli.tgbot.types.payment.LabeledPrice>){}[0]
}

final class eu.vendeli.tgbot.api.botactions/DeleteMyCommandsAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.botactions/DeleteMyCommandsAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.bot/BotCommandScope? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.api.botactions/DeleteMyCommandsAction.<init>|<init>(eu.vendeli.tgbot.types.bot.BotCommandScope?;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/DeleteWebhookAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.botactions/DeleteWebhookAction|null[0]
    constructor <init>(kotlin/Boolean = ...) // eu.vendeli.tgbot.api.botactions/DeleteWebhookAction.<init>|<init>(kotlin.Boolean){}[0]
}

final class eu.vendeli.tgbot.api.botactions/EditUserStarSubscriptionAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.botactions/EditUserStarSubscriptionAction|null[0]
    constructor <init>(kotlin/Long, kotlin/String, kotlin/Boolean) // eu.vendeli.tgbot.api.botactions/EditUserStarSubscriptionAction.<init>|<init>(kotlin.Long;kotlin.String;kotlin.Boolean){}[0]
}

final class eu.vendeli.tgbot.api.botactions/GetAvailableGiftsAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types.user/Gifts> { // eu.vendeli.tgbot.api.botactions/GetAvailableGiftsAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.botactions/GetAvailableGiftsAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.botactions/GetBusinessConnectionAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types.business/BusinessConnection> { // eu.vendeli.tgbot.api.botactions/GetBusinessConnectionAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.botactions/GetBusinessConnectionAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.botactions/GetMeAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types/User> { // eu.vendeli.tgbot.api.botactions/GetMeAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.botactions/GetMeAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.botactions/GetMyCommandsAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin.collections/List<eu.vendeli.tgbot.types.bot/BotCommand>> { // eu.vendeli.tgbot.api.botactions/GetMyCommandsAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.bot/BotCommandScope? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.api.botactions/GetMyCommandsAction.<init>|<init>(eu.vendeli.tgbot.types.bot.BotCommandScope?;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/GetMyDefaultAdministratorRightsAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types.chat/ChatAdministratorRights> { // eu.vendeli.tgbot.api.botactions/GetMyDefaultAdministratorRightsAction|null[0]
    constructor <init>(kotlin/Boolean? = ...) // eu.vendeli.tgbot.api.botactions/GetMyDefaultAdministratorRightsAction.<init>|<init>(kotlin.Boolean?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/GetMyDescriptionAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types.bot/BotDescription> { // eu.vendeli.tgbot.api.botactions/GetMyDescriptionAction|null[0]
    constructor <init>(kotlin/String? = ...) // eu.vendeli.tgbot.api.botactions/GetMyDescriptionAction.<init>|<init>(kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/GetMyNameAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types.bot/BotName> { // eu.vendeli.tgbot.api.botactions/GetMyNameAction|null[0]
    constructor <init>(kotlin/String? = ...) // eu.vendeli.tgbot.api.botactions/GetMyNameAction.<init>|<init>(kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/GetMyShortDescriptionAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types.bot/BotShortDescription> { // eu.vendeli.tgbot.api.botactions/GetMyShortDescriptionAction|null[0]
    constructor <init>(kotlin/String? = ...) // eu.vendeli.tgbot.api.botactions/GetMyShortDescriptionAction.<init>|<init>(kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/GetStarTransactionsAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types.stars/StarTransactions> { // eu.vendeli.tgbot.api.botactions/GetStarTransactionsAction|null[0]
    constructor <init>(kotlin/Int? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.api.botactions/GetStarTransactionsAction.<init>|<init>(kotlin.Int?;kotlin.Int?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/GetUpdatesAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin.collections/List<eu.vendeli.tgbot.types.internal/ProcessedUpdate>>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.botactions/GetUpdatesAction, eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions> { // eu.vendeli.tgbot.api.botactions/GetUpdatesAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.botactions/GetUpdatesAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.botactions/GetWebhookInfoAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types/WebhookInfo> { // eu.vendeli.tgbot.api.botactions/GetWebhookInfoAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.botactions/GetWebhookInfoAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.botactions/LogOutAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.botactions/LogOutAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.botactions/LogOutAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.botactions/RefundStarPaymentAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.botactions/RefundStarPaymentAction|null[0]
    constructor <init>(kotlin/String, kotlin/Long) // eu.vendeli.tgbot.api.botactions/RefundStarPaymentAction.<init>|<init>(kotlin.String;kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.botactions/SavePreparedInlineMessageAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types.msg/PreparedInlineMessage>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.botactions/SavePreparedInlineMessageAction, eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions> { // eu.vendeli.tgbot.api.botactions/SavePreparedInlineMessageAction|null[0]
    constructor <init>(kotlin/Long, eu.vendeli.tgbot.types.inline/InlineQueryResult) // eu.vendeli.tgbot.api.botactions/SavePreparedInlineMessageAction.<init>|<init>(kotlin.Long;eu.vendeli.tgbot.types.inline.InlineQueryResult){}[0]
}

final class eu.vendeli.tgbot.api.botactions/SendGiftAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean>, eu.vendeli.tgbot.interfaces.features/EntitiesFeature<eu.vendeli.tgbot.api.botactions/SendGiftAction> { // eu.vendeli.tgbot.api.botactions/SendGiftAction|null[0]
    constructor <init>(kotlin/String, kotlin/Long? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.api.botactions/SendGiftAction.<init>|<init>(kotlin.String;kotlin.Long?;kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/SetMyCommandsAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.botactions/SetMyCommandsAction|null[0]
    constructor <init>(kotlin/String? = ..., eu.vendeli.tgbot.types.bot/BotCommandScope? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.bot/BotCommand>) // eu.vendeli.tgbot.api.botactions/SetMyCommandsAction.<init>|<init>(kotlin.String?;eu.vendeli.tgbot.types.bot.BotCommandScope?;kotlin.collections.List<eu.vendeli.tgbot.types.bot.BotCommand>){}[0]
}

final class eu.vendeli.tgbot.api.botactions/SetMyDefaultAdministratorRightsAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.botactions/SetMyDefaultAdministratorRightsAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.chat/ChatAdministratorRights? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.api.botactions/SetMyDefaultAdministratorRightsAction.<init>|<init>(eu.vendeli.tgbot.types.chat.ChatAdministratorRights?;kotlin.Boolean?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/SetMyDescriptionAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.botactions/SetMyDescriptionAction|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.api.botactions/SetMyDescriptionAction.<init>|<init>(kotlin.String?;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/SetMyNameAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.botactions/SetMyNameAction|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.api.botactions/SetMyNameAction.<init>|<init>(kotlin.String?;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/SetMyShortDescriptionAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.botactions/SetMyShortDescriptionAction|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.api.botactions/SetMyShortDescriptionAction.<init>|<init>(kotlin.String?;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/SetUserEmojiStatusAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.botactions/SetUserEmojiStatusAction|null[0]
    constructor <init>(kotlin/Long, kotlin/String? = ..., kotlinx.datetime/Instant? = ...) // eu.vendeli.tgbot.api.botactions/SetUserEmojiStatusAction.<init>|<init>(kotlin.Long;kotlin.String?;kotlinx.datetime.Instant?){}[0]
}

final class eu.vendeli.tgbot.api.botactions/SetWebhookAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.botactions/SetWebhookAction, eu.vendeli.tgbot.types.internal.options/SetWebhookOptions> { // eu.vendeli.tgbot.api.botactions/SetWebhookAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.botactions/SetWebhookAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.chat/ApproveChatJoinRequestAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/ApproveChatJoinRequestAction|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api.chat/ApproveChatJoinRequestAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.chat/BanChatMemberAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/BanChatMemberAction|null[0]
    constructor <init>(kotlin/Long, kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.api.chat/BanChatMemberAction.<init>|<init>(kotlin.Long;kotlinx.datetime.Instant?;kotlin.Boolean?){}[0]
}

final class eu.vendeli.tgbot.api.chat/BanChatSenderChatAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/BanChatSenderChatAction|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api.chat/BanChatSenderChatAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.chat/CreateChatInviteLinkAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.chat/ChatInviteLink>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.chat/CreateChatInviteLinkAction, eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions> { // eu.vendeli.tgbot.api.chat/CreateChatInviteLinkAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.chat/CreateChatInviteLinkAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.chat/CreateChatSubscriptionInviteLinkAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.chat/ChatInviteLink> { // eu.vendeli.tgbot.api.chat/CreateChatSubscriptionInviteLinkAction|null[0]
    constructor <init>(kotlin/Int, kotlin/String? = ..., kotlin.time/Duration) // eu.vendeli.tgbot.api.chat/CreateChatSubscriptionInviteLinkAction.<init>|<init>(kotlin.Int;kotlin.String?;kotlin.time.Duration){}[0]
}

final class eu.vendeli.tgbot.api.chat/DeclineChatJoinRequestAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/DeclineChatJoinRequestAction|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api.chat/DeclineChatJoinRequestAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.chat/DeleteChatPhotoAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/DeleteChatPhotoAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.chat/DeleteChatPhotoAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.chat/DeleteChatStickerSetAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/DeleteChatStickerSetAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.chat/DeleteChatStickerSetAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.chat/EditChatInviteLinkAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.chat/ChatInviteLink>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.chat/EditChatInviteLinkAction, eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions> { // eu.vendeli.tgbot.api.chat/EditChatInviteLinkAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.chat/EditChatInviteLinkAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.chat/EditChatSubscriptionInviteLinkAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.chat/ChatInviteLink> { // eu.vendeli.tgbot.api.chat/EditChatSubscriptionInviteLinkAction|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ...) // eu.vendeli.tgbot.api.chat/EditChatSubscriptionInviteLinkAction.<init>|<init>(kotlin.String;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.chat/ExportChatInviteLinkAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/String> { // eu.vendeli.tgbot.api.chat/ExportChatInviteLinkAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.chat/ExportChatInviteLinkAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.chat/GetChatAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.chat/ChatFullInfo> { // eu.vendeli.tgbot.api.chat/GetChatAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.chat/GetChatAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.chat/GetChatAdministratorsAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin.collections/List<eu.vendeli.tgbot.types.chat/ChatMember>> { // eu.vendeli.tgbot.api.chat/GetChatAdministratorsAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.chat/GetChatAdministratorsAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.chat/GetChatMemberAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.chat/ChatMember> { // eu.vendeli.tgbot.api.chat/GetChatMemberAction|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api.chat/GetChatMemberAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.chat/GetChatMemberCountAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Int> { // eu.vendeli.tgbot.api.chat/GetChatMemberCountAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.chat/GetChatMemberCountAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.chat/GetChatMenuButtonAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.keyboard/MenuButton> { // eu.vendeli.tgbot.api.chat/GetChatMenuButtonAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.chat/GetChatMenuButtonAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.chat/LeaveChatAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/LeaveChatAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.chat/LeaveChatAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.chat/PinChatMessageAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/PinChatMessageAction|null[0]
    constructor <init>(kotlin/Long, kotlin/Boolean? = ...) // eu.vendeli.tgbot.api.chat/PinChatMessageAction.<init>|<init>(kotlin.Long;kotlin.Boolean?){}[0]
}

final class eu.vendeli.tgbot.api.chat/PromoteChatMemberAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.chat/PromoteChatMemberAction, eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions> { // eu.vendeli.tgbot.api.chat/PromoteChatMemberAction|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api.chat/PromoteChatMemberAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.chat/RestrictChatMemberAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/RestrictChatMemberAction|null[0]
    constructor <init>(kotlin/Long, eu.vendeli.tgbot.types.chat/ChatPermissions, kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.api.chat/RestrictChatMemberAction.<init>|<init>(kotlin.Long;eu.vendeli.tgbot.types.chat.ChatPermissions;kotlinx.datetime.Instant?;kotlin.Boolean?){}[0]
}

final class eu.vendeli.tgbot.api.chat/RevokeChatInviteLinkAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.chat/ChatInviteLink> { // eu.vendeli.tgbot.api.chat/RevokeChatInviteLinkAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.chat/RevokeChatInviteLinkAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.chat/SendChatActionAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/SendChatActionAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.chat/ChatAction, kotlin/Int? = ...) // eu.vendeli.tgbot.api.chat/SendChatActionAction.<init>|<init>(eu.vendeli.tgbot.types.chat.ChatAction;kotlin.Int?){}[0]
}

final class eu.vendeli.tgbot.api.chat/SetChatAdministratorCustomTitleAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/SetChatAdministratorCustomTitleAction|null[0]
    constructor <init>(kotlin/Long, kotlin/String) // eu.vendeli.tgbot.api.chat/SetChatAdministratorCustomTitleAction.<init>|<init>(kotlin.Long;kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.chat/SetChatDescriptionAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/SetChatDescriptionAction|null[0]
    constructor <init>(kotlin/String? = ...) // eu.vendeli.tgbot.api.chat/SetChatDescriptionAction.<init>|<init>(kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.chat/SetChatMenuButtonAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/SetChatMenuButtonAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.keyboard/MenuButton) // eu.vendeli.tgbot.api.chat/SetChatMenuButtonAction.<init>|<init>(eu.vendeli.tgbot.types.keyboard.MenuButton){}[0]
}

final class eu.vendeli.tgbot.api.chat/SetChatPermissionsAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/SetChatPermissionsAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.chat/ChatPermissions, kotlin/Boolean? = ...) // eu.vendeli.tgbot.api.chat/SetChatPermissionsAction.<init>|<init>(eu.vendeli.tgbot.types.chat.ChatPermissions;kotlin.Boolean?){}[0]
}

final class eu.vendeli.tgbot.api.chat/SetChatPhotoAction : eu.vendeli.tgbot.interfaces.action/MediaAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/SetChatPhotoAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.api.chat/SetChatPhotoAction.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
}

final class eu.vendeli.tgbot.api.chat/SetChatStickerSetAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/SetChatStickerSetAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.chat/SetChatStickerSetAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.chat/SetChatTitleAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/SetChatTitleAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.chat/SetChatTitleAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.chat/UnbanChatMemberAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/UnbanChatMemberAction|null[0]
    constructor <init>(kotlin/Long, kotlin/Boolean? = ...) // eu.vendeli.tgbot.api.chat/UnbanChatMemberAction.<init>|<init>(kotlin.Long;kotlin.Boolean?){}[0]
}

final class eu.vendeli.tgbot.api.chat/UnbanChatSenderChatAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/UnbanChatSenderChatAction|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api.chat/UnbanChatSenderChatAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.chat/UnpinAllChatMessagesAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/UnpinAllChatMessagesAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.chat/UnpinAllChatMessagesAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.chat/UnpinChatMessageAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<kotlin/Boolean> { // eu.vendeli.tgbot.api.chat/UnpinChatMessageAction|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api.chat/UnpinChatMessageAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.forum/CloseForumTopicAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.forum/CloseForumTopicAction|null[0]
    constructor <init>(kotlin/Int) // eu.vendeli.tgbot.api.forum/CloseForumTopicAction.<init>|<init>(kotlin.Int){}[0]
}

final class eu.vendeli.tgbot.api.forum/CloseGeneralForumTopicAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.forum/CloseGeneralForumTopicAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.forum/CloseGeneralForumTopicAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.forum/CreateForumTopicAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.forum/ForumTopic> { // eu.vendeli.tgbot.api.forum/CreateForumTopicAction|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types.forum/IconColor? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.api.forum/CreateForumTopicAction.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.forum.IconColor?;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.forum/DeleteForumTopicAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.forum/DeleteForumTopicAction|null[0]
    constructor <init>(kotlin/Int) // eu.vendeli.tgbot.api.forum/DeleteForumTopicAction.<init>|<init>(kotlin.Int){}[0]
}

final class eu.vendeli.tgbot.api.forum/EditForumTopicAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.forum/EditForumTopicAction|null[0]
    constructor <init>(kotlin/Int, kotlin/String? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.api.forum/EditForumTopicAction.<init>|<init>(kotlin.Int;kotlin.String?;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.forum/EditGeneralForumTopicAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.forum/EditGeneralForumTopicAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.forum/EditGeneralForumTopicAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.forum/GetForumTopicIconStickersAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin.collections/List<eu.vendeli.tgbot.types.media/Sticker>> { // eu.vendeli.tgbot.api.forum/GetForumTopicIconStickersAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.forum/GetForumTopicIconStickersAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.forum/HideGeneralForumTopicAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.forum/HideGeneralForumTopicAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.forum/HideGeneralForumTopicAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.forum/ReopenForumTopicAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.forum/ReopenForumTopicAction|null[0]
    constructor <init>(kotlin/Int) // eu.vendeli.tgbot.api.forum/ReopenForumTopicAction.<init>|<init>(kotlin.Int){}[0]
}

final class eu.vendeli.tgbot.api.forum/ReopenGeneralForumTopicAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.forum/ReopenGeneralForumTopicAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.forum/ReopenGeneralForumTopicAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.forum/UnhideGeneralForumTopicAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.forum/UnhideGeneralForumTopicAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.forum/UnhideGeneralForumTopicAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.forum/UnpinAllForumTopicMessagesAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.forum/UnpinAllForumTopicMessagesAction|null[0]
    constructor <init>(kotlin/Int) // eu.vendeli.tgbot.api.forum/UnpinAllForumTopicMessagesAction.<init>|<init>(kotlin.Int){}[0]
}

final class eu.vendeli.tgbot.api.forum/UnpinAllGeneralForumTopicMessagesAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.forum/UnpinAllGeneralForumTopicMessagesAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.forum/UnpinAllGeneralForumTopicMessagesAction.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.api.media/SendAnimationAction : eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/MediaAction<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/CaptionFeature<eu.vendeli.tgbot.api.media/SendAnimationAction>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.media/SendAnimationAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.media/SendAnimationAction, eu.vendeli.tgbot.types.internal.options/AnimationOptions> { // eu.vendeli.tgbot.api.media/SendAnimationAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.api.media/SendAnimationAction.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
}

final class eu.vendeli.tgbot.api.media/SendAudioAction : eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/MediaAction<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/CaptionFeature<eu.vendeli.tgbot.api.media/SendAudioAction>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.media/SendAudioAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.media/SendAudioAction, eu.vendeli.tgbot.types.internal.options/AudioOptions> { // eu.vendeli.tgbot.api.media/SendAudioAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.api.media/SendAudioAction.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
}

final class eu.vendeli.tgbot.api.media/SendDocumentAction : eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/MediaAction<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/CaptionFeature<eu.vendeli.tgbot.api.media/SendDocumentAction>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.media/SendDocumentAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.media/SendDocumentAction, eu.vendeli.tgbot.types.internal.options/DocumentOptions> { // eu.vendeli.tgbot.api.media/SendDocumentAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.api.media/SendDocumentAction.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
}

final class eu.vendeli.tgbot.api.media/SendMediaGroupAction : eu.vendeli.tgbot.interfaces.action/BusinessActionExt<kotlin.collections/List<eu.vendeli.tgbot.types.msg/Message>>, eu.vendeli.tgbot.interfaces.action/MediaAction<kotlin.collections/List<eu.vendeli.tgbot.types.msg/Message>>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.media/SendMediaGroupAction, eu.vendeli.tgbot.types.internal.options/MediaGroupOptions> { // eu.vendeli.tgbot.api.media/SendMediaGroupAction|null[0]
    constructor <init>(kotlin.collections/List<eu.vendeli.tgbot.types.media/InputMedia>) // eu.vendeli.tgbot.api.media/SendMediaGroupAction.<init>|<init>(kotlin.collections.List<eu.vendeli.tgbot.types.media.InputMedia>){}[0]
}

final class eu.vendeli.tgbot.api.media/SendPaidMediaAction : eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/MediaAction<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/CaptionFeature<eu.vendeli.tgbot.api.media/SendPaidMediaAction>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.media/SendPaidMediaAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.media/SendPaidMediaAction, eu.vendeli.tgbot.types.internal.options/PaidMediaOptions> { // eu.vendeli.tgbot.api.media/SendPaidMediaAction|null[0]
    constructor <init>(kotlin/Int, kotlin.collections/List<eu.vendeli.tgbot.types.media/InputPaidMedia>) // eu.vendeli.tgbot.api.media/SendPaidMediaAction.<init>|<init>(kotlin.Int;kotlin.collections.List<eu.vendeli.tgbot.types.media.InputPaidMedia>){}[0]
}

final class eu.vendeli.tgbot.api.media/SendPhotoAction : eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/MediaAction<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/CaptionFeature<eu.vendeli.tgbot.api.media/SendPhotoAction>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.media/SendPhotoAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.media/SendPhotoAction, eu.vendeli.tgbot.types.internal.options/PhotoOptions> { // eu.vendeli.tgbot.api.media/SendPhotoAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.api.media/SendPhotoAction.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
}

final class eu.vendeli.tgbot.api.media/SendStickerAction : eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/MediaAction<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.media/SendStickerAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.media/SendStickerAction, eu.vendeli.tgbot.types.internal.options/StickerOptions> { // eu.vendeli.tgbot.api.media/SendStickerAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.api.media/SendStickerAction.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
}

final class eu.vendeli.tgbot.api.media/SendVideoAction : eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/MediaAction<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/CaptionFeature<eu.vendeli.tgbot.api.media/SendVideoAction>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.media/SendVideoAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.media/SendVideoAction, eu.vendeli.tgbot.types.internal.options/VideoOptions> { // eu.vendeli.tgbot.api.media/SendVideoAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.api.media/SendVideoAction.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
}

final class eu.vendeli.tgbot.api.media/SendVideoNoteAction : eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/MediaAction<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.media/SendVideoNoteAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.media/SendVideoNoteAction, eu.vendeli.tgbot.types.internal.options/VideoNoteOptions> { // eu.vendeli.tgbot.api.media/SendVideoNoteAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.api.media/SendVideoNoteAction.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
}

final class eu.vendeli.tgbot.api.media/SendVoiceAction : eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/MediaAction<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/CaptionFeature<eu.vendeli.tgbot.api.media/SendVoiceAction>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.media/SendVoiceAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.media/SendVoiceAction, eu.vendeli.tgbot.types.internal.options/VoiceOptions> { // eu.vendeli.tgbot.api.media/SendVoiceAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.api.media/SendVoiceAction.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
}

final class eu.vendeli.tgbot.api.message/CopyMessageAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/MessageId>, eu.vendeli.tgbot.interfaces.features/CaptionFeature<eu.vendeli.tgbot.api.message/CopyMessageAction>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.message/CopyMessageAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.message/CopyMessageAction, eu.vendeli.tgbot.types.internal.options/CopyMessageOptions> { // eu.vendeli.tgbot.api.message/CopyMessageAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/Identifier, kotlin/Long) // eu.vendeli.tgbot.api.message/CopyMessageAction.<init>|<init>(eu.vendeli.tgbot.types.internal.Identifier;kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.message/CopyMessagesAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageId>>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.message/CopyMessagesAction, eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions> { // eu.vendeli.tgbot.api.message/CopyMessagesAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/Identifier, kotlin.collections/List<kotlin/Long>) // eu.vendeli.tgbot.api.message/CopyMessagesAction.<init>|<init>(eu.vendeli.tgbot.types.internal.Identifier;kotlin.collections.List<kotlin.Long>){}[0]
}

final class eu.vendeli.tgbot.api.message/DeleteMessageAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.message/DeleteMessageAction|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api.message/DeleteMessageAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.message/DeleteMessagesAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.message/DeleteMessagesAction|null[0]
    constructor <init>(kotlin.collections/List<kotlin/Long>) // eu.vendeli.tgbot.api.message/DeleteMessagesAction.<init>|<init>(kotlin.collections.List<kotlin.Long>){}[0]
}

final class eu.vendeli.tgbot.api.message/EditMessageCaptionAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/InlineActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/CaptionFeature<eu.vendeli.tgbot.api.message/EditMessageCaptionAction>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.message/EditMessageCaptionAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.message/EditMessageCaptionAction, eu.vendeli.tgbot.types.internal.options/EditCaptionOptions> { // eu.vendeli.tgbot.api.message/EditMessageCaptionAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.message/EditMessageCaptionAction.<init>|<init>(){}[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api.message/EditMessageCaptionAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.message/EditMessageLiveLocationAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/InlineActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.message/EditMessageLiveLocationAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.message/EditMessageLiveLocationAction, eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions> { // eu.vendeli.tgbot.api.message/EditMessageLiveLocationAction|null[0]
    constructor <init>(kotlin/Float, kotlin/Float) // eu.vendeli.tgbot.api.message/EditMessageLiveLocationAction.<init>|<init>(kotlin.Float;kotlin.Float){}[0]
    constructor <init>(kotlin/Long, kotlin/Float, kotlin/Float) // eu.vendeli.tgbot.api.message/EditMessageLiveLocationAction.<init>|<init>(kotlin.Long;kotlin.Float;kotlin.Float){}[0]
}

final class eu.vendeli.tgbot.api.message/EditMessageMediaAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/InlineActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.message/EditMessageMediaAction> { // eu.vendeli.tgbot.api.message/EditMessageMediaAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.media/InputMedia) // eu.vendeli.tgbot.api.message/EditMessageMediaAction.<init>|<init>(eu.vendeli.tgbot.types.media.InputMedia){}[0]
    constructor <init>(kotlin/Long, eu.vendeli.tgbot.types.media/InputMedia) // eu.vendeli.tgbot.api.message/EditMessageMediaAction.<init>|<init>(kotlin.Long;eu.vendeli.tgbot.types.media.InputMedia){}[0]
}

final class eu.vendeli.tgbot.api.message/EditMessageReplyMarkupAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/InlineActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.message/EditMessageReplyMarkupAction> { // eu.vendeli.tgbot.api.message/EditMessageReplyMarkupAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api.message/EditMessageReplyMarkupAction.<init>|<init>(){}[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api.message/EditMessageReplyMarkupAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.message/EditMessageTextAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/InlineActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/EntitiesFeature<eu.vendeli.tgbot.api.message/EditMessageTextAction>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.message/EditMessageTextAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.message/EditMessageTextAction, eu.vendeli.tgbot.types.internal.options/EditMessageOptions>, eu.vendeli.tgbot.utils.builders/EntitiesCtxBuilder<eu.vendeli.tgbot.api.message/EditMessageTextAction> { // eu.vendeli.tgbot.api.message/EditMessageTextAction|null[0]
    constructor <init>(kotlin/Long, kotlin/String) // eu.vendeli.tgbot.api.message/EditMessageTextAction.<init>|<init>(kotlin.Long;kotlin.String){}[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.message/EditMessageTextAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.message/ForwardMessageAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.message/ForwardMessageAction, eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions> { // eu.vendeli.tgbot.api.message/ForwardMessageAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/Identifier, kotlin/Long) // eu.vendeli.tgbot.api.message/ForwardMessageAction.<init>|<init>(eu.vendeli.tgbot.types.internal.Identifier;kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.message/ForwardMessagesAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageId>>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.message/ForwardMessagesAction, eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions> { // eu.vendeli.tgbot.api.message/ForwardMessagesAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/Identifier, kotlin.collections/List<kotlin/Long>) // eu.vendeli.tgbot.api.message/ForwardMessagesAction.<init>|<init>(eu.vendeli.tgbot.types.internal.Identifier;kotlin.collections.List<kotlin.Long>){}[0]
}

final class eu.vendeli.tgbot.api.message/SendMessageAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/EntitiesFeature<eu.vendeli.tgbot.api.message/SendMessageAction>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api.message/SendMessageAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.message/SendMessageAction, eu.vendeli.tgbot.types.internal.options/MessageOptions>, eu.vendeli.tgbot.utils.builders/EntitiesCtxBuilder<eu.vendeli.tgbot.api.message/SendMessageAction> { // eu.vendeli.tgbot.api.message/SendMessageAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.message/SendMessageAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/AddStickerToSetAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.stickerset/AddStickerToSetAction|null[0]
    constructor <init>(kotlin/Long, kotlin/String, eu.vendeli.tgbot.types.media/InputSticker) // eu.vendeli.tgbot.api.stickerset/AddStickerToSetAction.<init>|<init>(kotlin.Long;kotlin.String;eu.vendeli.tgbot.types.media.InputSticker){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/CreateNewStickerSetAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api.stickerset/CreateNewStickerSetAction, eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions> { // eu.vendeli.tgbot.api.stickerset/CreateNewStickerSetAction|null[0]
    constructor <init>(kotlin/Long, kotlin/String, kotlin/String, kotlin.collections/List<eu.vendeli.tgbot.types.media/InputSticker>) // eu.vendeli.tgbot.api.stickerset/CreateNewStickerSetAction.<init>|<init>(kotlin.Long;kotlin.String;kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.media.InputSticker>){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/DeleteStickerFromSetAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.stickerset/DeleteStickerFromSetAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.stickerset/DeleteStickerFromSetAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/DeleteStickerSetAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.stickerset/DeleteStickerSetAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.stickerset/DeleteStickerSetAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/GetCustomEmojiStickersAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin.collections/List<eu.vendeli.tgbot.types.media/Sticker>> { // eu.vendeli.tgbot.api.stickerset/GetCustomEmojiStickersAction|null[0]
    constructor <init>(kotlin.collections/List<kotlin/String>) // eu.vendeli.tgbot.api.stickerset/GetCustomEmojiStickersAction.<init>|<init>(kotlin.collections.List<kotlin.String>){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/GetStickerSetAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types.media/StickerSet> { // eu.vendeli.tgbot.api.stickerset/GetStickerSetAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api.stickerset/GetStickerSetAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/ReplaceStickerInSetAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api.stickerset/ReplaceStickerInSetAction|null[0]
    constructor <init>(kotlin/Long, kotlin/String, kotlin/String, eu.vendeli.tgbot.types.media/InputSticker) // eu.vendeli.tgbot.api.stickerset/ReplaceStickerInSetAction.<init>|<init>(kotlin.Long;kotlin.String;kotlin.String;eu.vendeli.tgbot.types.media.InputSticker){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/SetCustomEmojiStickerSetThumbnailAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.stickerset/SetCustomEmojiStickerSetThumbnailAction|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ...) // eu.vendeli.tgbot.api.stickerset/SetCustomEmojiStickerSetThumbnailAction.<init>|<init>(kotlin.String;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/SetStickerEmojiListAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.stickerset/SetStickerEmojiListAction|null[0]
    constructor <init>(kotlin/String, kotlin.collections/List<kotlin/String>) // eu.vendeli.tgbot.api.stickerset/SetStickerEmojiListAction.<init>|<init>(kotlin.String;kotlin.collections.List<kotlin.String>){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/SetStickerKeywordsAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.stickerset/SetStickerKeywordsAction|null[0]
    constructor <init>(kotlin/String, kotlin.collections/List<kotlin/String>? = ...) // eu.vendeli.tgbot.api.stickerset/SetStickerKeywordsAction.<init>|<init>(kotlin.String;kotlin.collections.List<kotlin.String>?){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/SetStickerMaskPositionAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.stickerset/SetStickerMaskPositionAction|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types.media/MaskPosition? = ...) // eu.vendeli.tgbot.api.stickerset/SetStickerMaskPositionAction.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.media.MaskPosition?){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/SetStickerPositionInSetAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.stickerset/SetStickerPositionInSetAction|null[0]
    constructor <init>(kotlin/String, kotlin/Int) // eu.vendeli.tgbot.api.stickerset/SetStickerPositionInSetAction.<init>|<init>(kotlin.String;kotlin.Int){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/SetStickerSetThumbnailAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.stickerset/SetStickerSetThumbnailAction|null[0]
    constructor <init>(kotlin/String, kotlin/Long, eu.vendeli.tgbot.types.media/StickerFormat, eu.vendeli.tgbot.types.internal/ImplicitFile? = ...) // eu.vendeli.tgbot.api.stickerset/SetStickerSetThumbnailAction.<init>|<init>(kotlin.String;kotlin.Long;eu.vendeli.tgbot.types.media.StickerFormat;eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/SetStickerSetTitleAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.stickerset/SetStickerSetTitleAction|null[0]
    constructor <init>(kotlin/String, kotlin/String) // eu.vendeli.tgbot.api.stickerset/SetStickerSetTitleAction.<init>|<init>(kotlin.String;kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api.stickerset/UploadStickerFileAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types.media/File> { // eu.vendeli.tgbot.api.stickerset/UploadStickerFileAction|null[0]
    constructor <init>(kotlin/Long, eu.vendeli.tgbot.types.internal/InputFile, eu.vendeli.tgbot.types.media/StickerFormat) // eu.vendeli.tgbot.api.stickerset/UploadStickerFileAction.<init>|<init>(kotlin.Long;eu.vendeli.tgbot.types.internal.InputFile;eu.vendeli.tgbot.types.media.StickerFormat){}[0]
}

final class eu.vendeli.tgbot.api.verification/RemoveChatVerificationAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.verification/RemoveChatVerificationAction|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api.verification/RemoveChatVerificationAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.verification/RemoveUserVerificationAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.verification/RemoveUserVerificationAction|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api.verification/RemoveUserVerificationAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api.verification/VerifyChatAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.verification/VerifyChatAction|null[0]
    constructor <init>(kotlin/Long, kotlin/String? = ...) // eu.vendeli.tgbot.api.verification/VerifyChatAction.<init>|<init>(kotlin.Long;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api.verification/VerifyUserAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api.verification/VerifyUserAction|null[0]
    constructor <init>(kotlin/Long, kotlin/String? = ...) // eu.vendeli.tgbot.api.verification/VerifyUserAction.<init>|<init>(kotlin.Long;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api/GetFileAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types.media/File> { // eu.vendeli.tgbot.api/GetFileAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api/GetFileAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api/GetGameHighScoresAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin.collections/List<eu.vendeli.tgbot.types.game/GameHighScore>>, eu.vendeli.tgbot.interfaces.action/InlineActionExt<kotlin.collections/List<eu.vendeli.tgbot.types.game/GameHighScore>> { // eu.vendeli.tgbot.api/GetGameHighScoresAction|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/Identifier) // eu.vendeli.tgbot.api/GetGameHighScoresAction.<init>|<init>(eu.vendeli.tgbot.types.internal.Identifier){}[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/Identifier, kotlin/Long) // eu.vendeli.tgbot.api/GetGameHighScoresAction.<init>|<init>(eu.vendeli.tgbot.types.internal.Identifier;kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api/GetUserChatBoostsAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.boost/UserChatBoosts> { // eu.vendeli.tgbot.api/GetUserChatBoostsAction|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api/GetUserChatBoostsAction.<init>|<init>(kotlin.Long){}[0]

    final val userId // eu.vendeli.tgbot.api/GetUserChatBoostsAction.userId|{}userId[0]
        final fun <get-userId>(): kotlin/Long // eu.vendeli.tgbot.api/GetUserChatBoostsAction.userId.<get-userId>|<get-userId>(){}[0]
}

final class eu.vendeli.tgbot.api/GetUserProfilePhotosAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<eu.vendeli.tgbot.types/UserProfilePhotos> { // eu.vendeli.tgbot.api/GetUserProfilePhotosAction|null[0]
    constructor <init>(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.api/GetUserProfilePhotosAction.<init>|<init>(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
}

final class eu.vendeli.tgbot.api/SendContactAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api/SendContactAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api/SendContactAction, eu.vendeli.tgbot.types.internal.options/ContactOptions> { // eu.vendeli.tgbot.api/SendContactAction|null[0]
    constructor <init>(kotlin/String, kotlin/String) // eu.vendeli.tgbot.api/SendContactAction.<init>|<init>(kotlin.String;kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api/SendDiceAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api/SendDiceAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api/SendDiceAction, eu.vendeli.tgbot.types.internal.options/DiceOptions> { // eu.vendeli.tgbot.api/SendDiceAction|null[0]
    constructor <init>(kotlin/String? = ...) // eu.vendeli.tgbot.api/SendDiceAction.<init>|<init>(kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.api/SendGameAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api/SendGameAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api/SendGameAction, eu.vendeli.tgbot.types.internal.options/GameOptions> { // eu.vendeli.tgbot.api/SendGameAction|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.api/SendGameAction.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api/SendInvoiceAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api/SendInvoiceAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api/SendInvoiceAction, eu.vendeli.tgbot.types.internal.options/InvoiceOptions> { // eu.vendeli.tgbot.api/SendInvoiceAction|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types.internal/Currency, kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice>) // eu.vendeli.tgbot.api/SendInvoiceAction.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.internal.Currency;kotlin.collections.List<eu.vendeli.tgbot.types.payment.LabeledPrice>){}[0]
}

final class eu.vendeli.tgbot.api/SendLocationAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api/SendLocationAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api/SendLocationAction, eu.vendeli.tgbot.types.internal.options/LocationOptions> { // eu.vendeli.tgbot.api/SendLocationAction|null[0]
    constructor <init>(kotlin/Float, kotlin/Float) // eu.vendeli.tgbot.api/SendLocationAction.<init>|<init>(kotlin.Float;kotlin.Float){}[0]
}

final class eu.vendeli.tgbot.api/SendPollAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/EntitiesFeature<eu.vendeli.tgbot.api/SendPollAction>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api/SendPollAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api/SendPollAction, eu.vendeli.tgbot.types.internal.options/PollOptions> { // eu.vendeli.tgbot.api/SendPollAction|null[0]
    constructor <init>(kotlin/String, kotlin.collections/List<eu.vendeli.tgbot.types.poll/InputPollOption>) // eu.vendeli.tgbot.api/SendPollAction.<init>|<init>(kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.poll.InputPollOption>){}[0]
}

final class eu.vendeli.tgbot.api/SendVenueAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api/SendVenueAction>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api/SendVenueAction, eu.vendeli.tgbot.types.internal.options/VenueOptions> { // eu.vendeli.tgbot.api/SendVenueAction|null[0]
    constructor <init>(kotlin/Float, kotlin/Float, kotlin/String, kotlin/String) // eu.vendeli.tgbot.api/SendVenueAction.<init>|<init>(kotlin.Float;kotlin.Float;kotlin.String;kotlin.String){}[0]
}

final class eu.vendeli.tgbot.api/SetGameScoreAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/InlineActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/OptionsFeature<eu.vendeli.tgbot.api/SetGameScoreAction, eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions> { // eu.vendeli.tgbot.api/SetGameScoreAction|null[0]
    constructor <init>(kotlin/Long, kotlin/Long) // eu.vendeli.tgbot.api/SetGameScoreAction.<init>|<init>(kotlin.Long;kotlin.Long){}[0]
    constructor <init>(kotlin/Long, kotlin/Long, kotlin/Long) // eu.vendeli.tgbot.api/SetGameScoreAction.<init>|<init>(kotlin.Long;kotlin.Long;kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api/SetMessageReactionAction : eu.vendeli.tgbot.interfaces.action/Action<kotlin/Boolean> { // eu.vendeli.tgbot.api/SetMessageReactionAction|null[0]
    constructor <init>(kotlin/Long, kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType>? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.api/SetMessageReactionAction.<init>|<init>(kotlin.Long;kotlin.collections.List<eu.vendeli.tgbot.types.ReactionType>?;kotlin.Boolean?){}[0]
}

final class eu.vendeli.tgbot.api/SetPassportDataErrorsAction : eu.vendeli.tgbot.interfaces.action/SimpleAction<kotlin/Boolean> { // eu.vendeli.tgbot.api/SetPassportDataErrorsAction|null[0]
    constructor <init>(kotlin/Long, kotlin.collections/List<eu.vendeli.tgbot.types.passport/PassportElementError>) // eu.vendeli.tgbot.api/SetPassportDataErrorsAction.<init>|<init>(kotlin.Long;kotlin.collections.List<eu.vendeli.tgbot.types.passport.PassportElementError>){}[0]
}

final class eu.vendeli.tgbot.api/StopMessageLiveLocationAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.action/InlineActionExt<eu.vendeli.tgbot.types.msg/Message>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api/StopMessageLiveLocationAction> { // eu.vendeli.tgbot.api/StopMessageLiveLocationAction|null[0]
    constructor <init>() // eu.vendeli.tgbot.api/StopMessageLiveLocationAction.<init>|<init>(){}[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api/StopMessageLiveLocationAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.api/StopPollAction : eu.vendeli.tgbot.interfaces.action/Action<eu.vendeli.tgbot.types.poll/Poll>, eu.vendeli.tgbot.interfaces.action/BusinessActionExt<eu.vendeli.tgbot.types.poll/Poll>, eu.vendeli.tgbot.interfaces.features/MarkupFeature<eu.vendeli.tgbot.api/SendPollAction> { // eu.vendeli.tgbot.api/StopPollAction|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.api/StopPollAction.<init>|<init>(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.core/FunctionalHandlingDsl { // eu.vendeli.tgbot.core/FunctionalHandlingDsl|null[0]
    final fun (eu.vendeli.tgbot.types.internal.chain/SingleInputChain).andThen(eu.vendeli.tgbot.types.internal.configuration/RateLimits = ..., eu.vendeli.tgbot.interfaces.helper/Guard = ..., kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>): eu.vendeli.tgbot.types.internal.chain/SingleInputChain // eu.vendeli.tgbot.core/FunctionalHandlingDsl.andThen|andThen@eu.vendeli.tgbot.types.internal.chain.SingleInputChain(eu.vendeli.tgbot.types.internal.configuration.RateLimits;eu.vendeli.tgbot.interfaces.helper.Guard;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Unit>){}[0]
    final fun (eu.vendeli.tgbot.types.internal.chain/SingleInputChain).breakIf(kotlin/Function1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Boolean>, kotlin/Boolean = ..., kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>? = ...): eu.vendeli.tgbot.types.internal.chain/SingleInputChain // eu.vendeli.tgbot.core/FunctionalHandlingDsl.breakIf|breakIf@eu.vendeli.tgbot.types.internal.chain.SingleInputChain(kotlin.Function1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Boolean>;kotlin.Boolean;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Unit>?){}[0]
    final fun common(kotlin.text/Regex, kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Filter> = ..., kotlin.collections/Set<eu.vendeli.tgbot.types.internal/UpdateType> = ..., eu.vendeli.tgbot.types.internal.configuration/RateLimits = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> = ..., kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/CommandContext<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.core/FunctionalHandlingDsl.common|common(kotlin.text.Regex;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.Filter>;kotlin.collections.Set<eu.vendeli.tgbot.types.internal.UpdateType>;eu.vendeli.tgbot.types.internal.configuration.RateLimits;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.ArgumentParser>;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.CommandContext<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Unit>){}[0]
    final fun common(kotlin/String, kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Filter> = ..., kotlin.collections/Set<eu.vendeli.tgbot.types.internal/UpdateType> = ..., eu.vendeli.tgbot.types.internal.configuration/RateLimits = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> = ..., kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/CommandContext<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.core/FunctionalHandlingDsl.common|common(kotlin.String;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.Filter>;kotlin.collections.Set<eu.vendeli.tgbot.types.internal.UpdateType>;eu.vendeli.tgbot.types.internal.configuration.RateLimits;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.ArgumentParser>;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.CommandContext<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Unit>){}[0]
    final fun inputChain(kotlin/String, eu.vendeli.tgbot.types.internal.configuration/RateLimits = ..., eu.vendeli.tgbot.interfaces.helper/Guard = ..., kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>): eu.vendeli.tgbot.types.internal.chain/SingleInputChain // eu.vendeli.tgbot.core/FunctionalHandlingDsl.inputChain|inputChain(kotlin.String;eu.vendeli.tgbot.types.internal.configuration.RateLimits;eu.vendeli.tgbot.interfaces.helper.Guard;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Unit>){}[0]
    final fun onCommand(kotlin/String, kotlin.collections/Set<eu.vendeli.tgbot.types.internal/UpdateType> = ..., eu.vendeli.tgbot.types.internal.configuration/RateLimits = ..., eu.vendeli.tgbot.interfaces.helper/Guard = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> = ..., kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/CommandContext<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.core/FunctionalHandlingDsl.onCommand|onCommand(kotlin.String;kotlin.collections.Set<eu.vendeli.tgbot.types.internal.UpdateType>;eu.vendeli.tgbot.types.internal.configuration.RateLimits;eu.vendeli.tgbot.interfaces.helper.Guard;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.ArgumentParser>;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.CommandContext<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Unit>){}[0]
    final fun onInput(kotlin/String, eu.vendeli.tgbot.types.internal.configuration/RateLimits = ..., eu.vendeli.tgbot.interfaces.helper/Guard = ..., kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.core/FunctionalHandlingDsl.onInput|onInput(kotlin.String;eu.vendeli.tgbot.types.internal.configuration.RateLimits;eu.vendeli.tgbot.interfaces.helper.Guard;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Unit>){}[0]
    final fun whenNotHandled(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.core/FunctionalHandlingDsl.whenNotHandled|whenNotHandled(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Unit>){}[0]
}

final class eu.vendeli.tgbot.core/TgUpdateHandler { // eu.vendeli.tgbot.core/TgUpdateHandler|null[0]
    final val caughtExceptions // eu.vendeli.tgbot.core/TgUpdateHandler.caughtExceptions|{}caughtExceptions[0]
        final fun <get-caughtExceptions>(): kotlinx.coroutines.channels/Channel<eu.vendeli.tgbot.types.internal/FailedUpdate> // eu.vendeli.tgbot.core/TgUpdateHandler.caughtExceptions.<get-caughtExceptions>|<get-caughtExceptions>(){}[0]

    final fun parse(kotlin/String): kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/ProcessedUpdate?> // eu.vendeli.tgbot.core/TgUpdateHandler.parse|parse(kotlin.String){}[0]
    final fun parseAndHandle(kotlin/String): kotlinx.coroutines/Job? // eu.vendeli.tgbot.core/TgUpdateHandler.parseAndHandle|parseAndHandle(kotlin.String){}[0]
    final fun setBehaviour(kotlin.coroutines/SuspendFunction2<eu.vendeli.tgbot.core/TgUpdateHandler, eu.vendeli.tgbot.types.internal/ProcessedUpdate, kotlin/Unit>) // eu.vendeli.tgbot.core/TgUpdateHandler.setBehaviour|setBehaviour(kotlin.coroutines.SuspendFunction2<eu.vendeli.tgbot.core.TgUpdateHandler,eu.vendeli.tgbot.types.internal.ProcessedUpdate,kotlin.Unit>){}[0]
    final fun stopListener() // eu.vendeli.tgbot.core/TgUpdateHandler.stopListener|stopListener(){}[0]
    final suspend fun handle(eu.vendeli.tgbot.types.internal/ProcessedUpdate) // eu.vendeli.tgbot.core/TgUpdateHandler.handle|handle(eu.vendeli.tgbot.types.internal.ProcessedUpdate){}[0]
    final suspend fun handle(eu.vendeli.tgbot.types.internal/ProcessedUpdate, kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.core/FunctionalHandlingDsl, kotlin/Unit>) // eu.vendeli.tgbot.core/TgUpdateHandler.handle|handle(eu.vendeli.tgbot.types.internal.ProcessedUpdate;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.core.FunctionalHandlingDsl,kotlin.Unit>){}[0]
    final suspend fun setListener(kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? = ..., kotlin.coroutines/SuspendFunction2<eu.vendeli.tgbot.core/TgUpdateHandler, eu.vendeli.tgbot.types.internal/ProcessedUpdate, kotlin/Unit>) // eu.vendeli.tgbot.core/TgUpdateHandler.setListener|setListener(kotlin.collections.List<eu.vendeli.tgbot.types.internal.UpdateType>?;kotlin.coroutines.SuspendFunction2<eu.vendeli.tgbot.core.TgUpdateHandler,eu.vendeli.tgbot.types.internal.ProcessedUpdate,kotlin.Unit>){}[0]

    final object Companion // eu.vendeli.tgbot.core/TgUpdateHandler.Companion|null[0]
}

final class eu.vendeli.tgbot.implementations/ClassDataImpl : eu.vendeli.tgbot.implementations/BotContextMapImpl<kotlin/String>, eu.vendeli.tgbot.interfaces.ctx/ClassData<kotlin/String> { // eu.vendeli.tgbot.implementations/ClassDataImpl|null[0]
    constructor <init>() // eu.vendeli.tgbot.implementations/ClassDataImpl.<init>|<init>(){}[0]

    final suspend fun clearAll(kotlin/Long) // eu.vendeli.tgbot.implementations/ClassDataImpl.clearAll|clearAll(kotlin.Long){}[0]
}

final class eu.vendeli.tgbot.implementations/ClassManagerImpl : eu.vendeli.tgbot.interfaces.ctx/ClassManager { // eu.vendeli.tgbot.implementations/ClassManagerImpl|null[0]
    constructor <init>() // eu.vendeli.tgbot.implementations/ClassManagerImpl.<init>|<init>(){}[0]

    final fun getInstance(kotlin.reflect/KClass<*>, kotlin/Array<out kotlin/Any?>...): kotlin/Any // eu.vendeli.tgbot.implementations/ClassManagerImpl.getInstance|getInstance(kotlin.reflect.KClass<*>;kotlin.Array<out|kotlin.Any?>...){}[0]

    // Targets: [native]
    final val _INSTANCES // eu.vendeli.tgbot.implementations/ClassManagerImpl._INSTANCES|{}_INSTANCES[0]
        final fun <get-_INSTANCES>(): kotlin.collections/MutableMap<kotlin.reflect/KClass<*>, kotlin/Any> // eu.vendeli.tgbot.implementations/ClassManagerImpl._INSTANCES.<get-_INSTANCES>|<get-_INSTANCES>(){}[0]
}

final class eu.vendeli.tgbot.implementations/InputListenerMapImpl : eu.vendeli.tgbot.interfaces.ctx/InputListener { // eu.vendeli.tgbot.implementations/InputListenerMapImpl|null[0]
    constructor <init>() // eu.vendeli.tgbot.implementations/InputListenerMapImpl.<init>|<init>(){}[0]

    final fun del(kotlin/Long) // eu.vendeli.tgbot.implementations/InputListenerMapImpl.del|del(kotlin.Long){}[0]
    final fun get(kotlin/Long): kotlin/String? // eu.vendeli.tgbot.implementations/InputListenerMapImpl.get|get(kotlin.Long){}[0]
    final fun set(kotlin/Long, kotlin/String) // eu.vendeli.tgbot.implementations/InputListenerMapImpl.set|set(kotlin.Long;kotlin.String){}[0]
    final suspend fun delAsync(kotlin/Long): kotlinx.coroutines/Deferred<kotlin/Boolean> // eu.vendeli.tgbot.implementations/InputListenerMapImpl.delAsync|delAsync(kotlin.Long){}[0]
    final suspend fun getAsync(kotlin/Long): kotlinx.coroutines/Deferred<kotlin/String?> // eu.vendeli.tgbot.implementations/InputListenerMapImpl.getAsync|getAsync(kotlin.Long){}[0]
    final suspend fun setAsync(kotlin/Long, kotlin/String): kotlinx.coroutines/Deferred<kotlin/Boolean> // eu.vendeli.tgbot.implementations/InputListenerMapImpl.setAsync|setAsync(kotlin.Long;kotlin.String){}[0]
}

final class eu.vendeli.tgbot.implementations/TokenBucketLimiterImpl : eu.vendeli.tgbot.interfaces.helper/RateLimitMechanism { // eu.vendeli.tgbot.implementations/TokenBucketLimiterImpl|null[0]
    constructor <init>() // eu.vendeli.tgbot.implementations/TokenBucketLimiterImpl.<init>|<init>(){}[0]

    final suspend fun isLimited(eu.vendeli.tgbot.types.internal.configuration/RateLimits, kotlin/Long, kotlin/String?): kotlin/Boolean // eu.vendeli.tgbot.implementations/TokenBucketLimiterImpl.isLimited|isLimited(eu.vendeli.tgbot.types.internal.configuration.RateLimits;kotlin.Long;kotlin.String?){}[0]
}

final class eu.vendeli.tgbot.implementations/UserDataMapImpl : eu.vendeli.tgbot.implementations/BotContextMapImpl<kotlin/String>, eu.vendeli.tgbot.interfaces.ctx/UserData<kotlin/String> { // eu.vendeli.tgbot.implementations/UserDataMapImpl|null[0]
    constructor <init>() // eu.vendeli.tgbot.implementations/UserDataMapImpl.<init>|<init>(){}[0]
}

final class eu.vendeli.tgbot.types.boost/ChatBoost { // eu.vendeli.tgbot.types.boost/ChatBoost|null[0]
    constructor <init>(kotlin/String, kotlinx.datetime/Instant, kotlinx.datetime/Instant, eu.vendeli.tgbot.types.boost/ChatBoostSource) // eu.vendeli.tgbot.types.boost/ChatBoost.<init>|<init>(kotlin.String;kotlinx.datetime.Instant;kotlinx.datetime.Instant;eu.vendeli.tgbot.types.boost.ChatBoostSource){}[0]

    final val addDate // eu.vendeli.tgbot.types.boost/ChatBoost.addDate|{}addDate[0]
        final fun <get-addDate>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.boost/ChatBoost.addDate.<get-addDate>|<get-addDate>(){}[0]
    final val boostId // eu.vendeli.tgbot.types.boost/ChatBoost.boostId|{}boostId[0]
        final fun <get-boostId>(): kotlin/String // eu.vendeli.tgbot.types.boost/ChatBoost.boostId.<get-boostId>|<get-boostId>(){}[0]
    final val expirationDate // eu.vendeli.tgbot.types.boost/ChatBoost.expirationDate|{}expirationDate[0]
        final fun <get-expirationDate>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.boost/ChatBoost.expirationDate.<get-expirationDate>|<get-expirationDate>(){}[0]
    final val source // eu.vendeli.tgbot.types.boost/ChatBoost.source|{}source[0]
        final fun <get-source>(): eu.vendeli.tgbot.types.boost/ChatBoostSource // eu.vendeli.tgbot.types.boost/ChatBoost.source.<get-source>|<get-source>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.boost/ChatBoost.component1|component1(){}[0]
    final fun component2(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.boost/ChatBoost.component2|component2(){}[0]
    final fun component3(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.boost/ChatBoost.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types.boost/ChatBoostSource // eu.vendeli.tgbot.types.boost/ChatBoost.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., kotlinx.datetime/Instant = ..., kotlinx.datetime/Instant = ..., eu.vendeli.tgbot.types.boost/ChatBoostSource = ...): eu.vendeli.tgbot.types.boost/ChatBoost // eu.vendeli.tgbot.types.boost/ChatBoost.copy|copy(kotlin.String;kotlinx.datetime.Instant;kotlinx.datetime.Instant;eu.vendeli.tgbot.types.boost.ChatBoostSource){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.boost/ChatBoost.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.boost/ChatBoost.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.boost/ChatBoost.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.boost/ChatBoost> { // eu.vendeli.tgbot.types.boost/ChatBoost.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.boost/ChatBoost.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.boost/ChatBoost.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.boost/ChatBoost.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.boost/ChatBoost // eu.vendeli.tgbot.types.boost/ChatBoost.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.boost/ChatBoost) // eu.vendeli.tgbot.types.boost/ChatBoost.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.boost.ChatBoost){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.boost/ChatBoost.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.boost/ChatBoost.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.boost/ChatBoost> // eu.vendeli.tgbot.types.boost/ChatBoost.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.boost/ChatBoostAdded { // eu.vendeli.tgbot.types.boost/ChatBoostAdded|null[0]
    constructor <init>(kotlin/Int) // eu.vendeli.tgbot.types.boost/ChatBoostAdded.<init>|<init>(kotlin.Int){}[0]

    final val boostCount // eu.vendeli.tgbot.types.boost/ChatBoostAdded.boostCount|{}boostCount[0]
        final fun <get-boostCount>(): kotlin/Int // eu.vendeli.tgbot.types.boost/ChatBoostAdded.boostCount.<get-boostCount>|<get-boostCount>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.boost/ChatBoostAdded.component1|component1(){}[0]
    final fun copy(kotlin/Int = ...): eu.vendeli.tgbot.types.boost/ChatBoostAdded // eu.vendeli.tgbot.types.boost/ChatBoostAdded.copy|copy(kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.boost/ChatBoostAdded.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.boost/ChatBoostAdded.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.boost/ChatBoostAdded.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.boost/ChatBoostAdded> { // eu.vendeli.tgbot.types.boost/ChatBoostAdded.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.boost/ChatBoostAdded.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.boost/ChatBoostAdded.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.boost/ChatBoostAdded.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.boost/ChatBoostAdded // eu.vendeli.tgbot.types.boost/ChatBoostAdded.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.boost/ChatBoostAdded) // eu.vendeli.tgbot.types.boost/ChatBoostAdded.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.boost.ChatBoostAdded){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.boost/ChatBoostAdded.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.boost/ChatBoostAdded> // eu.vendeli.tgbot.types.boost/ChatBoostAdded.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.boost/ChatBoostRemoved { // eu.vendeli.tgbot.types.boost/ChatBoostRemoved|null[0]
    constructor <init>(eu.vendeli.tgbot.types.chat/Chat, kotlin/String, kotlinx.datetime/Instant, eu.vendeli.tgbot.types.boost/ChatBoostSource) // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.<init>|<init>(eu.vendeli.tgbot.types.chat.Chat;kotlin.String;kotlinx.datetime.Instant;eu.vendeli.tgbot.types.boost.ChatBoostSource){}[0]

    final val boostId // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.boostId|{}boostId[0]
        final fun <get-boostId>(): kotlin/String // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.boostId.<get-boostId>|<get-boostId>(){}[0]
    final val chat // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.chat|{}chat[0]
        final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.chat.<get-chat>|<get-chat>(){}[0]
    final val removeDate // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.removeDate|{}removeDate[0]
        final fun <get-removeDate>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.removeDate.<get-removeDate>|<get-removeDate>(){}[0]
    final val source // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.source|{}source[0]
        final fun <get-source>(): eu.vendeli.tgbot.types.boost/ChatBoostSource // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.source.<get-source>|<get-source>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.component2|component2(){}[0]
    final fun component3(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types.boost/ChatBoostSource // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.component4|component4(){}[0]
    final fun copy(eu.vendeli.tgbot.types.chat/Chat = ..., kotlin/String = ..., kotlinx.datetime/Instant = ..., eu.vendeli.tgbot.types.boost/ChatBoostSource = ...): eu.vendeli.tgbot.types.boost/ChatBoostRemoved // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.copy|copy(eu.vendeli.tgbot.types.chat.Chat;kotlin.String;kotlinx.datetime.Instant;eu.vendeli.tgbot.types.boost.ChatBoostSource){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.boost/ChatBoostRemoved> { // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.boost/ChatBoostRemoved // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.boost/ChatBoostRemoved) // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.boost.ChatBoostRemoved){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.boost/ChatBoostRemoved> // eu.vendeli.tgbot.types.boost/ChatBoostRemoved.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.boost/ChatBoostUpdated { // eu.vendeli.tgbot.types.boost/ChatBoostUpdated|null[0]
    constructor <init>(eu.vendeli.tgbot.types.chat/Chat, eu.vendeli.tgbot.types.boost/ChatBoost) // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.<init>|<init>(eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.types.boost.ChatBoost){}[0]

    final val boost // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.boost|{}boost[0]
        final fun <get-boost>(): eu.vendeli.tgbot.types.boost/ChatBoost // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.boost.<get-boost>|<get-boost>(){}[0]
    final val chat // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.chat|{}chat[0]
        final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.chat.<get-chat>|<get-chat>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.boost/ChatBoost // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.component2|component2(){}[0]
    final fun copy(eu.vendeli.tgbot.types.chat/Chat = ..., eu.vendeli.tgbot.types.boost/ChatBoost = ...): eu.vendeli.tgbot.types.boost/ChatBoostUpdated // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.copy|copy(eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.types.boost.ChatBoost){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.boost/ChatBoostUpdated> { // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.boost/ChatBoostUpdated // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.boost/ChatBoostUpdated) // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.boost.ChatBoostUpdated){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.boost/ChatBoostUpdated> // eu.vendeli.tgbot.types.boost/ChatBoostUpdated.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.boost/UserChatBoosts { // eu.vendeli.tgbot.types.boost/UserChatBoosts|null[0]
    constructor <init>(kotlin.collections/List<eu.vendeli.tgbot.types.boost/ChatBoost>) // eu.vendeli.tgbot.types.boost/UserChatBoosts.<init>|<init>(kotlin.collections.List<eu.vendeli.tgbot.types.boost.ChatBoost>){}[0]

    final val boosts // eu.vendeli.tgbot.types.boost/UserChatBoosts.boosts|{}boosts[0]
        final fun <get-boosts>(): kotlin.collections/List<eu.vendeli.tgbot.types.boost/ChatBoost> // eu.vendeli.tgbot.types.boost/UserChatBoosts.boosts.<get-boosts>|<get-boosts>(){}[0]

    final fun component1(): kotlin.collections/List<eu.vendeli.tgbot.types.boost/ChatBoost> // eu.vendeli.tgbot.types.boost/UserChatBoosts.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<eu.vendeli.tgbot.types.boost/ChatBoost> = ...): eu.vendeli.tgbot.types.boost/UserChatBoosts // eu.vendeli.tgbot.types.boost/UserChatBoosts.copy|copy(kotlin.collections.List<eu.vendeli.tgbot.types.boost.ChatBoost>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.boost/UserChatBoosts.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.boost/UserChatBoosts.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.boost/UserChatBoosts.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.boost/UserChatBoosts> { // eu.vendeli.tgbot.types.boost/UserChatBoosts.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.boost/UserChatBoosts.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.boost/UserChatBoosts.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.boost/UserChatBoosts.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.boost/UserChatBoosts // eu.vendeli.tgbot.types.boost/UserChatBoosts.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.boost/UserChatBoosts) // eu.vendeli.tgbot.types.boost/UserChatBoosts.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.boost.UserChatBoosts){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.boost/UserChatBoosts.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.boost/UserChatBoosts.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.boost/UserChatBoosts> // eu.vendeli.tgbot.types.boost/UserChatBoosts.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.bot/BotCommand : eu.vendeli.tgbot.interfaces.marker/MultipleResponse { // eu.vendeli.tgbot.types.bot/BotCommand|null[0]
    constructor <init>(kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.bot/BotCommand.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val command // eu.vendeli.tgbot.types.bot/BotCommand.command|{}command[0]
        final fun <get-command>(): kotlin/String // eu.vendeli.tgbot.types.bot/BotCommand.command.<get-command>|<get-command>(){}[0]
    final val description // eu.vendeli.tgbot.types.bot/BotCommand.description|{}description[0]
        final fun <get-description>(): kotlin/String // eu.vendeli.tgbot.types.bot/BotCommand.description.<get-description>|<get-description>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.bot/BotCommand.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.bot/BotCommand.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.bot/BotCommand // eu.vendeli.tgbot.types.bot/BotCommand.copy|copy(kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.bot/BotCommand.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.bot/BotCommand.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.bot/BotCommand.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.bot/BotCommand> { // eu.vendeli.tgbot.types.bot/BotCommand.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.bot/BotCommand.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.bot/BotCommand.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.bot/BotCommand.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.bot/BotCommand // eu.vendeli.tgbot.types.bot/BotCommand.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.bot/BotCommand) // eu.vendeli.tgbot.types.bot/BotCommand.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.bot.BotCommand){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.bot/BotCommand.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.bot/BotCommand> // eu.vendeli.tgbot.types.bot/BotCommand.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.bot/BotDescription { // eu.vendeli.tgbot.types.bot/BotDescription|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.types.bot/BotDescription.<init>|<init>(kotlin.String){}[0]

    final val description // eu.vendeli.tgbot.types.bot/BotDescription.description|{}description[0]
        final fun <get-description>(): kotlin/String // eu.vendeli.tgbot.types.bot/BotDescription.description.<get-description>|<get-description>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.bot/BotDescription.component1|component1(){}[0]
    final fun copy(kotlin/String = ...): eu.vendeli.tgbot.types.bot/BotDescription // eu.vendeli.tgbot.types.bot/BotDescription.copy|copy(kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.bot/BotDescription.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.bot/BotDescription.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.bot/BotDescription.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.bot/BotDescription> { // eu.vendeli.tgbot.types.bot/BotDescription.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.bot/BotDescription.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.bot/BotDescription.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.bot/BotDescription.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.bot/BotDescription // eu.vendeli.tgbot.types.bot/BotDescription.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.bot/BotDescription) // eu.vendeli.tgbot.types.bot/BotDescription.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.bot.BotDescription){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.bot/BotDescription.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.bot/BotDescription> // eu.vendeli.tgbot.types.bot/BotDescription.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.bot/BotName { // eu.vendeli.tgbot.types.bot/BotName|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.types.bot/BotName.<init>|<init>(kotlin.String){}[0]

    final val name // eu.vendeli.tgbot.types.bot/BotName.name|{}name[0]
        final fun <get-name>(): kotlin/String // eu.vendeli.tgbot.types.bot/BotName.name.<get-name>|<get-name>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.bot/BotName.component1|component1(){}[0]
    final fun copy(kotlin/String = ...): eu.vendeli.tgbot.types.bot/BotName // eu.vendeli.tgbot.types.bot/BotName.copy|copy(kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.bot/BotName.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.bot/BotName.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.bot/BotName.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.bot/BotName> { // eu.vendeli.tgbot.types.bot/BotName.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.bot/BotName.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.bot/BotName.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.bot/BotName.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.bot/BotName // eu.vendeli.tgbot.types.bot/BotName.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.bot/BotName) // eu.vendeli.tgbot.types.bot/BotName.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.bot.BotName){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.bot/BotName.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.bot/BotName> // eu.vendeli.tgbot.types.bot/BotName.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.bot/BotShortDescription { // eu.vendeli.tgbot.types.bot/BotShortDescription|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.types.bot/BotShortDescription.<init>|<init>(kotlin.String){}[0]

    final val shortDescription // eu.vendeli.tgbot.types.bot/BotShortDescription.shortDescription|{}shortDescription[0]
        final fun <get-shortDescription>(): kotlin/String // eu.vendeli.tgbot.types.bot/BotShortDescription.shortDescription.<get-shortDescription>|<get-shortDescription>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.bot/BotShortDescription.component1|component1(){}[0]
    final fun copy(kotlin/String = ...): eu.vendeli.tgbot.types.bot/BotShortDescription // eu.vendeli.tgbot.types.bot/BotShortDescription.copy|copy(kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.bot/BotShortDescription.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.bot/BotShortDescription.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.bot/BotShortDescription.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.bot/BotShortDescription> { // eu.vendeli.tgbot.types.bot/BotShortDescription.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.bot/BotShortDescription.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.bot/BotShortDescription.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.bot/BotShortDescription.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.bot/BotShortDescription // eu.vendeli.tgbot.types.bot/BotShortDescription.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.bot/BotShortDescription) // eu.vendeli.tgbot.types.bot/BotShortDescription.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.bot.BotShortDescription){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.bot/BotShortDescription.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.bot/BotShortDescription> // eu.vendeli.tgbot.types.bot/BotShortDescription.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.business/BusinessConnection { // eu.vendeli.tgbot.types.business/BusinessConnection|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types/User, kotlin/Long, kotlinx.datetime/Instant, kotlin/Boolean, kotlin/Boolean) // eu.vendeli.tgbot.types.business/BusinessConnection.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.User;kotlin.Long;kotlinx.datetime.Instant;kotlin.Boolean;kotlin.Boolean){}[0]

    final val canReply // eu.vendeli.tgbot.types.business/BusinessConnection.canReply|{}canReply[0]
        final fun <get-canReply>(): kotlin/Boolean // eu.vendeli.tgbot.types.business/BusinessConnection.canReply.<get-canReply>|<get-canReply>(){}[0]
    final val date // eu.vendeli.tgbot.types.business/BusinessConnection.date|{}date[0]
        final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.business/BusinessConnection.date.<get-date>|<get-date>(){}[0]
    final val id // eu.vendeli.tgbot.types.business/BusinessConnection.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessConnection.id.<get-id>|<get-id>(){}[0]
    final val isEnabled // eu.vendeli.tgbot.types.business/BusinessConnection.isEnabled|{}isEnabled[0]
        final fun <get-isEnabled>(): kotlin/Boolean // eu.vendeli.tgbot.types.business/BusinessConnection.isEnabled.<get-isEnabled>|<get-isEnabled>(){}[0]
    final val user // eu.vendeli.tgbot.types.business/BusinessConnection.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.business/BusinessConnection.user.<get-user>|<get-user>(){}[0]
    final val userChatId // eu.vendeli.tgbot.types.business/BusinessConnection.userChatId|{}userChatId[0]
        final fun <get-userChatId>(): kotlin/Long // eu.vendeli.tgbot.types.business/BusinessConnection.userChatId.<get-userChatId>|<get-userChatId>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessConnection.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.business/BusinessConnection.component2|component2(){}[0]
    final fun component3(): kotlin/Long // eu.vendeli.tgbot.types.business/BusinessConnection.component3|component3(){}[0]
    final fun component4(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.business/BusinessConnection.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean // eu.vendeli.tgbot.types.business/BusinessConnection.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean // eu.vendeli.tgbot.types.business/BusinessConnection.component6|component6(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types/User = ..., kotlin/Long = ..., kotlinx.datetime/Instant = ..., kotlin/Boolean = ..., kotlin/Boolean = ...): eu.vendeli.tgbot.types.business/BusinessConnection // eu.vendeli.tgbot.types.business/BusinessConnection.copy|copy(kotlin.String;eu.vendeli.tgbot.types.User;kotlin.Long;kotlinx.datetime.Instant;kotlin.Boolean;kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.business/BusinessConnection.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.business/BusinessConnection.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessConnection.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.business/BusinessConnection> { // eu.vendeli.tgbot.types.business/BusinessConnection.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.business/BusinessConnection.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.business/BusinessConnection.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.business/BusinessConnection.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.business/BusinessConnection // eu.vendeli.tgbot.types.business/BusinessConnection.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.business/BusinessConnection) // eu.vendeli.tgbot.types.business/BusinessConnection.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.business.BusinessConnection){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.business/BusinessConnection.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.business/BusinessConnection> // eu.vendeli.tgbot.types.business/BusinessConnection.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.business/BusinessIntro { // eu.vendeli.tgbot.types.business/BusinessIntro|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.media/Sticker? = ...) // eu.vendeli.tgbot.types.business/BusinessIntro.<init>|<init>(kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.media.Sticker?){}[0]

    final val message // eu.vendeli.tgbot.types.business/BusinessIntro.message|{}message[0]
        final fun <get-message>(): kotlin/String? // eu.vendeli.tgbot.types.business/BusinessIntro.message.<get-message>|<get-message>(){}[0]
    final val sticker // eu.vendeli.tgbot.types.business/BusinessIntro.sticker|{}sticker[0]
        final fun <get-sticker>(): eu.vendeli.tgbot.types.media/Sticker? // eu.vendeli.tgbot.types.business/BusinessIntro.sticker.<get-sticker>|<get-sticker>(){}[0]
    final val title // eu.vendeli.tgbot.types.business/BusinessIntro.title|{}title[0]
        final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.business/BusinessIntro.title.<get-title>|<get-title>(){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.business/BusinessIntro.component1|component1(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.tgbot.types.business/BusinessIntro.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.media/Sticker? // eu.vendeli.tgbot.types.business/BusinessIntro.component3|component3(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.media/Sticker? = ...): eu.vendeli.tgbot.types.business/BusinessIntro // eu.vendeli.tgbot.types.business/BusinessIntro.copy|copy(kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.media.Sticker?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.business/BusinessIntro.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.business/BusinessIntro.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessIntro.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.business/BusinessIntro> { // eu.vendeli.tgbot.types.business/BusinessIntro.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.business/BusinessIntro.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.business/BusinessIntro.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.business/BusinessIntro.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.business/BusinessIntro // eu.vendeli.tgbot.types.business/BusinessIntro.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.business/BusinessIntro) // eu.vendeli.tgbot.types.business/BusinessIntro.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.business.BusinessIntro){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.business/BusinessIntro.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.business/BusinessIntro> // eu.vendeli.tgbot.types.business/BusinessIntro.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.business/BusinessLocation { // eu.vendeli.tgbot.types.business/BusinessLocation|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types/Location? = ...) // eu.vendeli.tgbot.types.business/BusinessLocation.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.Location?){}[0]

    final val address // eu.vendeli.tgbot.types.business/BusinessLocation.address|{}address[0]
        final fun <get-address>(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessLocation.address.<get-address>|<get-address>(){}[0]
    final val location // eu.vendeli.tgbot.types.business/BusinessLocation.location|{}location[0]
        final fun <get-location>(): eu.vendeli.tgbot.types/Location? // eu.vendeli.tgbot.types.business/BusinessLocation.location.<get-location>|<get-location>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessLocation.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Location? // eu.vendeli.tgbot.types.business/BusinessLocation.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types/Location? = ...): eu.vendeli.tgbot.types.business/BusinessLocation // eu.vendeli.tgbot.types.business/BusinessLocation.copy|copy(kotlin.String;eu.vendeli.tgbot.types.Location?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.business/BusinessLocation.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.business/BusinessLocation.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessLocation.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.business/BusinessLocation> { // eu.vendeli.tgbot.types.business/BusinessLocation.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.business/BusinessLocation.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.business/BusinessLocation.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.business/BusinessLocation.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.business/BusinessLocation // eu.vendeli.tgbot.types.business/BusinessLocation.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.business/BusinessLocation) // eu.vendeli.tgbot.types.business/BusinessLocation.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.business.BusinessLocation){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.business/BusinessLocation.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.business/BusinessLocation> // eu.vendeli.tgbot.types.business/BusinessLocation.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.business/BusinessMessagesDeleted { // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types.chat/Chat, kotlin.collections/List<kotlin/Int>) // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.chat.Chat;kotlin.collections.List<kotlin.Int>){}[0]

    final val businessConnectionId // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.businessConnectionId|{}businessConnectionId[0]
        final fun <get-businessConnectionId>(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.businessConnectionId.<get-businessConnectionId>|<get-businessConnectionId>(){}[0]
    final val chat // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.chat|{}chat[0]
        final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.chat.<get-chat>|<get-chat>(){}[0]
    final val messageIds // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.messageIds|{}messageIds[0]
        final fun <get-messageIds>(): kotlin.collections/List<kotlin/Int> // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.messageIds.<get-messageIds>|<get-messageIds>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<kotlin/Int> // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types.chat/Chat = ..., kotlin.collections/List<kotlin/Int> = ...): eu.vendeli.tgbot.types.business/BusinessMessagesDeleted // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.copy|copy(kotlin.String;eu.vendeli.tgbot.types.chat.Chat;kotlin.collections.List<kotlin.Int>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.business/BusinessMessagesDeleted> { // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.business/BusinessMessagesDeleted // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.business/BusinessMessagesDeleted) // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.business.BusinessMessagesDeleted){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.business/BusinessMessagesDeleted> // eu.vendeli.tgbot.types.business/BusinessMessagesDeleted.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.business/BusinessOpeningHours { // eu.vendeli.tgbot.types.business/BusinessOpeningHours|null[0]
    constructor <init>(kotlin/String, kotlin.collections/List<eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval>) // eu.vendeli.tgbot.types.business/BusinessOpeningHours.<init>|<init>(kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.business.BusinessOpeningHoursInterval>){}[0]

    final val openingHours // eu.vendeli.tgbot.types.business/BusinessOpeningHours.openingHours|{}openingHours[0]
        final fun <get-openingHours>(): kotlin.collections/List<eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval> // eu.vendeli.tgbot.types.business/BusinessOpeningHours.openingHours.<get-openingHours>|<get-openingHours>(){}[0]
    final val timeZoneName // eu.vendeli.tgbot.types.business/BusinessOpeningHours.timeZoneName|{}timeZoneName[0]
        final fun <get-timeZoneName>(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessOpeningHours.timeZoneName.<get-timeZoneName>|<get-timeZoneName>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessOpeningHours.component1|component1(){}[0]
    final fun component2(): kotlin.collections/List<eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval> // eu.vendeli.tgbot.types.business/BusinessOpeningHours.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin.collections/List<eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval> = ...): eu.vendeli.tgbot.types.business/BusinessOpeningHours // eu.vendeli.tgbot.types.business/BusinessOpeningHours.copy|copy(kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.business.BusinessOpeningHoursInterval>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.business/BusinessOpeningHours.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.business/BusinessOpeningHours.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessOpeningHours.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.business/BusinessOpeningHours> { // eu.vendeli.tgbot.types.business/BusinessOpeningHours.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.business/BusinessOpeningHours.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.business/BusinessOpeningHours.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.business/BusinessOpeningHours.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.business/BusinessOpeningHours // eu.vendeli.tgbot.types.business/BusinessOpeningHours.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.business/BusinessOpeningHours) // eu.vendeli.tgbot.types.business/BusinessOpeningHours.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.business.BusinessOpeningHours){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.business/BusinessOpeningHours.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.business/BusinessOpeningHours.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.business/BusinessOpeningHours> // eu.vendeli.tgbot.types.business/BusinessOpeningHours.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval { // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval|null[0]
    constructor <init>(kotlin/Int, kotlin/Int) // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.<init>|<init>(kotlin.Int;kotlin.Int){}[0]

    final val closingMinute // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.closingMinute|{}closingMinute[0]
        final fun <get-closingMinute>(): kotlin/Int // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.closingMinute.<get-closingMinute>|<get-closingMinute>(){}[0]
    final val openingMinute // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.openingMinute|{}openingMinute[0]
        final fun <get-openingMinute>(): kotlin/Int // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.openingMinute.<get-openingMinute>|<get-openingMinute>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.component1|component1(){}[0]
    final fun component2(): kotlin/Int // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.component2|component2(){}[0]
    final fun copy(kotlin/Int = ..., kotlin/Int = ...): eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.copy|copy(kotlin.Int;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval> { // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval) // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.business.BusinessOpeningHoursInterval){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval> // eu.vendeli.tgbot.types.business/BusinessOpeningHoursInterval.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.chat/Chat : eu.vendeli.tgbot.types.internal/IdLong { // eu.vendeli.tgbot.types.chat/Chat|null[0]
    constructor <init>(kotlin/Long, eu.vendeli.tgbot.types.chat/ChatType, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.chat/Chat.<init>|<init>(kotlin.Long;eu.vendeli.tgbot.types.chat.ChatType;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Boolean?){}[0]

    final val firstName // eu.vendeli.tgbot.types.chat/Chat.firstName|{}firstName[0]
        final fun <get-firstName>(): kotlin/String? // eu.vendeli.tgbot.types.chat/Chat.firstName.<get-firstName>|<get-firstName>(){}[0]
    final val fullName // eu.vendeli.tgbot.types.chat/Chat.fullName|{}fullName[0]
        final fun <get-fullName>(): kotlin/String // eu.vendeli.tgbot.types.chat/Chat.fullName.<get-fullName>|<get-fullName>(){}[0]
    final val id // eu.vendeli.tgbot.types.chat/Chat.id|{}id[0]
        final fun <get-id>(): kotlin/Long // eu.vendeli.tgbot.types.chat/Chat.id.<get-id>|<get-id>(){}[0]
    final val isForum // eu.vendeli.tgbot.types.chat/Chat.isForum|{}isForum[0]
        final fun <get-isForum>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/Chat.isForum.<get-isForum>|<get-isForum>(){}[0]
    final val lastName // eu.vendeli.tgbot.types.chat/Chat.lastName|{}lastName[0]
        final fun <get-lastName>(): kotlin/String? // eu.vendeli.tgbot.types.chat/Chat.lastName.<get-lastName>|<get-lastName>(){}[0]
    final val title // eu.vendeli.tgbot.types.chat/Chat.title|{}title[0]
        final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.chat/Chat.title.<get-title>|<get-title>(){}[0]
    final val type // eu.vendeli.tgbot.types.chat/Chat.type|{}type[0]
        final fun <get-type>(): eu.vendeli.tgbot.types.chat/ChatType // eu.vendeli.tgbot.types.chat/Chat.type.<get-type>|<get-type>(){}[0]
    final val username // eu.vendeli.tgbot.types.chat/Chat.username|{}username[0]
        final fun <get-username>(): kotlin/String? // eu.vendeli.tgbot.types.chat/Chat.username.<get-username>|<get-username>(){}[0]

    final fun component1(): kotlin/Long // eu.vendeli.tgbot.types.chat/Chat.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.chat/ChatType // eu.vendeli.tgbot.types.chat/Chat.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.chat/Chat.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.chat/Chat.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.chat/Chat.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.chat/Chat.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/Chat.component7|component7(){}[0]
    final fun copy(kotlin/Long = ..., eu.vendeli.tgbot.types.chat/ChatType = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.chat/Chat.copy|copy(kotlin.Long;eu.vendeli.tgbot.types.chat.ChatType;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/Chat.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/Chat.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/Chat.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/Chat> { // eu.vendeli.tgbot.types.chat/Chat.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.chat/Chat.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/Chat.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/Chat.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.chat/Chat.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/Chat) // eu.vendeli.tgbot.types.chat/Chat.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.Chat){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.chat/Chat.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.chat/Chat.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/Chat> // eu.vendeli.tgbot.types.chat/Chat.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.chat/ChatAdministratorRights { // eu.vendeli.tgbot.types.chat/ChatAdministratorRights|null[0]
    constructor <init>(kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean, kotlin/Boolean? = ..., kotlin/Boolean, kotlin/Boolean, kotlin/Boolean) // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.<init>|<init>(kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean;kotlin.Boolean?;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean){}[0]

    final val canChangeInfo // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canChangeInfo|{}canChangeInfo[0]
        final fun <get-canChangeInfo>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canChangeInfo.<get-canChangeInfo>|<get-canChangeInfo>(){}[0]
    final val canDeleteMessages // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canDeleteMessages|{}canDeleteMessages[0]
        final fun <get-canDeleteMessages>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canDeleteMessages.<get-canDeleteMessages>|<get-canDeleteMessages>(){}[0]
    final val canDeleteStories // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canDeleteStories|{}canDeleteStories[0]
        final fun <get-canDeleteStories>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canDeleteStories.<get-canDeleteStories>|<get-canDeleteStories>(){}[0]
    final val canEditMessages // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canEditMessages|{}canEditMessages[0]
        final fun <get-canEditMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canEditMessages.<get-canEditMessages>|<get-canEditMessages>(){}[0]
    final val canEditStories // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canEditStories|{}canEditStories[0]
        final fun <get-canEditStories>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canEditStories.<get-canEditStories>|<get-canEditStories>(){}[0]
    final val canInviteUsers // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canInviteUsers|{}canInviteUsers[0]
        final fun <get-canInviteUsers>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canInviteUsers.<get-canInviteUsers>|<get-canInviteUsers>(){}[0]
    final val canManageChat // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canManageChat|{}canManageChat[0]
        final fun <get-canManageChat>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canManageChat.<get-canManageChat>|<get-canManageChat>(){}[0]
    final val canManageTopics // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canManageTopics|{}canManageTopics[0]
        final fun <get-canManageTopics>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canManageTopics.<get-canManageTopics>|<get-canManageTopics>(){}[0]
    final val canManageVideoChats // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canManageVideoChats|{}canManageVideoChats[0]
        final fun <get-canManageVideoChats>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canManageVideoChats.<get-canManageVideoChats>|<get-canManageVideoChats>(){}[0]
    final val canPinMessages // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canPinMessages|{}canPinMessages[0]
        final fun <get-canPinMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canPinMessages.<get-canPinMessages>|<get-canPinMessages>(){}[0]
    final val canPostMessages // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canPostMessages|{}canPostMessages[0]
        final fun <get-canPostMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canPostMessages.<get-canPostMessages>|<get-canPostMessages>(){}[0]
    final val canPostStories // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canPostStories|{}canPostStories[0]
        final fun <get-canPostStories>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canPostStories.<get-canPostStories>|<get-canPostStories>(){}[0]
    final val canPromoteMembers // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canPromoteMembers|{}canPromoteMembers[0]
        final fun <get-canPromoteMembers>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canPromoteMembers.<get-canPromoteMembers>|<get-canPromoteMembers>(){}[0]
    final val canRestrictMembers // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canRestrictMembers|{}canRestrictMembers[0]
        final fun <get-canRestrictMembers>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.canRestrictMembers.<get-canRestrictMembers>|<get-canRestrictMembers>(){}[0]
    final val isAnonymous // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.isAnonymous|{}isAnonymous[0]
        final fun <get-isAnonymous>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.isAnonymous.<get-isAnonymous>|<get-isAnonymous>(){}[0]

    final fun component1(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component10|component10(){}[0]
    final fun component11(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component11|component11(){}[0]
    final fun component12(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component12|component12(){}[0]
    final fun component13(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component13|component13(){}[0]
    final fun component14(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component14|component14(){}[0]
    final fun component15(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component15|component15(){}[0]
    final fun component2(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.component9|component9(){}[0]
    final fun copy(kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean = ..., kotlin/Boolean? = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ...): eu.vendeli.tgbot.types.chat/ChatAdministratorRights // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.copy|copy(kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean;kotlin.Boolean?;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatAdministratorRights> { // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatAdministratorRights // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatAdministratorRights) // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatAdministratorRights){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatAdministratorRights> // eu.vendeli.tgbot.types.chat/ChatAdministratorRights.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.chat/ChatBackground { // eu.vendeli.tgbot.types.chat/ChatBackground|null[0]
    constructor <init>(eu.vendeli.tgbot.types/BackgroundType) // eu.vendeli.tgbot.types.chat/ChatBackground.<init>|<init>(eu.vendeli.tgbot.types.BackgroundType){}[0]

    final val type // eu.vendeli.tgbot.types.chat/ChatBackground.type|{}type[0]
        final fun <get-type>(): eu.vendeli.tgbot.types/BackgroundType // eu.vendeli.tgbot.types.chat/ChatBackground.type.<get-type>|<get-type>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types/BackgroundType // eu.vendeli.tgbot.types.chat/ChatBackground.component1|component1(){}[0]
    final fun copy(eu.vendeli.tgbot.types/BackgroundType = ...): eu.vendeli.tgbot.types.chat/ChatBackground // eu.vendeli.tgbot.types.chat/ChatBackground.copy|copy(eu.vendeli.tgbot.types.BackgroundType){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatBackground.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatBackground.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatBackground.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatBackground> { // eu.vendeli.tgbot.types.chat/ChatBackground.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.chat/ChatBackground.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatBackground.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatBackground.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatBackground // eu.vendeli.tgbot.types.chat/ChatBackground.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatBackground) // eu.vendeli.tgbot.types.chat/ChatBackground.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatBackground){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.chat/ChatBackground.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.chat/ChatBackground.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatBackground> // eu.vendeli.tgbot.types.chat/ChatBackground.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.chat/ChatFullInfo { // eu.vendeli.tgbot.types.chat/ChatFullInfo|null[0]
    constructor <init>(kotlin/Long, eu.vendeli.tgbot.types.chat/ChatType, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Int, kotlin/Int, eu.vendeli.tgbot.types.chat/ChatPhoto? = ..., kotlin.collections/List<kotlin/String>? = ..., eu.vendeli.tgbot.types/Birthdate? = ..., eu.vendeli.tgbot.types.business/BusinessIntro? = ..., eu.vendeli.tgbot.types.business/BusinessLocation? = ..., eu.vendeli.tgbot.types.business/BusinessOpeningHours? = ..., eu.vendeli.tgbot.types.chat/Chat? = ..., kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType>? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.chat/ChatPermissions? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Long? = ..., eu.vendeli.tgbot.types.chat/ChatLocation? = ...) // eu.vendeli.tgbot.types.chat/ChatFullInfo.<init>|<init>(kotlin.Long;eu.vendeli.tgbot.types.chat.ChatType;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Boolean?;kotlin.Int;kotlin.Int;eu.vendeli.tgbot.types.chat.ChatPhoto?;kotlin.collections.List<kotlin.String>?;eu.vendeli.tgbot.types.Birthdate?;eu.vendeli.tgbot.types.business.BusinessIntro?;eu.vendeli.tgbot.types.business.BusinessLocation?;eu.vendeli.tgbot.types.business.BusinessOpeningHours?;eu.vendeli.tgbot.types.chat.Chat?;kotlin.collections.List<eu.vendeli.tgbot.types.ReactionType>?;kotlin.String?;kotlin.Int?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.chat.ChatPermissions?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.Boolean?;kotlin.String?;kotlin.Long?;eu.vendeli.tgbot.types.chat.ChatLocation?){}[0]

    final val accentColorId // eu.vendeli.tgbot.types.chat/ChatFullInfo.accentColorId|{}accentColorId[0]
        final fun <get-accentColorId>(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatFullInfo.accentColorId.<get-accentColorId>|<get-accentColorId>(){}[0]
    final val activeUsernames // eu.vendeli.tgbot.types.chat/ChatFullInfo.activeUsernames|{}activeUsernames[0]
        final fun <get-activeUsernames>(): kotlin.collections/List<kotlin/String>? // eu.vendeli.tgbot.types.chat/ChatFullInfo.activeUsernames.<get-activeUsernames>|<get-activeUsernames>(){}[0]
    final val availableReactions // eu.vendeli.tgbot.types.chat/ChatFullInfo.availableReactions|{}availableReactions[0]
        final fun <get-availableReactions>(): kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType>? // eu.vendeli.tgbot.types.chat/ChatFullInfo.availableReactions.<get-availableReactions>|<get-availableReactions>(){}[0]
    final val backgroundCustomEmojiId // eu.vendeli.tgbot.types.chat/ChatFullInfo.backgroundCustomEmojiId|{}backgroundCustomEmojiId[0]
        final fun <get-backgroundCustomEmojiId>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.backgroundCustomEmojiId.<get-backgroundCustomEmojiId>|<get-backgroundCustomEmojiId>(){}[0]
    final val bio // eu.vendeli.tgbot.types.chat/ChatFullInfo.bio|{}bio[0]
        final fun <get-bio>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.bio.<get-bio>|<get-bio>(){}[0]
    final val birthdate // eu.vendeli.tgbot.types.chat/ChatFullInfo.birthdate|{}birthdate[0]
        final fun <get-birthdate>(): eu.vendeli.tgbot.types/Birthdate? // eu.vendeli.tgbot.types.chat/ChatFullInfo.birthdate.<get-birthdate>|<get-birthdate>(){}[0]
    final val businessIntro // eu.vendeli.tgbot.types.chat/ChatFullInfo.businessIntro|{}businessIntro[0]
        final fun <get-businessIntro>(): eu.vendeli.tgbot.types.business/BusinessIntro? // eu.vendeli.tgbot.types.chat/ChatFullInfo.businessIntro.<get-businessIntro>|<get-businessIntro>(){}[0]
    final val businessLocation // eu.vendeli.tgbot.types.chat/ChatFullInfo.businessLocation|{}businessLocation[0]
        final fun <get-businessLocation>(): eu.vendeli.tgbot.types.business/BusinessLocation? // eu.vendeli.tgbot.types.chat/ChatFullInfo.businessLocation.<get-businessLocation>|<get-businessLocation>(){}[0]
    final val businessOpeningHours // eu.vendeli.tgbot.types.chat/ChatFullInfo.businessOpeningHours|{}businessOpeningHours[0]
        final fun <get-businessOpeningHours>(): eu.vendeli.tgbot.types.business/BusinessOpeningHours? // eu.vendeli.tgbot.types.chat/ChatFullInfo.businessOpeningHours.<get-businessOpeningHours>|<get-businessOpeningHours>(){}[0]
    final val canSendGift // eu.vendeli.tgbot.types.chat/ChatFullInfo.canSendGift|{}canSendGift[0]
        final fun <get-canSendGift>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.canSendGift.<get-canSendGift>|<get-canSendGift>(){}[0]
    final val canSendPaidMedia // eu.vendeli.tgbot.types.chat/ChatFullInfo.canSendPaidMedia|{}canSendPaidMedia[0]
        final fun <get-canSendPaidMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.canSendPaidMedia.<get-canSendPaidMedia>|<get-canSendPaidMedia>(){}[0]
    final val canSetStickerSet // eu.vendeli.tgbot.types.chat/ChatFullInfo.canSetStickerSet|{}canSetStickerSet[0]
        final fun <get-canSetStickerSet>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.canSetStickerSet.<get-canSetStickerSet>|<get-canSetStickerSet>(){}[0]
    final val customEmojiStickerSetName // eu.vendeli.tgbot.types.chat/ChatFullInfo.customEmojiStickerSetName|{}customEmojiStickerSetName[0]
        final fun <get-customEmojiStickerSetName>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.customEmojiStickerSetName.<get-customEmojiStickerSetName>|<get-customEmojiStickerSetName>(){}[0]
    final val description // eu.vendeli.tgbot.types.chat/ChatFullInfo.description|{}description[0]
        final fun <get-description>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.description.<get-description>|<get-description>(){}[0]
    final val emojiStatusCustomEmojiId // eu.vendeli.tgbot.types.chat/ChatFullInfo.emojiStatusCustomEmojiId|{}emojiStatusCustomEmojiId[0]
        final fun <get-emojiStatusCustomEmojiId>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.emojiStatusCustomEmojiId.<get-emojiStatusCustomEmojiId>|<get-emojiStatusCustomEmojiId>(){}[0]
    final val emojiStatusExpirationDate // eu.vendeli.tgbot.types.chat/ChatFullInfo.emojiStatusExpirationDate|{}emojiStatusExpirationDate[0]
        final fun <get-emojiStatusExpirationDate>(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatFullInfo.emojiStatusExpirationDate.<get-emojiStatusExpirationDate>|<get-emojiStatusExpirationDate>(){}[0]
    final val firstName // eu.vendeli.tgbot.types.chat/ChatFullInfo.firstName|{}firstName[0]
        final fun <get-firstName>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.firstName.<get-firstName>|<get-firstName>(){}[0]
    final val hasAggressiveAntiSpamEnabled // eu.vendeli.tgbot.types.chat/ChatFullInfo.hasAggressiveAntiSpamEnabled|{}hasAggressiveAntiSpamEnabled[0]
        final fun <get-hasAggressiveAntiSpamEnabled>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.hasAggressiveAntiSpamEnabled.<get-hasAggressiveAntiSpamEnabled>|<get-hasAggressiveAntiSpamEnabled>(){}[0]
    final val hasHiddenMembers // eu.vendeli.tgbot.types.chat/ChatFullInfo.hasHiddenMembers|{}hasHiddenMembers[0]
        final fun <get-hasHiddenMembers>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.hasHiddenMembers.<get-hasHiddenMembers>|<get-hasHiddenMembers>(){}[0]
    final val hasPrivateForwards // eu.vendeli.tgbot.types.chat/ChatFullInfo.hasPrivateForwards|{}hasPrivateForwards[0]
        final fun <get-hasPrivateForwards>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.hasPrivateForwards.<get-hasPrivateForwards>|<get-hasPrivateForwards>(){}[0]
    final val hasProtectedContent // eu.vendeli.tgbot.types.chat/ChatFullInfo.hasProtectedContent|{}hasProtectedContent[0]
        final fun <get-hasProtectedContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.hasProtectedContent.<get-hasProtectedContent>|<get-hasProtectedContent>(){}[0]
    final val hasRestrictedVoiceAndVideoMessages // eu.vendeli.tgbot.types.chat/ChatFullInfo.hasRestrictedVoiceAndVideoMessages|{}hasRestrictedVoiceAndVideoMessages[0]
        final fun <get-hasRestrictedVoiceAndVideoMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.hasRestrictedVoiceAndVideoMessages.<get-hasRestrictedVoiceAndVideoMessages>|<get-hasRestrictedVoiceAndVideoMessages>(){}[0]
    final val hasVisibleHistory // eu.vendeli.tgbot.types.chat/ChatFullInfo.hasVisibleHistory|{}hasVisibleHistory[0]
        final fun <get-hasVisibleHistory>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.hasVisibleHistory.<get-hasVisibleHistory>|<get-hasVisibleHistory>(){}[0]
    final val id // eu.vendeli.tgbot.types.chat/ChatFullInfo.id|{}id[0]
        final fun <get-id>(): kotlin/Long // eu.vendeli.tgbot.types.chat/ChatFullInfo.id.<get-id>|<get-id>(){}[0]
    final val inviteLink // eu.vendeli.tgbot.types.chat/ChatFullInfo.inviteLink|{}inviteLink[0]
        final fun <get-inviteLink>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.inviteLink.<get-inviteLink>|<get-inviteLink>(){}[0]
    final val isForum // eu.vendeli.tgbot.types.chat/ChatFullInfo.isForum|{}isForum[0]
        final fun <get-isForum>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.isForum.<get-isForum>|<get-isForum>(){}[0]
    final val joinByRequest // eu.vendeli.tgbot.types.chat/ChatFullInfo.joinByRequest|{}joinByRequest[0]
        final fun <get-joinByRequest>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.joinByRequest.<get-joinByRequest>|<get-joinByRequest>(){}[0]
    final val joinToSendMessages // eu.vendeli.tgbot.types.chat/ChatFullInfo.joinToSendMessages|{}joinToSendMessages[0]
        final fun <get-joinToSendMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.joinToSendMessages.<get-joinToSendMessages>|<get-joinToSendMessages>(){}[0]
    final val lastName // eu.vendeli.tgbot.types.chat/ChatFullInfo.lastName|{}lastName[0]
        final fun <get-lastName>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.lastName.<get-lastName>|<get-lastName>(){}[0]
    final val linkedChatId // eu.vendeli.tgbot.types.chat/ChatFullInfo.linkedChatId|{}linkedChatId[0]
        final fun <get-linkedChatId>(): kotlin/Long? // eu.vendeli.tgbot.types.chat/ChatFullInfo.linkedChatId.<get-linkedChatId>|<get-linkedChatId>(){}[0]
    final val location // eu.vendeli.tgbot.types.chat/ChatFullInfo.location|{}location[0]
        final fun <get-location>(): eu.vendeli.tgbot.types.chat/ChatLocation? // eu.vendeli.tgbot.types.chat/ChatFullInfo.location.<get-location>|<get-location>(){}[0]
    final val maxReactionCount // eu.vendeli.tgbot.types.chat/ChatFullInfo.maxReactionCount|{}maxReactionCount[0]
        final fun <get-maxReactionCount>(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatFullInfo.maxReactionCount.<get-maxReactionCount>|<get-maxReactionCount>(){}[0]
    final val messageAutoDeleteTime // eu.vendeli.tgbot.types.chat/ChatFullInfo.messageAutoDeleteTime|{}messageAutoDeleteTime[0]
        final fun <get-messageAutoDeleteTime>(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatFullInfo.messageAutoDeleteTime.<get-messageAutoDeleteTime>|<get-messageAutoDeleteTime>(){}[0]
    final val permissions // eu.vendeli.tgbot.types.chat/ChatFullInfo.permissions|{}permissions[0]
        final fun <get-permissions>(): eu.vendeli.tgbot.types.chat/ChatPermissions? // eu.vendeli.tgbot.types.chat/ChatFullInfo.permissions.<get-permissions>|<get-permissions>(){}[0]
    final val personalChat // eu.vendeli.tgbot.types.chat/ChatFullInfo.personalChat|{}personalChat[0]
        final fun <get-personalChat>(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types.chat/ChatFullInfo.personalChat.<get-personalChat>|<get-personalChat>(){}[0]
    final val photo // eu.vendeli.tgbot.types.chat/ChatFullInfo.photo|{}photo[0]
        final fun <get-photo>(): eu.vendeli.tgbot.types.chat/ChatPhoto? // eu.vendeli.tgbot.types.chat/ChatFullInfo.photo.<get-photo>|<get-photo>(){}[0]
    final val pinnedMessage // eu.vendeli.tgbot.types.chat/ChatFullInfo.pinnedMessage|{}pinnedMessage[0]
        final fun <get-pinnedMessage>(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types.chat/ChatFullInfo.pinnedMessage.<get-pinnedMessage>|<get-pinnedMessage>(){}[0]
    final val profileAccentColorId // eu.vendeli.tgbot.types.chat/ChatFullInfo.profileAccentColorId|{}profileAccentColorId[0]
        final fun <get-profileAccentColorId>(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatFullInfo.profileAccentColorId.<get-profileAccentColorId>|<get-profileAccentColorId>(){}[0]
    final val profileBackgroundCustomEmojiId // eu.vendeli.tgbot.types.chat/ChatFullInfo.profileBackgroundCustomEmojiId|{}profileBackgroundCustomEmojiId[0]
        final fun <get-profileBackgroundCustomEmojiId>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.profileBackgroundCustomEmojiId.<get-profileBackgroundCustomEmojiId>|<get-profileBackgroundCustomEmojiId>(){}[0]
    final val slowModeDelay // eu.vendeli.tgbot.types.chat/ChatFullInfo.slowModeDelay|{}slowModeDelay[0]
        final fun <get-slowModeDelay>(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatFullInfo.slowModeDelay.<get-slowModeDelay>|<get-slowModeDelay>(){}[0]
    final val stickerSetName // eu.vendeli.tgbot.types.chat/ChatFullInfo.stickerSetName|{}stickerSetName[0]
        final fun <get-stickerSetName>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.stickerSetName.<get-stickerSetName>|<get-stickerSetName>(){}[0]
    final val title // eu.vendeli.tgbot.types.chat/ChatFullInfo.title|{}title[0]
        final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.title.<get-title>|<get-title>(){}[0]
    final val type // eu.vendeli.tgbot.types.chat/ChatFullInfo.type|{}type[0]
        final fun <get-type>(): eu.vendeli.tgbot.types.chat/ChatType // eu.vendeli.tgbot.types.chat/ChatFullInfo.type.<get-type>|<get-type>(){}[0]
    final val unrestrictBoostCount // eu.vendeli.tgbot.types.chat/ChatFullInfo.unrestrictBoostCount|{}unrestrictBoostCount[0]
        final fun <get-unrestrictBoostCount>(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatFullInfo.unrestrictBoostCount.<get-unrestrictBoostCount>|<get-unrestrictBoostCount>(){}[0]
    final val username // eu.vendeli.tgbot.types.chat/ChatFullInfo.username|{}username[0]
        final fun <get-username>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.username.<get-username>|<get-username>(){}[0]

    final fun component1(): kotlin/Long // eu.vendeli.tgbot.types.chat/ChatFullInfo.component1|component1(){}[0]
    final fun component10(): eu.vendeli.tgbot.types.chat/ChatPhoto? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component10|component10(){}[0]
    final fun component11(): kotlin.collections/List<kotlin/String>? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component11|component11(){}[0]
    final fun component12(): eu.vendeli.tgbot.types/Birthdate? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component12|component12(){}[0]
    final fun component13(): eu.vendeli.tgbot.types.business/BusinessIntro? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component13|component13(){}[0]
    final fun component14(): eu.vendeli.tgbot.types.business/BusinessLocation? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component14|component14(){}[0]
    final fun component15(): eu.vendeli.tgbot.types.business/BusinessOpeningHours? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component15|component15(){}[0]
    final fun component16(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component16|component16(){}[0]
    final fun component17(): kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType>? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component17|component17(){}[0]
    final fun component18(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component18|component18(){}[0]
    final fun component19(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component19|component19(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.chat/ChatType // eu.vendeli.tgbot.types.chat/ChatFullInfo.component2|component2(){}[0]
    final fun component20(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component20|component20(){}[0]
    final fun component21(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component21|component21(){}[0]
    final fun component22(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component22|component22(){}[0]
    final fun component23(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component23|component23(){}[0]
    final fun component24(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component24|component24(){}[0]
    final fun component25(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component25|component25(){}[0]
    final fun component26(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component26|component26(){}[0]
    final fun component27(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component27|component27(){}[0]
    final fun component28(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component28|component28(){}[0]
    final fun component29(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component29|component29(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component3|component3(){}[0]
    final fun component30(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component30|component30(){}[0]
    final fun component31(): eu.vendeli.tgbot.types.chat/ChatPermissions? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component31|component31(){}[0]
    final fun component32(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component32|component32(){}[0]
    final fun component33(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component33|component33(){}[0]
    final fun component34(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component34|component34(){}[0]
    final fun component35(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component35|component35(){}[0]
    final fun component36(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component36|component36(){}[0]
    final fun component37(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component37|component37(){}[0]
    final fun component38(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component38|component38(){}[0]
    final fun component39(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component39|component39(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component4|component4(){}[0]
    final fun component40(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component40|component40(){}[0]
    final fun component41(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component41|component41(){}[0]
    final fun component42(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component42|component42(){}[0]
    final fun component43(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component43|component43(){}[0]
    final fun component44(): kotlin/Long? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component44|component44(){}[0]
    final fun component45(): eu.vendeli.tgbot.types.chat/ChatLocation? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component45|component45(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatFullInfo.component7|component7(){}[0]
    final fun component8(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatFullInfo.component8|component8(){}[0]
    final fun component9(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatFullInfo.component9|component9(){}[0]
    final fun copy(kotlin/Long = ..., eu.vendeli.tgbot.types.chat/ChatType = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Int = ..., kotlin/Int = ..., eu.vendeli.tgbot.types.chat/ChatPhoto? = ..., kotlin.collections/List<kotlin/String>? = ..., eu.vendeli.tgbot.types/Birthdate? = ..., eu.vendeli.tgbot.types.business/BusinessIntro? = ..., eu.vendeli.tgbot.types.business/BusinessLocation? = ..., eu.vendeli.tgbot.types.business/BusinessOpeningHours? = ..., eu.vendeli.tgbot.types.chat/Chat? = ..., kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType>? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.chat/ChatPermissions? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Long? = ..., eu.vendeli.tgbot.types.chat/ChatLocation? = ...): eu.vendeli.tgbot.types.chat/ChatFullInfo // eu.vendeli.tgbot.types.chat/ChatFullInfo.copy|copy(kotlin.Long;eu.vendeli.tgbot.types.chat.ChatType;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Boolean?;kotlin.Int;kotlin.Int;eu.vendeli.tgbot.types.chat.ChatPhoto?;kotlin.collections.List<kotlin.String>?;eu.vendeli.tgbot.types.Birthdate?;eu.vendeli.tgbot.types.business.BusinessIntro?;eu.vendeli.tgbot.types.business.BusinessLocation?;eu.vendeli.tgbot.types.business.BusinessOpeningHours?;eu.vendeli.tgbot.types.chat.Chat?;kotlin.collections.List<eu.vendeli.tgbot.types.ReactionType>?;kotlin.String?;kotlin.Int?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.chat.ChatPermissions?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.Boolean?;kotlin.String?;kotlin.Long?;eu.vendeli.tgbot.types.chat.ChatLocation?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatFullInfo.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatFullInfo.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatFullInfo.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatFullInfo> { // eu.vendeli.tgbot.types.chat/ChatFullInfo.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.chat/ChatFullInfo.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatFullInfo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatFullInfo.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatFullInfo // eu.vendeli.tgbot.types.chat/ChatFullInfo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatFullInfo) // eu.vendeli.tgbot.types.chat/ChatFullInfo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatFullInfo){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.chat/ChatFullInfo.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.chat/ChatFullInfo.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatFullInfo> // eu.vendeli.tgbot.types.chat/ChatFullInfo.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.chat/ChatInviteLink { // eu.vendeli.tgbot.types.chat/ChatInviteLink|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types/User, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/String? = ..., kotlinx.datetime/Instant? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin.time/Duration? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.chat/ChatInviteLink.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.User;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.String?;kotlinx.datetime.Instant?;kotlin.Int?;kotlin.Int?;kotlin.time.Duration?;kotlin.Int?){}[0]

    final val createsJoinRequest // eu.vendeli.tgbot.types.chat/ChatInviteLink.createsJoinRequest|{}createsJoinRequest[0]
        final fun <get-createsJoinRequest>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatInviteLink.createsJoinRequest.<get-createsJoinRequest>|<get-createsJoinRequest>(){}[0]
    final val creator // eu.vendeli.tgbot.types.chat/ChatInviteLink.creator|{}creator[0]
        final fun <get-creator>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatInviteLink.creator.<get-creator>|<get-creator>(){}[0]
    final val expireDate // eu.vendeli.tgbot.types.chat/ChatInviteLink.expireDate|{}expireDate[0]
        final fun <get-expireDate>(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.chat/ChatInviteLink.expireDate.<get-expireDate>|<get-expireDate>(){}[0]
    final val inviteLink // eu.vendeli.tgbot.types.chat/ChatInviteLink.inviteLink|{}inviteLink[0]
        final fun <get-inviteLink>(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatInviteLink.inviteLink.<get-inviteLink>|<get-inviteLink>(){}[0]
    final val isPrimary // eu.vendeli.tgbot.types.chat/ChatInviteLink.isPrimary|{}isPrimary[0]
        final fun <get-isPrimary>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatInviteLink.isPrimary.<get-isPrimary>|<get-isPrimary>(){}[0]
    final val isRevoked // eu.vendeli.tgbot.types.chat/ChatInviteLink.isRevoked|{}isRevoked[0]
        final fun <get-isRevoked>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatInviteLink.isRevoked.<get-isRevoked>|<get-isRevoked>(){}[0]
    final val memberLimit // eu.vendeli.tgbot.types.chat/ChatInviteLink.memberLimit|{}memberLimit[0]
        final fun <get-memberLimit>(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatInviteLink.memberLimit.<get-memberLimit>|<get-memberLimit>(){}[0]
    final val name // eu.vendeli.tgbot.types.chat/ChatInviteLink.name|{}name[0]
        final fun <get-name>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatInviteLink.name.<get-name>|<get-name>(){}[0]
    final val pendingJoinRequestCount // eu.vendeli.tgbot.types.chat/ChatInviteLink.pendingJoinRequestCount|{}pendingJoinRequestCount[0]
        final fun <get-pendingJoinRequestCount>(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatInviteLink.pendingJoinRequestCount.<get-pendingJoinRequestCount>|<get-pendingJoinRequestCount>(){}[0]
    final val subscriptionPeriod // eu.vendeli.tgbot.types.chat/ChatInviteLink.subscriptionPeriod|{}subscriptionPeriod[0]
        final fun <get-subscriptionPeriod>(): kotlin.time/Duration? // eu.vendeli.tgbot.types.chat/ChatInviteLink.subscriptionPeriod.<get-subscriptionPeriod>|<get-subscriptionPeriod>(){}[0]
    final val subscriptionPrice // eu.vendeli.tgbot.types.chat/ChatInviteLink.subscriptionPrice|{}subscriptionPrice[0]
        final fun <get-subscriptionPrice>(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatInviteLink.subscriptionPrice.<get-subscriptionPrice>|<get-subscriptionPrice>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatInviteLink.component1|component1(){}[0]
    final fun component10(): kotlin.time/Duration? // eu.vendeli.tgbot.types.chat/ChatInviteLink.component10|component10(){}[0]
    final fun component11(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatInviteLink.component11|component11(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatInviteLink.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatInviteLink.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatInviteLink.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatInviteLink.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatInviteLink.component6|component6(){}[0]
    final fun component7(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.chat/ChatInviteLink.component7|component7(){}[0]
    final fun component8(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatInviteLink.component8|component8(){}[0]
    final fun component9(): kotlin/Int? // eu.vendeli.tgbot.types.chat/ChatInviteLink.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types/User = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/String? = ..., kotlinx.datetime/Instant? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin.time/Duration? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.chat/ChatInviteLink // eu.vendeli.tgbot.types.chat/ChatInviteLink.copy|copy(kotlin.String;eu.vendeli.tgbot.types.User;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.String?;kotlinx.datetime.Instant?;kotlin.Int?;kotlin.Int?;kotlin.time.Duration?;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatInviteLink.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatInviteLink.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatInviteLink.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatInviteLink> { // eu.vendeli.tgbot.types.chat/ChatInviteLink.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.chat/ChatInviteLink.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatInviteLink.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatInviteLink.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatInviteLink // eu.vendeli.tgbot.types.chat/ChatInviteLink.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatInviteLink) // eu.vendeli.tgbot.types.chat/ChatInviteLink.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatInviteLink){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.chat/ChatInviteLink.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatInviteLink> // eu.vendeli.tgbot.types.chat/ChatInviteLink.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.chat/ChatJoinRequest { // eu.vendeli.tgbot.types.chat/ChatJoinRequest|null[0]
    constructor <init>(eu.vendeli.tgbot.types.chat/Chat, eu.vendeli.tgbot.types/User, kotlin/Long, kotlinx.datetime/Instant, kotlin/String? = ..., eu.vendeli.tgbot.types.chat/ChatInviteLink? = ...) // eu.vendeli.tgbot.types.chat/ChatJoinRequest.<init>|<init>(eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.types.User;kotlin.Long;kotlinx.datetime.Instant;kotlin.String?;eu.vendeli.tgbot.types.chat.ChatInviteLink?){}[0]

    final val bio // eu.vendeli.tgbot.types.chat/ChatJoinRequest.bio|{}bio[0]
        final fun <get-bio>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatJoinRequest.bio.<get-bio>|<get-bio>(){}[0]
    final val chat // eu.vendeli.tgbot.types.chat/ChatJoinRequest.chat|{}chat[0]
        final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.chat/ChatJoinRequest.chat.<get-chat>|<get-chat>(){}[0]
    final val date // eu.vendeli.tgbot.types.chat/ChatJoinRequest.date|{}date[0]
        final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.chat/ChatJoinRequest.date.<get-date>|<get-date>(){}[0]
    final val from // eu.vendeli.tgbot.types.chat/ChatJoinRequest.from|{}from[0]
        final fun <get-from>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatJoinRequest.from.<get-from>|<get-from>(){}[0]
    final val inviteLink // eu.vendeli.tgbot.types.chat/ChatJoinRequest.inviteLink|{}inviteLink[0]
        final fun <get-inviteLink>(): eu.vendeli.tgbot.types.chat/ChatInviteLink? // eu.vendeli.tgbot.types.chat/ChatJoinRequest.inviteLink.<get-inviteLink>|<get-inviteLink>(){}[0]
    final val userChatId // eu.vendeli.tgbot.types.chat/ChatJoinRequest.userChatId|{}userChatId[0]
        final fun <get-userChatId>(): kotlin/Long // eu.vendeli.tgbot.types.chat/ChatJoinRequest.userChatId.<get-userChatId>|<get-userChatId>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.chat/ChatJoinRequest.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatJoinRequest.component2|component2(){}[0]
    final fun component3(): kotlin/Long // eu.vendeli.tgbot.types.chat/ChatJoinRequest.component3|component3(){}[0]
    final fun component4(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.chat/ChatJoinRequest.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatJoinRequest.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types.chat/ChatInviteLink? // eu.vendeli.tgbot.types.chat/ChatJoinRequest.component6|component6(){}[0]
    final fun copy(eu.vendeli.tgbot.types.chat/Chat = ..., eu.vendeli.tgbot.types/User = ..., kotlin/Long = ..., kotlinx.datetime/Instant = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.chat/ChatInviteLink? = ...): eu.vendeli.tgbot.types.chat/ChatJoinRequest // eu.vendeli.tgbot.types.chat/ChatJoinRequest.copy|copy(eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.types.User;kotlin.Long;kotlinx.datetime.Instant;kotlin.String?;eu.vendeli.tgbot.types.chat.ChatInviteLink?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatJoinRequest.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatJoinRequest.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatJoinRequest.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatJoinRequest> { // eu.vendeli.tgbot.types.chat/ChatJoinRequest.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.chat/ChatJoinRequest.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatJoinRequest.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatJoinRequest.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatJoinRequest // eu.vendeli.tgbot.types.chat/ChatJoinRequest.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatJoinRequest) // eu.vendeli.tgbot.types.chat/ChatJoinRequest.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatJoinRequest){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.chat/ChatJoinRequest.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatJoinRequest> // eu.vendeli.tgbot.types.chat/ChatJoinRequest.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.chat/ChatLocation { // eu.vendeli.tgbot.types.chat/ChatLocation|null[0]
    constructor <init>(eu.vendeli.tgbot.types/Location, kotlin/String) // eu.vendeli.tgbot.types.chat/ChatLocation.<init>|<init>(eu.vendeli.tgbot.types.Location;kotlin.String){}[0]

    final val address // eu.vendeli.tgbot.types.chat/ChatLocation.address|{}address[0]
        final fun <get-address>(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatLocation.address.<get-address>|<get-address>(){}[0]
    final val location // eu.vendeli.tgbot.types.chat/ChatLocation.location|{}location[0]
        final fun <get-location>(): eu.vendeli.tgbot.types/Location // eu.vendeli.tgbot.types.chat/ChatLocation.location.<get-location>|<get-location>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types/Location // eu.vendeli.tgbot.types.chat/ChatLocation.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatLocation.component2|component2(){}[0]
    final fun copy(eu.vendeli.tgbot.types/Location = ..., kotlin/String = ...): eu.vendeli.tgbot.types.chat/ChatLocation // eu.vendeli.tgbot.types.chat/ChatLocation.copy|copy(eu.vendeli.tgbot.types.Location;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatLocation.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatLocation.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatLocation.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatLocation> { // eu.vendeli.tgbot.types.chat/ChatLocation.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.chat/ChatLocation.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatLocation.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatLocation.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatLocation // eu.vendeli.tgbot.types.chat/ChatLocation.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatLocation) // eu.vendeli.tgbot.types.chat/ChatLocation.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatLocation){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.chat/ChatLocation.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatLocation> // eu.vendeli.tgbot.types.chat/ChatLocation.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.chat/ChatMemberUpdated { // eu.vendeli.tgbot.types.chat/ChatMemberUpdated|null[0]
    constructor <init>(eu.vendeli.tgbot.types.chat/Chat, eu.vendeli.tgbot.types/User, kotlinx.datetime/Instant, eu.vendeli.tgbot.types.chat/ChatMember, eu.vendeli.tgbot.types.chat/ChatMember, eu.vendeli.tgbot.types.chat/ChatInviteLink? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.<init>|<init>(eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.types.User;kotlinx.datetime.Instant;eu.vendeli.tgbot.types.chat.ChatMember;eu.vendeli.tgbot.types.chat.ChatMember;eu.vendeli.tgbot.types.chat.ChatInviteLink?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final val chat // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.chat|{}chat[0]
        final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.chat.<get-chat>|<get-chat>(){}[0]
    final val date // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.date|{}date[0]
        final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.date.<get-date>|<get-date>(){}[0]
    final val from // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.from|{}from[0]
        final fun <get-from>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.from.<get-from>|<get-from>(){}[0]
    final val inviteLink // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.inviteLink|{}inviteLink[0]
        final fun <get-inviteLink>(): eu.vendeli.tgbot.types.chat/ChatInviteLink? // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.inviteLink.<get-inviteLink>|<get-inviteLink>(){}[0]
    final val newChatMember // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.newChatMember|{}newChatMember[0]
        final fun <get-newChatMember>(): eu.vendeli.tgbot.types.chat/ChatMember // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.newChatMember.<get-newChatMember>|<get-newChatMember>(){}[0]
    final val oldChatMember // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.oldChatMember|{}oldChatMember[0]
        final fun <get-oldChatMember>(): eu.vendeli.tgbot.types.chat/ChatMember // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.oldChatMember.<get-oldChatMember>|<get-oldChatMember>(){}[0]
    final val viaChatFolderInviteLink // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.viaChatFolderInviteLink|{}viaChatFolderInviteLink[0]
        final fun <get-viaChatFolderInviteLink>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.viaChatFolderInviteLink.<get-viaChatFolderInviteLink>|<get-viaChatFolderInviteLink>(){}[0]
    final val viaJoinRequest // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.viaJoinRequest|{}viaJoinRequest[0]
        final fun <get-viaJoinRequest>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.viaJoinRequest.<get-viaJoinRequest>|<get-viaJoinRequest>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.component2|component2(){}[0]
    final fun component3(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types.chat/ChatMember // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types.chat/ChatMember // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types.chat/ChatInviteLink? // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.component8|component8(){}[0]
    final fun copy(eu.vendeli.tgbot.types.chat/Chat = ..., eu.vendeli.tgbot.types/User = ..., kotlinx.datetime/Instant = ..., eu.vendeli.tgbot.types.chat/ChatMember = ..., eu.vendeli.tgbot.types.chat/ChatMember = ..., eu.vendeli.tgbot.types.chat/ChatInviteLink? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.chat/ChatMemberUpdated // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.copy|copy(eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.types.User;kotlinx.datetime.Instant;eu.vendeli.tgbot.types.chat.ChatMember;eu.vendeli.tgbot.types.chat.ChatMember;eu.vendeli.tgbot.types.chat.ChatInviteLink?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatMemberUpdated> { // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatMemberUpdated // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatMemberUpdated) // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatMemberUpdated){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatMemberUpdated> // eu.vendeli.tgbot.types.chat/ChatMemberUpdated.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.chat/ChatPermissions { // eu.vendeli.tgbot.types.chat/ChatPermissions|null[0]
    constructor <init>(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.chat/ChatPermissions.<init>|<init>(kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final var canAddWebPagePreviews // eu.vendeli.tgbot.types.chat/ChatPermissions.canAddWebPagePreviews|{}canAddWebPagePreviews[0]
        final fun <get-canAddWebPagePreviews>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canAddWebPagePreviews.<get-canAddWebPagePreviews>|<get-canAddWebPagePreviews>(){}[0]
        final fun <set-canAddWebPagePreviews>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canAddWebPagePreviews.<set-canAddWebPagePreviews>|<set-canAddWebPagePreviews>(kotlin.Boolean?){}[0]
    final var canChangeInfo // eu.vendeli.tgbot.types.chat/ChatPermissions.canChangeInfo|{}canChangeInfo[0]
        final fun <get-canChangeInfo>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canChangeInfo.<get-canChangeInfo>|<get-canChangeInfo>(){}[0]
        final fun <set-canChangeInfo>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canChangeInfo.<set-canChangeInfo>|<set-canChangeInfo>(kotlin.Boolean?){}[0]
    final var canInviteUsers // eu.vendeli.tgbot.types.chat/ChatPermissions.canInviteUsers|{}canInviteUsers[0]
        final fun <get-canInviteUsers>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canInviteUsers.<get-canInviteUsers>|<get-canInviteUsers>(){}[0]
        final fun <set-canInviteUsers>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canInviteUsers.<set-canInviteUsers>|<set-canInviteUsers>(kotlin.Boolean?){}[0]
    final var canManageTopics // eu.vendeli.tgbot.types.chat/ChatPermissions.canManageTopics|{}canManageTopics[0]
        final fun <get-canManageTopics>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canManageTopics.<get-canManageTopics>|<get-canManageTopics>(){}[0]
        final fun <set-canManageTopics>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canManageTopics.<set-canManageTopics>|<set-canManageTopics>(kotlin.Boolean?){}[0]
    final var canPinMessages // eu.vendeli.tgbot.types.chat/ChatPermissions.canPinMessages|{}canPinMessages[0]
        final fun <get-canPinMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canPinMessages.<get-canPinMessages>|<get-canPinMessages>(){}[0]
        final fun <set-canPinMessages>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canPinMessages.<set-canPinMessages>|<set-canPinMessages>(kotlin.Boolean?){}[0]
    final var canSendAudios // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendAudios|{}canSendAudios[0]
        final fun <get-canSendAudios>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendAudios.<get-canSendAudios>|<get-canSendAudios>(){}[0]
        final fun <set-canSendAudios>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendAudios.<set-canSendAudios>|<set-canSendAudios>(kotlin.Boolean?){}[0]
    final var canSendDocuments // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendDocuments|{}canSendDocuments[0]
        final fun <get-canSendDocuments>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendDocuments.<get-canSendDocuments>|<get-canSendDocuments>(){}[0]
        final fun <set-canSendDocuments>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendDocuments.<set-canSendDocuments>|<set-canSendDocuments>(kotlin.Boolean?){}[0]
    final var canSendMessages // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendMessages|{}canSendMessages[0]
        final fun <get-canSendMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendMessages.<get-canSendMessages>|<get-canSendMessages>(){}[0]
        final fun <set-canSendMessages>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendMessages.<set-canSendMessages>|<set-canSendMessages>(kotlin.Boolean?){}[0]
    final var canSendOtherMessages // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendOtherMessages|{}canSendOtherMessages[0]
        final fun <get-canSendOtherMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendOtherMessages.<get-canSendOtherMessages>|<get-canSendOtherMessages>(){}[0]
        final fun <set-canSendOtherMessages>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendOtherMessages.<set-canSendOtherMessages>|<set-canSendOtherMessages>(kotlin.Boolean?){}[0]
    final var canSendPhotos // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendPhotos|{}canSendPhotos[0]
        final fun <get-canSendPhotos>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendPhotos.<get-canSendPhotos>|<get-canSendPhotos>(){}[0]
        final fun <set-canSendPhotos>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendPhotos.<set-canSendPhotos>|<set-canSendPhotos>(kotlin.Boolean?){}[0]
    final var canSendPolls // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendPolls|{}canSendPolls[0]
        final fun <get-canSendPolls>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendPolls.<get-canSendPolls>|<get-canSendPolls>(){}[0]
        final fun <set-canSendPolls>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendPolls.<set-canSendPolls>|<set-canSendPolls>(kotlin.Boolean?){}[0]
    final var canSendVideoNotes // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendVideoNotes|{}canSendVideoNotes[0]
        final fun <get-canSendVideoNotes>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendVideoNotes.<get-canSendVideoNotes>|<get-canSendVideoNotes>(){}[0]
        final fun <set-canSendVideoNotes>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendVideoNotes.<set-canSendVideoNotes>|<set-canSendVideoNotes>(kotlin.Boolean?){}[0]
    final var canSendVideos // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendVideos|{}canSendVideos[0]
        final fun <get-canSendVideos>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendVideos.<get-canSendVideos>|<get-canSendVideos>(){}[0]
        final fun <set-canSendVideos>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendVideos.<set-canSendVideos>|<set-canSendVideos>(kotlin.Boolean?){}[0]
    final var canSendVoiceNotes // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendVoiceNotes|{}canSendVoiceNotes[0]
        final fun <get-canSendVoiceNotes>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendVoiceNotes.<get-canSendVoiceNotes>|<get-canSendVoiceNotes>(){}[0]
        final fun <set-canSendVoiceNotes>(kotlin/Boolean?) // eu.vendeli.tgbot.types.chat/ChatPermissions.canSendVoiceNotes.<set-canSendVoiceNotes>|<set-canSendVoiceNotes>(kotlin.Boolean?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component10|component10(){}[0]
    final fun component11(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component11|component11(){}[0]
    final fun component12(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component12|component12(){}[0]
    final fun component13(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component13|component13(){}[0]
    final fun component14(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component14|component14(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatPermissions.component9|component9(){}[0]
    final fun copy(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.chat/ChatPermissions // eu.vendeli.tgbot.types.chat/ChatPermissions.copy|copy(kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatPermissions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatPermissions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatPermissions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatPermissions> { // eu.vendeli.tgbot.types.chat/ChatPermissions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.chat/ChatPermissions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatPermissions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatPermissions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatPermissions // eu.vendeli.tgbot.types.chat/ChatPermissions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatPermissions) // eu.vendeli.tgbot.types.chat/ChatPermissions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatPermissions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.chat/ChatPermissions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatPermissions> // eu.vendeli.tgbot.types.chat/ChatPermissions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.chat/ChatPhoto { // eu.vendeli.tgbot.types.chat/ChatPhoto|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.chat/ChatPhoto.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String){}[0]

    final val bigFileId // eu.vendeli.tgbot.types.chat/ChatPhoto.bigFileId|{}bigFileId[0]
        final fun <get-bigFileId>(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatPhoto.bigFileId.<get-bigFileId>|<get-bigFileId>(){}[0]
    final val bigFileUniqueId // eu.vendeli.tgbot.types.chat/ChatPhoto.bigFileUniqueId|{}bigFileUniqueId[0]
        final fun <get-bigFileUniqueId>(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatPhoto.bigFileUniqueId.<get-bigFileUniqueId>|<get-bigFileUniqueId>(){}[0]
    final val smallFileId // eu.vendeli.tgbot.types.chat/ChatPhoto.smallFileId|{}smallFileId[0]
        final fun <get-smallFileId>(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatPhoto.smallFileId.<get-smallFileId>|<get-smallFileId>(){}[0]
    final val smallFileUniqueId // eu.vendeli.tgbot.types.chat/ChatPhoto.smallFileUniqueId|{}smallFileUniqueId[0]
        final fun <get-smallFileUniqueId>(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatPhoto.smallFileUniqueId.<get-smallFileUniqueId>|<get-smallFileUniqueId>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatPhoto.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatPhoto.component2|component2(){}[0]
    final fun component3(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatPhoto.component3|component3(){}[0]
    final fun component4(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatPhoto.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.chat/ChatPhoto // eu.vendeli.tgbot.types.chat/ChatPhoto.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatPhoto.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatPhoto.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatPhoto.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatPhoto> { // eu.vendeli.tgbot.types.chat/ChatPhoto.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.chat/ChatPhoto.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatPhoto.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatPhoto.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatPhoto // eu.vendeli.tgbot.types.chat/ChatPhoto.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatPhoto) // eu.vendeli.tgbot.types.chat/ChatPhoto.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatPhoto){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.chat/ChatPhoto.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatPhoto> // eu.vendeli.tgbot.types.chat/ChatPhoto.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.chat/ChatShared { // eu.vendeli.tgbot.types.chat/ChatShared|null[0]
    constructor <init>(kotlin/Int, kotlin/Long, kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? = ...) // eu.vendeli.tgbot.types.chat/ChatShared.<init>|<init>(kotlin.Int;kotlin.Long;kotlin.String?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>?){}[0]

    final val chatId // eu.vendeli.tgbot.types.chat/ChatShared.chatId|{}chatId[0]
        final fun <get-chatId>(): kotlin/Long // eu.vendeli.tgbot.types.chat/ChatShared.chatId.<get-chatId>|<get-chatId>(){}[0]
    final val photo // eu.vendeli.tgbot.types.chat/ChatShared.photo|{}photo[0]
        final fun <get-photo>(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? // eu.vendeli.tgbot.types.chat/ChatShared.photo.<get-photo>|<get-photo>(){}[0]
    final val requestId // eu.vendeli.tgbot.types.chat/ChatShared.requestId|{}requestId[0]
        final fun <get-requestId>(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatShared.requestId.<get-requestId>|<get-requestId>(){}[0]
    final val title // eu.vendeli.tgbot.types.chat/ChatShared.title|{}title[0]
        final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatShared.title.<get-title>|<get-title>(){}[0]
    final val username // eu.vendeli.tgbot.types.chat/ChatShared.username|{}username[0]
        final fun <get-username>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatShared.username.<get-username>|<get-username>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatShared.component1|component1(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.tgbot.types.chat/ChatShared.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatShared.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatShared.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? // eu.vendeli.tgbot.types.chat/ChatShared.component5|component5(){}[0]
    final fun copy(kotlin/Int = ..., kotlin/Long = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? = ...): eu.vendeli.tgbot.types.chat/ChatShared // eu.vendeli.tgbot.types.chat/ChatShared.copy|copy(kotlin.Int;kotlin.Long;kotlin.String?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatShared.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatShared.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatShared.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatShared> { // eu.vendeli.tgbot.types.chat/ChatShared.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.chat/ChatShared.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatShared.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatShared.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatShared // eu.vendeli.tgbot.types.chat/ChatShared.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatShared) // eu.vendeli.tgbot.types.chat/ChatShared.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatShared){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.chat/ChatShared.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.chat/ChatShared.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatShared> // eu.vendeli.tgbot.types.chat/ChatShared.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.forum/ForumTopic { // eu.vendeli.tgbot.types.forum/ForumTopic|null[0]
    constructor <init>(kotlin/Int, kotlin/String, eu.vendeli.tgbot.types.forum/IconColor, kotlin/String? = ...) // eu.vendeli.tgbot.types.forum/ForumTopic.<init>|<init>(kotlin.Int;kotlin.String;eu.vendeli.tgbot.types.forum.IconColor;kotlin.String?){}[0]

    final val iconColor // eu.vendeli.tgbot.types.forum/ForumTopic.iconColor|{}iconColor[0]
        final fun <get-iconColor>(): eu.vendeli.tgbot.types.forum/IconColor // eu.vendeli.tgbot.types.forum/ForumTopic.iconColor.<get-iconColor>|<get-iconColor>(){}[0]
    final val iconCustomEmojiId // eu.vendeli.tgbot.types.forum/ForumTopic.iconCustomEmojiId|{}iconCustomEmojiId[0]
        final fun <get-iconCustomEmojiId>(): kotlin/String? // eu.vendeli.tgbot.types.forum/ForumTopic.iconCustomEmojiId.<get-iconCustomEmojiId>|<get-iconCustomEmojiId>(){}[0]
    final val messageThreadId // eu.vendeli.tgbot.types.forum/ForumTopic.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int // eu.vendeli.tgbot.types.forum/ForumTopic.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
    final val name // eu.vendeli.tgbot.types.forum/ForumTopic.name|{}name[0]
        final fun <get-name>(): kotlin/String // eu.vendeli.tgbot.types.forum/ForumTopic.name.<get-name>|<get-name>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.forum/ForumTopic.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.forum/ForumTopic.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.forum/IconColor // eu.vendeli.tgbot.types.forum/ForumTopic.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.forum/ForumTopic.component4|component4(){}[0]
    final fun copy(kotlin/Int = ..., kotlin/String = ..., eu.vendeli.tgbot.types.forum/IconColor = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.forum/ForumTopic // eu.vendeli.tgbot.types.forum/ForumTopic.copy|copy(kotlin.Int;kotlin.String;eu.vendeli.tgbot.types.forum.IconColor;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.forum/ForumTopic.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.forum/ForumTopic.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.forum/ForumTopic.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.forum/ForumTopic> { // eu.vendeli.tgbot.types.forum/ForumTopic.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.forum/ForumTopic.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.forum/ForumTopic.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.forum/ForumTopic.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.forum/ForumTopic // eu.vendeli.tgbot.types.forum/ForumTopic.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.forum/ForumTopic) // eu.vendeli.tgbot.types.forum/ForumTopic.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.forum.ForumTopic){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.forum/ForumTopic.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.forum/ForumTopic.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.forum/ForumTopic> // eu.vendeli.tgbot.types.forum/ForumTopic.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.forum/ForumTopicCreated { // eu.vendeli.tgbot.types.forum/ForumTopicCreated|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types.forum/IconColor, kotlin/String? = ...) // eu.vendeli.tgbot.types.forum/ForumTopicCreated.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.forum.IconColor;kotlin.String?){}[0]

    final val iconColor // eu.vendeli.tgbot.types.forum/ForumTopicCreated.iconColor|{}iconColor[0]
        final fun <get-iconColor>(): eu.vendeli.tgbot.types.forum/IconColor // eu.vendeli.tgbot.types.forum/ForumTopicCreated.iconColor.<get-iconColor>|<get-iconColor>(){}[0]
    final val iconCustomEmojiId // eu.vendeli.tgbot.types.forum/ForumTopicCreated.iconCustomEmojiId|{}iconCustomEmojiId[0]
        final fun <get-iconCustomEmojiId>(): kotlin/String? // eu.vendeli.tgbot.types.forum/ForumTopicCreated.iconCustomEmojiId.<get-iconCustomEmojiId>|<get-iconCustomEmojiId>(){}[0]
    final val name // eu.vendeli.tgbot.types.forum/ForumTopicCreated.name|{}name[0]
        final fun <get-name>(): kotlin/String // eu.vendeli.tgbot.types.forum/ForumTopicCreated.name.<get-name>|<get-name>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.forum/ForumTopicCreated.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.forum/IconColor // eu.vendeli.tgbot.types.forum/ForumTopicCreated.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.forum/ForumTopicCreated.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types.forum/IconColor = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.forum/ForumTopicCreated // eu.vendeli.tgbot.types.forum/ForumTopicCreated.copy|copy(kotlin.String;eu.vendeli.tgbot.types.forum.IconColor;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.forum/ForumTopicCreated.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.forum/ForumTopicCreated.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.forum/ForumTopicCreated.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.forum/ForumTopicCreated> { // eu.vendeli.tgbot.types.forum/ForumTopicCreated.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.forum/ForumTopicCreated.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.forum/ForumTopicCreated.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.forum/ForumTopicCreated.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.forum/ForumTopicCreated // eu.vendeli.tgbot.types.forum/ForumTopicCreated.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.forum/ForumTopicCreated) // eu.vendeli.tgbot.types.forum/ForumTopicCreated.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.forum.ForumTopicCreated){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.forum/ForumTopicCreated.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.forum/ForumTopicCreated.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.forum/ForumTopicCreated> // eu.vendeli.tgbot.types.forum/ForumTopicCreated.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.forum/ForumTopicEdited { // eu.vendeli.tgbot.types.forum/ForumTopicEdited|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types.forum/ForumTopicEdited.<init>|<init>(kotlin.String?;kotlin.String?){}[0]

    final val iconCustomEmojiId // eu.vendeli.tgbot.types.forum/ForumTopicEdited.iconCustomEmojiId|{}iconCustomEmojiId[0]
        final fun <get-iconCustomEmojiId>(): kotlin/String? // eu.vendeli.tgbot.types.forum/ForumTopicEdited.iconCustomEmojiId.<get-iconCustomEmojiId>|<get-iconCustomEmojiId>(){}[0]
    final val name // eu.vendeli.tgbot.types.forum/ForumTopicEdited.name|{}name[0]
        final fun <get-name>(): kotlin/String? // eu.vendeli.tgbot.types.forum/ForumTopicEdited.name.<get-name>|<get-name>(){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.forum/ForumTopicEdited.component1|component1(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.tgbot.types.forum/ForumTopicEdited.component2|component2(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.forum/ForumTopicEdited // eu.vendeli.tgbot.types.forum/ForumTopicEdited.copy|copy(kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.forum/ForumTopicEdited.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.forum/ForumTopicEdited.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.forum/ForumTopicEdited.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.forum/ForumTopicEdited> { // eu.vendeli.tgbot.types.forum/ForumTopicEdited.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.forum/ForumTopicEdited.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.forum/ForumTopicEdited.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.forum/ForumTopicEdited.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.forum/ForumTopicEdited // eu.vendeli.tgbot.types.forum/ForumTopicEdited.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.forum/ForumTopicEdited) // eu.vendeli.tgbot.types.forum/ForumTopicEdited.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.forum.ForumTopicEdited){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.forum/ForumTopicEdited.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.forum/ForumTopicEdited> // eu.vendeli.tgbot.types.forum/ForumTopicEdited.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.game/Dice { // eu.vendeli.tgbot.types.game/Dice|null[0]
    constructor <init>(kotlin/String, kotlin/Int) // eu.vendeli.tgbot.types.game/Dice.<init>|<init>(kotlin.String;kotlin.Int){}[0]

    final val emoji // eu.vendeli.tgbot.types.game/Dice.emoji|{}emoji[0]
        final fun <get-emoji>(): kotlin/String // eu.vendeli.tgbot.types.game/Dice.emoji.<get-emoji>|<get-emoji>(){}[0]
    final val value // eu.vendeli.tgbot.types.game/Dice.value|{}value[0]
        final fun <get-value>(): kotlin/Int // eu.vendeli.tgbot.types.game/Dice.value.<get-value>|<get-value>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.game/Dice.component1|component1(){}[0]
    final fun component2(): kotlin/Int // eu.vendeli.tgbot.types.game/Dice.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Int = ...): eu.vendeli.tgbot.types.game/Dice // eu.vendeli.tgbot.types.game/Dice.copy|copy(kotlin.String;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.game/Dice.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.game/Dice.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.game/Dice.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.game/Dice> { // eu.vendeli.tgbot.types.game/Dice.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.game/Dice.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.game/Dice.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.game/Dice.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.game/Dice // eu.vendeli.tgbot.types.game/Dice.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.game/Dice) // eu.vendeli.tgbot.types.game/Dice.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.game.Dice){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.game/Dice.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.game/Dice> // eu.vendeli.tgbot.types.game/Dice.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.game/Game { // eu.vendeli.tgbot.types.game/Game|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>, kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.media/Animation? = ...) // eu.vendeli.tgbot.types.game/Game.<init>|<init>(kotlin.String;kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.media.Animation?){}[0]

    final val animation // eu.vendeli.tgbot.types.game/Game.animation|{}animation[0]
        final fun <get-animation>(): eu.vendeli.tgbot.types.media/Animation? // eu.vendeli.tgbot.types.game/Game.animation.<get-animation>|<get-animation>(){}[0]
    final val description // eu.vendeli.tgbot.types.game/Game.description|{}description[0]
        final fun <get-description>(): kotlin/String // eu.vendeli.tgbot.types.game/Game.description.<get-description>|<get-description>(){}[0]
    final val photo // eu.vendeli.tgbot.types.game/Game.photo|{}photo[0]
        final fun <get-photo>(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize> // eu.vendeli.tgbot.types.game/Game.photo.<get-photo>|<get-photo>(){}[0]
    final val text // eu.vendeli.tgbot.types.game/Game.text|{}text[0]
        final fun <get-text>(): kotlin/String? // eu.vendeli.tgbot.types.game/Game.text.<get-text>|<get-text>(){}[0]
    final val textEntities // eu.vendeli.tgbot.types.game/Game.textEntities|{}textEntities[0]
        final fun <get-textEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.game/Game.textEntities.<get-textEntities>|<get-textEntities>(){}[0]
    final val title // eu.vendeli.tgbot.types.game/Game.title|{}title[0]
        final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.game/Game.title.<get-title>|<get-title>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.game/Game.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.game/Game.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize> // eu.vendeli.tgbot.types.game/Game.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.game/Game.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.game/Game.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types.media/Animation? // eu.vendeli.tgbot.types.game/Game.component6|component6(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize> = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.media/Animation? = ...): eu.vendeli.tgbot.types.game/Game // eu.vendeli.tgbot.types.game/Game.copy|copy(kotlin.String;kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.media.Animation?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.game/Game.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.game/Game.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.game/Game.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.game/Game> { // eu.vendeli.tgbot.types.game/Game.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.game/Game.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.game/Game.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.game/Game.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.game/Game // eu.vendeli.tgbot.types.game/Game.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.game/Game) // eu.vendeli.tgbot.types.game/Game.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.game.Game){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.game/Game.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.game/Game.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.game/Game> // eu.vendeli.tgbot.types.game/Game.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.game/GameHighScore : eu.vendeli.tgbot.interfaces.marker/MultipleResponse { // eu.vendeli.tgbot.types.game/GameHighScore|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/User, kotlin/Long) // eu.vendeli.tgbot.types.game/GameHighScore.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.User;kotlin.Long){}[0]

    final val position // eu.vendeli.tgbot.types.game/GameHighScore.position|{}position[0]
        final fun <get-position>(): kotlin/Int // eu.vendeli.tgbot.types.game/GameHighScore.position.<get-position>|<get-position>(){}[0]
    final val score // eu.vendeli.tgbot.types.game/GameHighScore.score|{}score[0]
        final fun <get-score>(): kotlin/Long // eu.vendeli.tgbot.types.game/GameHighScore.score.<get-score>|<get-score>(){}[0]
    final val user // eu.vendeli.tgbot.types.game/GameHighScore.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.game/GameHighScore.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.game/GameHighScore.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.game/GameHighScore.component2|component2(){}[0]
    final fun component3(): kotlin/Long // eu.vendeli.tgbot.types.game/GameHighScore.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/User = ..., kotlin/Long = ...): eu.vendeli.tgbot.types.game/GameHighScore // eu.vendeli.tgbot.types.game/GameHighScore.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.User;kotlin.Long){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.game/GameHighScore.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.game/GameHighScore.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.game/GameHighScore.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.game/GameHighScore> { // eu.vendeli.tgbot.types.game/GameHighScore.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.game/GameHighScore.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.game/GameHighScore.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.game/GameHighScore.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.game/GameHighScore // eu.vendeli.tgbot.types.game/GameHighScore.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.game/GameHighScore) // eu.vendeli.tgbot.types.game/GameHighScore.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.game.GameHighScore){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.game/GameHighScore.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.game/GameHighScore> // eu.vendeli.tgbot.types.game/GameHighScore.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.giveaway/Giveaway { // eu.vendeli.tgbot.types.giveaway/Giveaway|null[0]
    constructor <init>(kotlin.collections/List<eu.vendeli.tgbot.types.chat/Chat>, kotlinx.datetime/Instant, kotlin/Int, kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin.collections/List<kotlin/String>? = ..., kotlin/Int? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.giveaway/Giveaway.<init>|<init>(kotlin.collections.List<eu.vendeli.tgbot.types.chat.Chat>;kotlinx.datetime.Instant;kotlin.Int;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.collections.List<kotlin.String>?;kotlin.Int?;kotlin.Int?){}[0]

    final val chats // eu.vendeli.tgbot.types.giveaway/Giveaway.chats|{}chats[0]
        final fun <get-chats>(): kotlin.collections/List<eu.vendeli.tgbot.types.chat/Chat> // eu.vendeli.tgbot.types.giveaway/Giveaway.chats.<get-chats>|<get-chats>(){}[0]
    final val countryCodes // eu.vendeli.tgbot.types.giveaway/Giveaway.countryCodes|{}countryCodes[0]
        final fun <get-countryCodes>(): kotlin.collections/List<kotlin/String>? // eu.vendeli.tgbot.types.giveaway/Giveaway.countryCodes.<get-countryCodes>|<get-countryCodes>(){}[0]
    final val hasPublicWinners // eu.vendeli.tgbot.types.giveaway/Giveaway.hasPublicWinners|{}hasPublicWinners[0]
        final fun <get-hasPublicWinners>(): kotlin/Boolean? // eu.vendeli.tgbot.types.giveaway/Giveaway.hasPublicWinners.<get-hasPublicWinners>|<get-hasPublicWinners>(){}[0]
    final val onlyNewMembers // eu.vendeli.tgbot.types.giveaway/Giveaway.onlyNewMembers|{}onlyNewMembers[0]
        final fun <get-onlyNewMembers>(): kotlin/Boolean? // eu.vendeli.tgbot.types.giveaway/Giveaway.onlyNewMembers.<get-onlyNewMembers>|<get-onlyNewMembers>(){}[0]
    final val premiumSubscriptionMonthCount // eu.vendeli.tgbot.types.giveaway/Giveaway.premiumSubscriptionMonthCount|{}premiumSubscriptionMonthCount[0]
        final fun <get-premiumSubscriptionMonthCount>(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/Giveaway.premiumSubscriptionMonthCount.<get-premiumSubscriptionMonthCount>|<get-premiumSubscriptionMonthCount>(){}[0]
    final val prizeDescription // eu.vendeli.tgbot.types.giveaway/Giveaway.prizeDescription|{}prizeDescription[0]
        final fun <get-prizeDescription>(): kotlin/String? // eu.vendeli.tgbot.types.giveaway/Giveaway.prizeDescription.<get-prizeDescription>|<get-prizeDescription>(){}[0]
    final val prizeStarCount // eu.vendeli.tgbot.types.giveaway/Giveaway.prizeStarCount|{}prizeStarCount[0]
        final fun <get-prizeStarCount>(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/Giveaway.prizeStarCount.<get-prizeStarCount>|<get-prizeStarCount>(){}[0]
    final val winnerCount // eu.vendeli.tgbot.types.giveaway/Giveaway.winnerCount|{}winnerCount[0]
        final fun <get-winnerCount>(): kotlin/Int // eu.vendeli.tgbot.types.giveaway/Giveaway.winnerCount.<get-winnerCount>|<get-winnerCount>(){}[0]
    final val winnersSelectionDate // eu.vendeli.tgbot.types.giveaway/Giveaway.winnersSelectionDate|{}winnersSelectionDate[0]
        final fun <get-winnersSelectionDate>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.giveaway/Giveaway.winnersSelectionDate.<get-winnersSelectionDate>|<get-winnersSelectionDate>(){}[0]

    final fun component1(): kotlin.collections/List<eu.vendeli.tgbot.types.chat/Chat> // eu.vendeli.tgbot.types.giveaway/Giveaway.component1|component1(){}[0]
    final fun component2(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.giveaway/Giveaway.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types.giveaway/Giveaway.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.giveaway/Giveaway.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.giveaway/Giveaway.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.giveaway/Giveaway.component6|component6(){}[0]
    final fun component7(): kotlin.collections/List<kotlin/String>? // eu.vendeli.tgbot.types.giveaway/Giveaway.component7|component7(){}[0]
    final fun component8(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/Giveaway.component8|component8(){}[0]
    final fun component9(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/Giveaway.component9|component9(){}[0]
    final fun copy(kotlin.collections/List<eu.vendeli.tgbot.types.chat/Chat> = ..., kotlinx.datetime/Instant = ..., kotlin/Int = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin.collections/List<kotlin/String>? = ..., kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.giveaway/Giveaway // eu.vendeli.tgbot.types.giveaway/Giveaway.copy|copy(kotlin.collections.List<eu.vendeli.tgbot.types.chat.Chat>;kotlinx.datetime.Instant;kotlin.Int;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.collections.List<kotlin.String>?;kotlin.Int?;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.giveaway/Giveaway.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.giveaway/Giveaway.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.giveaway/Giveaway.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.giveaway/Giveaway> { // eu.vendeli.tgbot.types.giveaway/Giveaway.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.giveaway/Giveaway.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.giveaway/Giveaway.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.giveaway/Giveaway.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.giveaway/Giveaway // eu.vendeli.tgbot.types.giveaway/Giveaway.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.giveaway/Giveaway) // eu.vendeli.tgbot.types.giveaway/Giveaway.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.giveaway.Giveaway){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.giveaway/Giveaway.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.giveaway/Giveaway.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.giveaway/Giveaway> // eu.vendeli.tgbot.types.giveaway/Giveaway.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.giveaway/GiveawayCompleted { // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted|null[0]
    constructor <init>(kotlin/Int, kotlin/Int? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.<init>|<init>(kotlin.Int;kotlin.Int?;eu.vendeli.tgbot.types.msg.Message?;kotlin.Boolean?){}[0]

    final val giveawayMessage // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.giveawayMessage|{}giveawayMessage[0]
        final fun <get-giveawayMessage>(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.giveawayMessage.<get-giveawayMessage>|<get-giveawayMessage>(){}[0]
    final val isStarGiveaway // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.isStarGiveaway|{}isStarGiveaway[0]
        final fun <get-isStarGiveaway>(): kotlin/Boolean? // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.isStarGiveaway.<get-isStarGiveaway>|<get-isStarGiveaway>(){}[0]
    final val unclaimedPrizeCount // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.unclaimedPrizeCount|{}unclaimedPrizeCount[0]
        final fun <get-unclaimedPrizeCount>(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.unclaimedPrizeCount.<get-unclaimedPrizeCount>|<get-unclaimedPrizeCount>(){}[0]
    final val winnerCount // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.winnerCount|{}winnerCount[0]
        final fun <get-winnerCount>(): kotlin/Int // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.winnerCount.<get-winnerCount>|<get-winnerCount>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.component1|component1(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.component4|component4(){}[0]
    final fun copy(kotlin/Int = ..., kotlin/Int? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.giveaway/GiveawayCompleted // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.copy|copy(kotlin.Int;kotlin.Int?;eu.vendeli.tgbot.types.msg.Message?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.giveaway/GiveawayCompleted> { // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.giveaway/GiveawayCompleted // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.giveaway/GiveawayCompleted) // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.giveaway.GiveawayCompleted){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.giveaway/GiveawayCompleted> // eu.vendeli.tgbot.types.giveaway/GiveawayCompleted.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.giveaway/GiveawayCreated { // eu.vendeli.tgbot.types.giveaway/GiveawayCreated|null[0]
    constructor <init>(kotlin/Int? = ...) // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.<init>|<init>(kotlin.Int?){}[0]

    final val prizeStarCount // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.prizeStarCount|{}prizeStarCount[0]
        final fun <get-prizeStarCount>(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.prizeStarCount.<get-prizeStarCount>|<get-prizeStarCount>(){}[0]

    final fun component1(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.component1|component1(){}[0]
    final fun copy(kotlin/Int? = ...): eu.vendeli.tgbot.types.giveaway/GiveawayCreated // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.copy|copy(kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.giveaway/GiveawayCreated> { // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.giveaway/GiveawayCreated // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.giveaway/GiveawayCreated) // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.giveaway.GiveawayCreated){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.giveaway/GiveawayCreated> // eu.vendeli.tgbot.types.giveaway/GiveawayCreated.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.giveaway/GiveawayWinners { // eu.vendeli.tgbot.types.giveaway/GiveawayWinners|null[0]
    constructor <init>(eu.vendeli.tgbot.types.chat/Chat, kotlin/Long, kotlinx.datetime/Instant, kotlin/Int, kotlin.collections/List<eu.vendeli.tgbot.types/User>, kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.<init>|<init>(eu.vendeli.tgbot.types.chat.Chat;kotlin.Long;kotlinx.datetime.Instant;kotlin.Int;kotlin.collections.List<eu.vendeli.tgbot.types.User>;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?){}[0]

    final val additionalChatCount // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.additionalChatCount|{}additionalChatCount[0]
        final fun <get-additionalChatCount>(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.additionalChatCount.<get-additionalChatCount>|<get-additionalChatCount>(){}[0]
    final val chat // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.chat|{}chat[0]
        final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.chat.<get-chat>|<get-chat>(){}[0]
    final val giveawayMessageId // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.giveawayMessageId|{}giveawayMessageId[0]
        final fun <get-giveawayMessageId>(): kotlin/Long // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.giveawayMessageId.<get-giveawayMessageId>|<get-giveawayMessageId>(){}[0]
    final val onlyNewMembers // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.onlyNewMembers|{}onlyNewMembers[0]
        final fun <get-onlyNewMembers>(): kotlin/Boolean? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.onlyNewMembers.<get-onlyNewMembers>|<get-onlyNewMembers>(){}[0]
    final val premiumSubscriptionMonthCount // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.premiumSubscriptionMonthCount|{}premiumSubscriptionMonthCount[0]
        final fun <get-premiumSubscriptionMonthCount>(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.premiumSubscriptionMonthCount.<get-premiumSubscriptionMonthCount>|<get-premiumSubscriptionMonthCount>(){}[0]
    final val prizeDescription // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.prizeDescription|{}prizeDescription[0]
        final fun <get-prizeDescription>(): kotlin/String? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.prizeDescription.<get-prizeDescription>|<get-prizeDescription>(){}[0]
    final val prizeStarCount // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.prizeStarCount|{}prizeStarCount[0]
        final fun <get-prizeStarCount>(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.prizeStarCount.<get-prizeStarCount>|<get-prizeStarCount>(){}[0]
    final val unclaimedPrizeCount // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.unclaimedPrizeCount|{}unclaimedPrizeCount[0]
        final fun <get-unclaimedPrizeCount>(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.unclaimedPrizeCount.<get-unclaimedPrizeCount>|<get-unclaimedPrizeCount>(){}[0]
    final val wasRefunded // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.wasRefunded|{}wasRefunded[0]
        final fun <get-wasRefunded>(): kotlin/Boolean? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.wasRefunded.<get-wasRefunded>|<get-wasRefunded>(){}[0]
    final val winnerCount // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.winnerCount|{}winnerCount[0]
        final fun <get-winnerCount>(): kotlin/Int // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.winnerCount.<get-winnerCount>|<get-winnerCount>(){}[0]
    final val winners // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.winners|{}winners[0]
        final fun <get-winners>(): kotlin.collections/List<eu.vendeli.tgbot.types/User> // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.winners.<get-winners>|<get-winners>(){}[0]
    final val winnersSelectionDate // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.winnersSelectionDate|{}winnersSelectionDate[0]
        final fun <get-winnersSelectionDate>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.winnersSelectionDate.<get-winnersSelectionDate>|<get-winnersSelectionDate>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.component10|component10(){}[0]
    final fun component11(): kotlin/Boolean? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.component11|component11(){}[0]
    final fun component12(): kotlin/String? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.component12|component12(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.component2|component2(){}[0]
    final fun component3(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.component3|component3(){}[0]
    final fun component4(): kotlin/Int // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<eu.vendeli.tgbot.types/User> // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.component5|component5(){}[0]
    final fun component6(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.component6|component6(){}[0]
    final fun component7(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.component7|component7(){}[0]
    final fun component8(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.component8|component8(){}[0]
    final fun component9(): kotlin/Int? // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.component9|component9(){}[0]
    final fun copy(eu.vendeli.tgbot.types.chat/Chat = ..., kotlin/Long = ..., kotlinx.datetime/Instant = ..., kotlin/Int = ..., kotlin.collections/List<eu.vendeli.tgbot.types/User> = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.giveaway/GiveawayWinners // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.copy|copy(eu.vendeli.tgbot.types.chat.Chat;kotlin.Long;kotlinx.datetime.Instant;kotlin.Int;kotlin.collections.List<eu.vendeli.tgbot.types.User>;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.giveaway/GiveawayWinners> { // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.giveaway/GiveawayWinners // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.giveaway/GiveawayWinners) // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.giveaway.GiveawayWinners){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.giveaway/GiveawayWinners> // eu.vendeli.tgbot.types.giveaway/GiveawayWinners.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.inline/ChosenInlineResult { // eu.vendeli.tgbot.types.inline/ChosenInlineResult|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types/User, eu.vendeli.tgbot.types/Location? = ..., kotlin/String? = ..., kotlin/String) // eu.vendeli.tgbot.types.inline/ChosenInlineResult.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.Location?;kotlin.String?;kotlin.String){}[0]

    final val from // eu.vendeli.tgbot.types.inline/ChosenInlineResult.from|{}from[0]
        final fun <get-from>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.inline/ChosenInlineResult.from.<get-from>|<get-from>(){}[0]
    final val inlineMessageId // eu.vendeli.tgbot.types.inline/ChosenInlineResult.inlineMessageId|{}inlineMessageId[0]
        final fun <get-inlineMessageId>(): kotlin/String? // eu.vendeli.tgbot.types.inline/ChosenInlineResult.inlineMessageId.<get-inlineMessageId>|<get-inlineMessageId>(){}[0]
    final val location // eu.vendeli.tgbot.types.inline/ChosenInlineResult.location|{}location[0]
        final fun <get-location>(): eu.vendeli.tgbot.types/Location? // eu.vendeli.tgbot.types.inline/ChosenInlineResult.location.<get-location>|<get-location>(){}[0]
    final val query // eu.vendeli.tgbot.types.inline/ChosenInlineResult.query|{}query[0]
        final fun <get-query>(): kotlin/String // eu.vendeli.tgbot.types.inline/ChosenInlineResult.query.<get-query>|<get-query>(){}[0]
    final val resultId // eu.vendeli.tgbot.types.inline/ChosenInlineResult.resultId|{}resultId[0]
        final fun <get-resultId>(): kotlin/String // eu.vendeli.tgbot.types.inline/ChosenInlineResult.resultId.<get-resultId>|<get-resultId>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/ChosenInlineResult.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.inline/ChosenInlineResult.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types/Location? // eu.vendeli.tgbot.types.inline/ChosenInlineResult.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.inline/ChosenInlineResult.component4|component4(){}[0]
    final fun component5(): kotlin/String // eu.vendeli.tgbot.types.inline/ChosenInlineResult.component5|component5(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types/User = ..., eu.vendeli.tgbot.types/Location? = ..., kotlin/String? = ..., kotlin/String = ...): eu.vendeli.tgbot.types.inline/ChosenInlineResult // eu.vendeli.tgbot.types.inline/ChosenInlineResult.copy|copy(kotlin.String;eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.Location?;kotlin.String?;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/ChosenInlineResult.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/ChosenInlineResult.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/ChosenInlineResult.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/ChosenInlineResult> { // eu.vendeli.tgbot.types.inline/ChosenInlineResult.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.inline/ChosenInlineResult.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/ChosenInlineResult.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/ChosenInlineResult.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/ChosenInlineResult // eu.vendeli.tgbot.types.inline/ChosenInlineResult.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/ChosenInlineResult) // eu.vendeli.tgbot.types.inline/ChosenInlineResult.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.ChosenInlineResult){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.inline/ChosenInlineResult.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/ChosenInlineResult> // eu.vendeli.tgbot.types.inline/ChosenInlineResult.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.inline/InlineQuery { // eu.vendeli.tgbot.types.inline/InlineQuery|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types/User, kotlin/String, kotlin/String, eu.vendeli.tgbot.types.chat/ChatType? = ..., eu.vendeli.tgbot.types/Location? = ...) // eu.vendeli.tgbot.types.inline/InlineQuery.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.User;kotlin.String;kotlin.String;eu.vendeli.tgbot.types.chat.ChatType?;eu.vendeli.tgbot.types.Location?){}[0]

    final val chatType // eu.vendeli.tgbot.types.inline/InlineQuery.chatType|{}chatType[0]
        final fun <get-chatType>(): eu.vendeli.tgbot.types.chat/ChatType? // eu.vendeli.tgbot.types.inline/InlineQuery.chatType.<get-chatType>|<get-chatType>(){}[0]
    final val from // eu.vendeli.tgbot.types.inline/InlineQuery.from|{}from[0]
        final fun <get-from>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.inline/InlineQuery.from.<get-from>|<get-from>(){}[0]
    final val id // eu.vendeli.tgbot.types.inline/InlineQuery.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQuery.id.<get-id>|<get-id>(){}[0]
    final val location // eu.vendeli.tgbot.types.inline/InlineQuery.location|{}location[0]
        final fun <get-location>(): eu.vendeli.tgbot.types/Location? // eu.vendeli.tgbot.types.inline/InlineQuery.location.<get-location>|<get-location>(){}[0]
    final val offset // eu.vendeli.tgbot.types.inline/InlineQuery.offset|{}offset[0]
        final fun <get-offset>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQuery.offset.<get-offset>|<get-offset>(){}[0]
    final val query // eu.vendeli.tgbot.types.inline/InlineQuery.query|{}query[0]
        final fun <get-query>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQuery.query.<get-query>|<get-query>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQuery.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.inline/InlineQuery.component2|component2(){}[0]
    final fun component3(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQuery.component3|component3(){}[0]
    final fun component4(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQuery.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types.chat/ChatType? // eu.vendeli.tgbot.types.inline/InlineQuery.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types/Location? // eu.vendeli.tgbot.types.inline/InlineQuery.component6|component6(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types/User = ..., kotlin/String = ..., kotlin/String = ..., eu.vendeli.tgbot.types.chat/ChatType? = ..., eu.vendeli.tgbot.types/Location? = ...): eu.vendeli.tgbot.types.inline/InlineQuery // eu.vendeli.tgbot.types.inline/InlineQuery.copy|copy(kotlin.String;eu.vendeli.tgbot.types.User;kotlin.String;kotlin.String;eu.vendeli.tgbot.types.chat.ChatType?;eu.vendeli.tgbot.types.Location?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQuery.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQuery.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQuery.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQuery> { // eu.vendeli.tgbot.types.inline/InlineQuery.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.inline/InlineQuery.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQuery.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQuery.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQuery // eu.vendeli.tgbot.types.inline/InlineQuery.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQuery) // eu.vendeli.tgbot.types.inline/InlineQuery.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQuery){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.inline/InlineQuery.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQuery.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQuery> // eu.vendeli.tgbot.types.inline/InlineQuery.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.inline/InlineQueryResultsButton { // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types.keyboard/WebAppInfo? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.keyboard.WebAppInfo?;kotlin.String?){}[0]

    final val startParameter // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.startParameter|{}startParameter[0]
        final fun <get-startParameter>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.startParameter.<get-startParameter>|<get-startParameter>(){}[0]
    final val text // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.text.<get-text>|<get-text>(){}[0]
    final val webApp // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.webApp|{}webApp[0]
        final fun <get-webApp>(): eu.vendeli.tgbot.types.keyboard/WebAppInfo? // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.webApp.<get-webApp>|<get-webApp>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.keyboard/WebAppInfo? // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types.keyboard/WebAppInfo? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResultsButton // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.copy|copy(kotlin.String;eu.vendeli.tgbot.types.keyboard.WebAppInfo?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResultsButton> { // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResultsButton // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResultsButton) // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResultsButton){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResultsButton> // eu.vendeli.tgbot.types.inline/InlineQueryResultsButton.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat { // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.<init>|<init>(kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final val allowBotChats // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.allowBotChats|{}allowBotChats[0]
        final fun <get-allowBotChats>(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.allowBotChats.<get-allowBotChats>|<get-allowBotChats>(){}[0]
    final val allowChannelChats // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.allowChannelChats|{}allowChannelChats[0]
        final fun <get-allowChannelChats>(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.allowChannelChats.<get-allowChannelChats>|<get-allowChannelChats>(){}[0]
    final val allowGroupChats // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.allowGroupChats|{}allowGroupChats[0]
        final fun <get-allowGroupChats>(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.allowGroupChats.<get-allowGroupChats>|<get-allowGroupChats>(){}[0]
    final val allowUserChats // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.allowUserChats|{}allowUserChats[0]
        final fun <get-allowUserChats>(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.allowUserChats.<get-allowUserChats>|<get-allowUserChats>(){}[0]
    final val query // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.query|{}query[0]
        final fun <get-query>(): kotlin/String? // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.query.<get-query>|<get-query>(){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.component5|component5(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.copy|copy(kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat> { // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat) // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.SwitchInlineQueryChosenChat){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat> // eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.chain/SingleInputChain { // eu.vendeli.tgbot.types.internal.chain/SingleInputChain|null[0]
    constructor <init>(kotlin/String, kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>, eu.vendeli.tgbot.types.internal.configuration/RateLimits, eu.vendeli.tgbot.interfaces.helper/Guard, kotlin/Int = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.internal/InputBreakPoint? = ...) // eu.vendeli.tgbot.types.internal.chain/SingleInputChain.<init>|<init>(kotlin.String;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Unit>;eu.vendeli.tgbot.types.internal.configuration.RateLimits;eu.vendeli.tgbot.interfaces.helper.Guard;kotlin.Int;kotlin.String?;eu.vendeli.tgbot.types.internal.InputBreakPoint?){}[0]

    final fun copy(kotlin/String = ..., kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit> = ..., eu.vendeli.tgbot.types.internal.configuration/RateLimits = ..., eu.vendeli.tgbot.interfaces.helper/Guard = ..., kotlin/Int = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.internal/InputBreakPoint? = ...): eu.vendeli.tgbot.types.internal.chain/SingleInputChain // eu.vendeli.tgbot.types.internal.chain/SingleInputChain.copy|copy(kotlin.String;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Unit>;eu.vendeli.tgbot.types.internal.configuration.RateLimits;eu.vendeli.tgbot.interfaces.helper.Guard;kotlin.Int;kotlin.String?;eu.vendeli.tgbot.types.internal.InputBreakPoint?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.chain/SingleInputChain.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.chain/SingleInputChain.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.chain/SingleInputChain.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal.configuration/BotConfiguration { // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration|null[0]
    constructor <init>(kotlin/String = ..., kotlin/String = ..., kotlin/Boolean = ..., eu.vendeli.tgbot.interfaces.ctx/InputListener = ..., eu.vendeli.tgbot.interfaces.ctx/ClassManager = ..., kotlin/Boolean = ..., eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy = ..., kotlin/Boolean = ..., eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration = ..., eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration = ..., eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration = ..., eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration = ..., eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration = ...) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.<init>|<init>(kotlin.String;kotlin.String;kotlin.Boolean;eu.vendeli.tgbot.interfaces.ctx.InputListener;eu.vendeli.tgbot.interfaces.ctx.ClassManager;kotlin.Boolean;eu.vendeli.tgbot.types.internal.ExceptionHandlingStrategy;kotlin.Boolean;eu.vendeli.tgbot.types.internal.configuration.RateLimiterConfiguration;eu.vendeli.tgbot.types.internal.configuration.HttpConfiguration;eu.vendeli.tgbot.types.internal.configuration.LoggingConfiguration;eu.vendeli.tgbot.types.internal.configuration.UpdatesListenerConfiguration;eu.vendeli.tgbot.types.internal.configuration.CommandParsingConfiguration){}[0]

    final var apiHost // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.apiHost|{}apiHost[0]
        final fun <get-apiHost>(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.apiHost.<get-apiHost>|<get-apiHost>(){}[0]
        final fun <set-apiHost>(kotlin/String) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.apiHost.<set-apiHost>|<set-apiHost>(kotlin.String){}[0]
    final var classManager // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.classManager|{}classManager[0]
        final fun <get-classManager>(): eu.vendeli.tgbot.interfaces.ctx/ClassManager // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.classManager.<get-classManager>|<get-classManager>(){}[0]
        final fun <set-classManager>(eu.vendeli.tgbot.interfaces.ctx/ClassManager) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.classManager.<set-classManager>|<set-classManager>(eu.vendeli.tgbot.interfaces.ctx.ClassManager){}[0]
    final var exceptionHandlingStrategy // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.exceptionHandlingStrategy|{}exceptionHandlingStrategy[0]
        final fun <get-exceptionHandlingStrategy>(): eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.exceptionHandlingStrategy.<get-exceptionHandlingStrategy>|<get-exceptionHandlingStrategy>(){}[0]
        final fun <set-exceptionHandlingStrategy>(eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.exceptionHandlingStrategy.<set-exceptionHandlingStrategy>|<set-exceptionHandlingStrategy>(eu.vendeli.tgbot.types.internal.ExceptionHandlingStrategy){}[0]
    final var identifier // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.identifier|{}identifier[0]
        final fun <get-identifier>(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.identifier.<get-identifier>|<get-identifier>(){}[0]
        final fun <set-identifier>(kotlin/String) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.identifier.<set-identifier>|<set-identifier>(kotlin.String){}[0]
    final var inputAutoRemoval // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.inputAutoRemoval|{}inputAutoRemoval[0]
        final fun <get-inputAutoRemoval>(): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.inputAutoRemoval.<get-inputAutoRemoval>|<get-inputAutoRemoval>(){}[0]
        final fun <set-inputAutoRemoval>(kotlin/Boolean) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.inputAutoRemoval.<set-inputAutoRemoval>|<set-inputAutoRemoval>(kotlin.Boolean){}[0]
    final var inputListener // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.inputListener|{}inputListener[0]
        final fun <get-inputListener>(): eu.vendeli.tgbot.interfaces.ctx/InputListener // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.inputListener.<get-inputListener>|<get-inputListener>(){}[0]
        final fun <set-inputListener>(eu.vendeli.tgbot.interfaces.ctx/InputListener) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.inputListener.<set-inputListener>|<set-inputListener>(eu.vendeli.tgbot.interfaces.ctx.InputListener){}[0]
    final var isTestEnv // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.isTestEnv|{}isTestEnv[0]
        final fun <get-isTestEnv>(): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.isTestEnv.<get-isTestEnv>|<get-isTestEnv>(){}[0]
        final fun <set-isTestEnv>(kotlin/Boolean) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.isTestEnv.<set-isTestEnv>|<set-isTestEnv>(kotlin.Boolean){}[0]
    final var throwExOnActionsFailure // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.throwExOnActionsFailure|{}throwExOnActionsFailure[0]
        final fun <get-throwExOnActionsFailure>(): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.throwExOnActionsFailure.<get-throwExOnActionsFailure>|<get-throwExOnActionsFailure>(){}[0]
        final fun <set-throwExOnActionsFailure>(kotlin/Boolean) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.throwExOnActionsFailure.<set-throwExOnActionsFailure>|<set-throwExOnActionsFailure>(kotlin.Boolean){}[0]

    final fun commandParsing(kotlin/Function1<eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration, kotlin/Unit>) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.commandParsing|commandParsing(kotlin.Function1<eu.vendeli.tgbot.types.internal.configuration.CommandParsingConfiguration,kotlin.Unit>){}[0]
    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.interfaces.ctx/InputListener // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.interfaces.ctx/ClassManager // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.component6|component6(){}[0]
    final fun component7(): eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.component8|component8(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Boolean = ..., eu.vendeli.tgbot.interfaces.ctx/InputListener = ..., eu.vendeli.tgbot.interfaces.ctx/ClassManager = ..., kotlin/Boolean = ..., eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy = ..., kotlin/Boolean = ..., eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration = ..., eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration = ..., eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration = ..., eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration = ..., eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration = ...): eu.vendeli.tgbot.types.internal.configuration/BotConfiguration // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.copy|copy(kotlin.String;kotlin.String;kotlin.Boolean;eu.vendeli.tgbot.interfaces.ctx.InputListener;eu.vendeli.tgbot.interfaces.ctx.ClassManager;kotlin.Boolean;eu.vendeli.tgbot.types.internal.ExceptionHandlingStrategy;kotlin.Boolean;eu.vendeli.tgbot.types.internal.configuration.RateLimiterConfiguration;eu.vendeli.tgbot.types.internal.configuration.HttpConfiguration;eu.vendeli.tgbot.types.internal.configuration.LoggingConfiguration;eu.vendeli.tgbot.types.internal.configuration.UpdatesListenerConfiguration;eu.vendeli.tgbot.types.internal.configuration.CommandParsingConfiguration){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.hashCode|hashCode(){}[0]
    final fun httpClient(kotlin/Function1<eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration, kotlin/Unit>) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.httpClient|httpClient(kotlin.Function1<eu.vendeli.tgbot.types.internal.configuration.HttpConfiguration,kotlin.Unit>){}[0]
    final fun logging(kotlin/Function1<eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration, kotlin/Unit>) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.logging|logging(kotlin.Function1<eu.vendeli.tgbot.types.internal.configuration.LoggingConfiguration,kotlin.Unit>){}[0]
    final fun rateLimiter(kotlin/Function1<eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration, kotlin/Unit>) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.rateLimiter|rateLimiter(kotlin.Function1<eu.vendeli.tgbot.types.internal.configuration.RateLimiterConfiguration,kotlin.Unit>){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.toString|toString(){}[0]
    final fun updatesListener(kotlin/Function1<eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration, kotlin/Unit>) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.updatesListener|updatesListener(kotlin.Function1<eu.vendeli.tgbot.types.internal.configuration.UpdatesListenerConfiguration,kotlin.Unit>){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.configuration/BotConfiguration> { // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.configuration/BotConfiguration // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.configuration/BotConfiguration) // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.configuration.BotConfiguration){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.configuration/BotConfiguration> // eu.vendeli.tgbot.types.internal.configuration/BotConfiguration.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration { // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration|null[0]
    constructor <init>(kotlin/Char = ..., kotlin/Char = ..., kotlin/Char = ..., kotlin/Boolean = ..., kotlin/Boolean = ...) // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.<init>|<init>(kotlin.Char;kotlin.Char;kotlin.Char;kotlin.Boolean;kotlin.Boolean){}[0]

    final var commandDelimiter // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.commandDelimiter|{}commandDelimiter[0]
        final fun <get-commandDelimiter>(): kotlin/Char // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.commandDelimiter.<get-commandDelimiter>|<get-commandDelimiter>(){}[0]
        final fun <set-commandDelimiter>(kotlin/Char) // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.commandDelimiter.<set-commandDelimiter>|<set-commandDelimiter>(kotlin.Char){}[0]
    final var parameterValueDelimiter // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.parameterValueDelimiter|{}parameterValueDelimiter[0]
        final fun <get-parameterValueDelimiter>(): kotlin/Char // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.parameterValueDelimiter.<get-parameterValueDelimiter>|<get-parameterValueDelimiter>(){}[0]
        final fun <set-parameterValueDelimiter>(kotlin/Char) // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.parameterValueDelimiter.<set-parameterValueDelimiter>|<set-parameterValueDelimiter>(kotlin.Char){}[0]
    final var parametersDelimiter // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.parametersDelimiter|{}parametersDelimiter[0]
        final fun <get-parametersDelimiter>(): kotlin/Char // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.parametersDelimiter.<get-parametersDelimiter>|<get-parametersDelimiter>(){}[0]
        final fun <set-parametersDelimiter>(kotlin/Char) // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.parametersDelimiter.<set-parametersDelimiter>|<set-parametersDelimiter>(kotlin.Char){}[0]
    final var restrictSpacesInCommands // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.restrictSpacesInCommands|{}restrictSpacesInCommands[0]
        final fun <get-restrictSpacesInCommands>(): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.restrictSpacesInCommands.<get-restrictSpacesInCommands>|<get-restrictSpacesInCommands>(){}[0]
        final fun <set-restrictSpacesInCommands>(kotlin/Boolean) // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.restrictSpacesInCommands.<set-restrictSpacesInCommands>|<set-restrictSpacesInCommands>(kotlin.Boolean){}[0]
    final var useIdentifierInGroupCommands // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.useIdentifierInGroupCommands|{}useIdentifierInGroupCommands[0]
        final fun <get-useIdentifierInGroupCommands>(): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.useIdentifierInGroupCommands.<get-useIdentifierInGroupCommands>|<get-useIdentifierInGroupCommands>(){}[0]
        final fun <set-useIdentifierInGroupCommands>(kotlin/Boolean) // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.useIdentifierInGroupCommands.<set-useIdentifierInGroupCommands>|<set-useIdentifierInGroupCommands>(kotlin.Boolean){}[0]

    final fun component1(): kotlin/Char // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.component1|component1(){}[0]
    final fun component2(): kotlin/Char // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.component2|component2(){}[0]
    final fun component3(): kotlin/Char // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.component5|component5(){}[0]
    final fun copy(kotlin/Char = ..., kotlin/Char = ..., kotlin/Char = ..., kotlin/Boolean = ..., kotlin/Boolean = ...): eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.copy|copy(kotlin.Char;kotlin.Char;kotlin.Char;kotlin.Boolean;kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration> { // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration) // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.configuration.CommandParsingConfiguration){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration> // eu.vendeli.tgbot.types.internal.configuration/CommandParsingConfiguration.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.configuration/CompleteConfig { // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types.internal.configuration/BotConfiguration) // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.<init>|<init>(kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.internal.configuration.BotConfiguration){}[0]

    final val configuration // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.configuration|{}configuration[0]
        final fun <get-configuration>(): eu.vendeli.tgbot.types.internal.configuration/BotConfiguration // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.configuration.<get-configuration>|<get-configuration>(){}[0]
    final val pckg // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.pckg|{}pckg[0]
        final fun <get-pckg>(): kotlin/String? // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.pckg.<get-pckg>|<get-pckg>(){}[0]
    final val token // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.token|{}token[0]
        final fun <get-token>(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.token.<get-token>|<get-token>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.component1|component1(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.internal.configuration/BotConfiguration // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.internal.configuration/BotConfiguration = ...): eu.vendeli.tgbot.types.internal.configuration/CompleteConfig // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.copy|copy(kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.internal.configuration.BotConfiguration){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.configuration/CompleteConfig> { // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.configuration/CompleteConfig // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.configuration/CompleteConfig) // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.configuration.CompleteConfig){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.configuration/CompleteConfig> // eu.vendeli.tgbot.types.internal.configuration/CompleteConfig.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration { // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration|null[0]
    constructor <init>(kotlin/Long? = ..., kotlin/Long? = ..., kotlin/Long? = ..., kotlin/Int = ..., kotlin/Function3<io.ktor.client.plugins/HttpRetryShouldRetryContext, io.ktor.client.request/HttpRequest, io.ktor.client.statement/HttpResponse, kotlin/Boolean>? = ..., kotlin/Long = ..., io.ktor.client.engine/ProxyConfig? = ..., kotlin.collections/Map<kotlin/String, kotlin/Any?>? = ...) // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.<init>|<init>(kotlin.Long?;kotlin.Long?;kotlin.Long?;kotlin.Int;kotlin.Function3<io.ktor.client.plugins.HttpRetryShouldRetryContext,io.ktor.client.request.HttpRequest,io.ktor.client.statement.HttpResponse,kotlin.Boolean>?;kotlin.Long;io.ktor.client.engine.ProxyConfig?;kotlin.collections.Map<kotlin.String,kotlin.Any?>?){}[0]

    final val rawStatus // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.rawStatus|@io.ktor.client.statement.HttpResponse{}rawStatus[0]
        final fun (io.ktor.client.statement/HttpResponse).<get-rawStatus>(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.rawStatus.<get-rawStatus>|<get-rawStatus>@io.ktor.client.statement.HttpResponse(){}[0]

    final var additionalHeaders // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.additionalHeaders|{}additionalHeaders[0]
        final fun <get-additionalHeaders>(): kotlin.collections/Map<kotlin/String, kotlin/Any?>? // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.additionalHeaders.<get-additionalHeaders>|<get-additionalHeaders>(){}[0]
        final fun <set-additionalHeaders>(kotlin.collections/Map<kotlin/String, kotlin/Any?>?) // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.additionalHeaders.<set-additionalHeaders>|<set-additionalHeaders>(kotlin.collections.Map<kotlin.String,kotlin.Any?>?){}[0]
    final var connectTimeoutMillis // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.connectTimeoutMillis|{}connectTimeoutMillis[0]
        final fun <get-connectTimeoutMillis>(): kotlin/Long? // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.connectTimeoutMillis.<get-connectTimeoutMillis>|<get-connectTimeoutMillis>(){}[0]
        final fun <set-connectTimeoutMillis>(kotlin/Long?) // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.connectTimeoutMillis.<set-connectTimeoutMillis>|<set-connectTimeoutMillis>(kotlin.Long?){}[0]
    final var maxRequestRetry // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.maxRequestRetry|{}maxRequestRetry[0]
        final fun <get-maxRequestRetry>(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.maxRequestRetry.<get-maxRequestRetry>|<get-maxRequestRetry>(){}[0]
        final fun <set-maxRequestRetry>(kotlin/Int) // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.maxRequestRetry.<set-maxRequestRetry>|<set-maxRequestRetry>(kotlin.Int){}[0]
    final var proxy // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.proxy|{}proxy[0]
        final fun <get-proxy>(): io.ktor.client.engine/ProxyConfig? // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.proxy.<get-proxy>|<get-proxy>(){}[0]
        final fun <set-proxy>(io.ktor.client.engine/ProxyConfig?) // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.proxy.<set-proxy>|<set-proxy>(io.ktor.client.engine.ProxyConfig?){}[0]
    final var requestTimeoutMillis // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.requestTimeoutMillis|{}requestTimeoutMillis[0]
        final fun <get-requestTimeoutMillis>(): kotlin/Long? // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.requestTimeoutMillis.<get-requestTimeoutMillis>|<get-requestTimeoutMillis>(){}[0]
        final fun <set-requestTimeoutMillis>(kotlin/Long?) // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.requestTimeoutMillis.<set-requestTimeoutMillis>|<set-requestTimeoutMillis>(kotlin.Long?){}[0]
    final var retryDelay // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.retryDelay|{}retryDelay[0]
        final fun <get-retryDelay>(): kotlin/Long // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.retryDelay.<get-retryDelay>|<get-retryDelay>(){}[0]
        final fun <set-retryDelay>(kotlin/Long) // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.retryDelay.<set-retryDelay>|<set-retryDelay>(kotlin.Long){}[0]
    final var retryStrategy // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.retryStrategy|{}retryStrategy[0]
        final fun <get-retryStrategy>(): kotlin/Function3<io.ktor.client.plugins/HttpRetryShouldRetryContext, io.ktor.client.request/HttpRequest, io.ktor.client.statement/HttpResponse, kotlin/Boolean>? // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.retryStrategy.<get-retryStrategy>|<get-retryStrategy>(){}[0]
        final fun <set-retryStrategy>(kotlin/Function3<io.ktor.client.plugins/HttpRetryShouldRetryContext, io.ktor.client.request/HttpRequest, io.ktor.client.statement/HttpResponse, kotlin/Boolean>?) // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.retryStrategy.<set-retryStrategy>|<set-retryStrategy>(kotlin.Function3<io.ktor.client.plugins.HttpRetryShouldRetryContext,io.ktor.client.request.HttpRequest,io.ktor.client.statement.HttpResponse,kotlin.Boolean>?){}[0]
    final var socketTimeoutMillis // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.socketTimeoutMillis|{}socketTimeoutMillis[0]
        final fun <get-socketTimeoutMillis>(): kotlin/Long? // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.socketTimeoutMillis.<get-socketTimeoutMillis>|<get-socketTimeoutMillis>(){}[0]
        final fun <set-socketTimeoutMillis>(kotlin/Long?) // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.socketTimeoutMillis.<set-socketTimeoutMillis>|<set-socketTimeoutMillis>(kotlin.Long?){}[0]

    final fun component1(): kotlin/Long? // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.component1|component1(){}[0]
    final fun component2(): kotlin/Long? // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.component2|component2(){}[0]
    final fun component3(): kotlin/Long? // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.component3|component3(){}[0]
    final fun component4(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.component4|component4(){}[0]
    final fun component5(): kotlin/Function3<io.ktor.client.plugins/HttpRetryShouldRetryContext, io.ktor.client.request/HttpRequest, io.ktor.client.statement/HttpResponse, kotlin/Boolean>? // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.component5|component5(){}[0]
    final fun component6(): kotlin/Long // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.component6|component6(){}[0]
    final fun component7(): io.ktor.client.engine/ProxyConfig? // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.component7|component7(){}[0]
    final fun component8(): kotlin.collections/Map<kotlin/String, kotlin/Any?>? // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.component8|component8(){}[0]
    final fun copy(kotlin/Long? = ..., kotlin/Long? = ..., kotlin/Long? = ..., kotlin/Int = ..., kotlin/Function3<io.ktor.client.plugins/HttpRetryShouldRetryContext, io.ktor.client.request/HttpRequest, io.ktor.client.statement/HttpResponse, kotlin/Boolean>? = ..., kotlin/Long = ..., io.ktor.client.engine/ProxyConfig? = ..., kotlin.collections/Map<kotlin/String, kotlin/Any?>? = ...): eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.copy|copy(kotlin.Long?;kotlin.Long?;kotlin.Long?;kotlin.Int;kotlin.Function3<io.ktor.client.plugins.HttpRetryShouldRetryContext,io.ktor.client.request.HttpRequest,io.ktor.client.statement.HttpResponse,kotlin.Boolean>?;kotlin.Long;io.ktor.client.engine.ProxyConfig?;kotlin.collections.Map<kotlin.String,kotlin.Any?>?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.hashCode|hashCode(){}[0]
    final fun retryOnTooManyRequests(): kotlin/Function3<io.ktor.client.plugins/HttpRetryShouldRetryContext, io.ktor.client.request/HttpRequest, io.ktor.client.statement/HttpResponse, kotlin/Boolean> // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.retryOnTooManyRequests|retryOnTooManyRequests(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration> { // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration) // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.configuration.HttpConfiguration){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration> // eu.vendeli.tgbot.types.internal.configuration/HttpConfiguration.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration { // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/LogLvl = ..., eu.vendeli.tgbot.types.internal/HttpLogLevel = ...) // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.<init>|<init>(eu.vendeli.tgbot.types.internal.LogLvl;eu.vendeli.tgbot.types.internal.HttpLogLevel){}[0]

    final var botLogLevel // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.botLogLevel|{}botLogLevel[0]
        final fun <get-botLogLevel>(): eu.vendeli.tgbot.types.internal/LogLvl // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.botLogLevel.<get-botLogLevel>|<get-botLogLevel>(){}[0]
        final fun <set-botLogLevel>(eu.vendeli.tgbot.types.internal/LogLvl) // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.botLogLevel.<set-botLogLevel>|<set-botLogLevel>(eu.vendeli.tgbot.types.internal.LogLvl){}[0]
    final var httpLogLevel // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.httpLogLevel|{}httpLogLevel[0]
        final fun <get-httpLogLevel>(): eu.vendeli.tgbot.types.internal/HttpLogLevel // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.httpLogLevel.<get-httpLogLevel>|<get-httpLogLevel>(){}[0]
        final fun <set-httpLogLevel>(eu.vendeli.tgbot.types.internal/HttpLogLevel) // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.httpLogLevel.<set-httpLogLevel>|<set-httpLogLevel>(eu.vendeli.tgbot.types.internal.HttpLogLevel){}[0]

    final fun component1(): eu.vendeli.tgbot.types.internal/LogLvl // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.internal/HttpLogLevel // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.component2|component2(){}[0]
    final fun copy(eu.vendeli.tgbot.types.internal/LogLvl = ..., eu.vendeli.tgbot.types.internal/HttpLogLevel = ...): eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.copy|copy(eu.vendeli.tgbot.types.internal.LogLvl;eu.vendeli.tgbot.types.internal.HttpLogLevel){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration> { // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration) // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.configuration.LoggingConfiguration){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration> // eu.vendeli.tgbot.types.internal.configuration/LoggingConfiguration.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration { // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal.configuration/RateLimits = ..., eu.vendeli.tgbot.interfaces.helper/RateLimitMechanism = ...) // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.<init>|<init>(eu.vendeli.tgbot.types.internal.configuration.RateLimits;eu.vendeli.tgbot.interfaces.helper.RateLimitMechanism){}[0]

    final var exceededAction // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.exceededAction|{}exceededAction[0]
        final fun <get-exceededAction>(): kotlin.coroutines/SuspendFunction2<kotlin/Long, eu.vendeli.tgbot/TelegramBot, kotlin/Unit> // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.exceededAction.<get-exceededAction>|<get-exceededAction>(){}[0]
        final fun <set-exceededAction>(kotlin.coroutines/SuspendFunction2<kotlin/Long, eu.vendeli.tgbot/TelegramBot, kotlin/Unit>) // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.exceededAction.<set-exceededAction>|<set-exceededAction>(kotlin.coroutines.SuspendFunction2<kotlin.Long,eu.vendeli.tgbot.TelegramBot,kotlin.Unit>){}[0]
    final var limits // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.limits|{}limits[0]
        final fun <get-limits>(): eu.vendeli.tgbot.types.internal.configuration/RateLimits // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.limits.<get-limits>|<get-limits>(){}[0]
        final fun <set-limits>(eu.vendeli.tgbot.types.internal.configuration/RateLimits) // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.limits.<set-limits>|<set-limits>(eu.vendeli.tgbot.types.internal.configuration.RateLimits){}[0]
    final var mechanism // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.mechanism|{}mechanism[0]
        final fun <get-mechanism>(): eu.vendeli.tgbot.interfaces.helper/RateLimitMechanism // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.mechanism.<get-mechanism>|<get-mechanism>(){}[0]
        final fun <set-mechanism>(eu.vendeli.tgbot.interfaces.helper/RateLimitMechanism) // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.mechanism.<set-mechanism>|<set-mechanism>(eu.vendeli.tgbot.interfaces.helper.RateLimitMechanism){}[0]

    final fun component1(): eu.vendeli.tgbot.types.internal.configuration/RateLimits // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.interfaces.helper/RateLimitMechanism // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.component2|component2(){}[0]
    final fun copy(eu.vendeli.tgbot.types.internal.configuration/RateLimits = ..., eu.vendeli.tgbot.interfaces.helper/RateLimitMechanism = ...): eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.copy|copy(eu.vendeli.tgbot.types.internal.configuration.RateLimits;eu.vendeli.tgbot.interfaces.helper.RateLimitMechanism){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/RateLimiterConfiguration.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal.configuration/RateLimits { // eu.vendeli.tgbot.types.internal.configuration/RateLimits|null[0]
    constructor <init>(kotlin/Long = ..., kotlin/Long = ...) // eu.vendeli.tgbot.types.internal.configuration/RateLimits.<init>|<init>(kotlin.Long;kotlin.Long){}[0]

    final var period // eu.vendeli.tgbot.types.internal.configuration/RateLimits.period|{}period[0]
        final fun <get-period>(): kotlin/Long // eu.vendeli.tgbot.types.internal.configuration/RateLimits.period.<get-period>|<get-period>(){}[0]
        final fun <set-period>(kotlin/Long) // eu.vendeli.tgbot.types.internal.configuration/RateLimits.period.<set-period>|<set-period>(kotlin.Long){}[0]
    final var rate // eu.vendeli.tgbot.types.internal.configuration/RateLimits.rate|{}rate[0]
        final fun <get-rate>(): kotlin/Long // eu.vendeli.tgbot.types.internal.configuration/RateLimits.rate.<get-rate>|<get-rate>(){}[0]
        final fun <set-rate>(kotlin/Long) // eu.vendeli.tgbot.types.internal.configuration/RateLimits.rate.<set-rate>|<set-rate>(kotlin.Long){}[0]

    final fun component1(): kotlin/Long // eu.vendeli.tgbot.types.internal.configuration/RateLimits.component1|component1(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.tgbot.types.internal.configuration/RateLimits.component2|component2(){}[0]
    final fun copy(kotlin/Long = ..., kotlin/Long = ...): eu.vendeli.tgbot.types.internal.configuration/RateLimits // eu.vendeli.tgbot.types.internal.configuration/RateLimits.copy|copy(kotlin.Long;kotlin.Long){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/RateLimits.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/RateLimits.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/RateLimits.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration { // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration|null[0]
    constructor <init>(kotlinx.coroutines/CoroutineDispatcher = ..., kotlinx.coroutines/CoroutineDispatcher = ..., kotlin/Long = ..., kotlin/Int = ...) // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.<init>|<init>(kotlinx.coroutines.CoroutineDispatcher;kotlinx.coroutines.CoroutineDispatcher;kotlin.Long;kotlin.Int){}[0]

    final var dispatcher // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.dispatcher|{}dispatcher[0]
        final fun <get-dispatcher>(): kotlinx.coroutines/CoroutineDispatcher // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.dispatcher.<get-dispatcher>|<get-dispatcher>(){}[0]
        final fun <set-dispatcher>(kotlinx.coroutines/CoroutineDispatcher) // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.dispatcher.<set-dispatcher>|<set-dispatcher>(kotlinx.coroutines.CoroutineDispatcher){}[0]
    final var processingDispatcher // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.processingDispatcher|{}processingDispatcher[0]
        final fun <get-processingDispatcher>(): kotlinx.coroutines/CoroutineDispatcher // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.processingDispatcher.<get-processingDispatcher>|<get-processingDispatcher>(){}[0]
        final fun <set-processingDispatcher>(kotlinx.coroutines/CoroutineDispatcher) // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.processingDispatcher.<set-processingDispatcher>|<set-processingDispatcher>(kotlinx.coroutines.CoroutineDispatcher){}[0]
    final var pullingDelay // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.pullingDelay|{}pullingDelay[0]
        final fun <get-pullingDelay>(): kotlin/Long // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.pullingDelay.<get-pullingDelay>|<get-pullingDelay>(){}[0]
        final fun <set-pullingDelay>(kotlin/Long) // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.pullingDelay.<set-pullingDelay>|<set-pullingDelay>(kotlin.Long){}[0]
    final var updatesPollingTimeout // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.updatesPollingTimeout|{}updatesPollingTimeout[0]
        final fun <get-updatesPollingTimeout>(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.updatesPollingTimeout.<get-updatesPollingTimeout>|<get-updatesPollingTimeout>(){}[0]
        final fun <set-updatesPollingTimeout>(kotlin/Int) // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.updatesPollingTimeout.<set-updatesPollingTimeout>|<set-updatesPollingTimeout>(kotlin.Int){}[0]

    final fun component1(): kotlinx.coroutines/CoroutineDispatcher // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.component1|component1(){}[0]
    final fun component2(): kotlinx.coroutines/CoroutineDispatcher // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.component2|component2(){}[0]
    final fun component3(): kotlin/Long // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.component3|component3(){}[0]
    final fun component4(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.component4|component4(){}[0]
    final fun copy(kotlinx.coroutines/CoroutineDispatcher = ..., kotlinx.coroutines/CoroutineDispatcher = ..., kotlin/Long = ..., kotlin/Int = ...): eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.copy|copy(kotlinx.coroutines.CoroutineDispatcher;kotlinx.coroutines.CoroutineDispatcher;kotlin.Long;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration> { // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration) // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.configuration.UpdatesListenerConfiguration){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration> // eu.vendeli.tgbot.types.internal.configuration/UpdatesListenerConfiguration.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/AnimationOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MediaSpoiler, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon, eu.vendeli.tgbot.types.internal.options/OptionsParseMode, eu.vendeli.tgbot.types.internal.options/ShowCaptionAboveMediaProp, eu.vendeli.tgbot.types.internal.options/ThumbnailProp { // eu.vendeli.tgbot.types.internal.options/AnimationOptions|null[0]
    constructor <init>(kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.<init>|<init>(kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.Boolean?;kotlin.String?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/AnimationOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/AnimationOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var duration // eu.vendeli.tgbot.types.internal.options/AnimationOptions.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.duration.<get-duration>|<get-duration>(){}[0]
        final fun <set-duration>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.duration.<set-duration>|<set-duration>(kotlin.Int?){}[0]
    final var hasSpoiler // eu.vendeli.tgbot.types.internal.options/AnimationOptions.hasSpoiler|{}hasSpoiler[0]
        final fun <get-hasSpoiler>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.hasSpoiler.<get-hasSpoiler>|<get-hasSpoiler>(){}[0]
        final fun <set-hasSpoiler>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.hasSpoiler.<set-hasSpoiler>|<set-hasSpoiler>(kotlin.Boolean?){}[0]
    final var height // eu.vendeli.tgbot.types.internal.options/AnimationOptions.height|{}height[0]
        final fun <get-height>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.height.<get-height>|<get-height>(){}[0]
        final fun <set-height>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.height.<set-height>|<set-height>(kotlin.Int?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/AnimationOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/AnimationOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var parseMode // eu.vendeli.tgbot.types.internal.options/AnimationOptions.parseMode|{}parseMode[0]
        final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final fun <set-parseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.parseMode.<set-parseMode>|<set-parseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/AnimationOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/AnimationOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]
    final var showCaptionAboveMedia // eu.vendeli.tgbot.types.internal.options/AnimationOptions.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
        final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final fun <set-showCaptionAboveMedia>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.showCaptionAboveMedia.<set-showCaptionAboveMedia>|<set-showCaptionAboveMedia>(kotlin.Boolean?){}[0]
    final var thumbnail // eu.vendeli.tgbot.types.internal.options/AnimationOptions.thumbnail|{}thumbnail[0]
        final fun <get-thumbnail>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
        final fun <set-thumbnail>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.thumbnail.<set-thumbnail>|<set-thumbnail>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]
    final var width // eu.vendeli.tgbot.types.internal.options/AnimationOptions.width|{}width[0]
        final fun <get-width>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.width.<get-width>|<get-width>(){}[0]
        final fun <set-width>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.width.<set-width>|<set-width>(kotlin.Int?){}[0]

    final fun component1(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component10|component10(){}[0]
    final fun component11(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component11|component11(){}[0]
    final fun component12(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component12|component12(){}[0]
    final fun component13(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component13|component13(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component6|component6(){}[0]
    final fun component7(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component8|component8(){}[0]
    final fun component9(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/AnimationOptions.component9|component9(){}[0]
    final fun copy(kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.internal.options/AnimationOptions // eu.vendeli.tgbot.types.internal.options/AnimationOptions.copy|copy(kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.Boolean?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/AnimationOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/AnimationOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/AnimationOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/AnimationOptions> { // eu.vendeli.tgbot.types.internal.options/AnimationOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/AnimationOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/AnimationOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/AnimationOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/AnimationOptions // eu.vendeli.tgbot.types.internal.options/AnimationOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/AnimationOptions) // eu.vendeli.tgbot.types.internal.options/AnimationOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.AnimationOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/AnimationOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/AnimationOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/AnimationOptions> // eu.vendeli.tgbot.types.internal.options/AnimationOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.<init>|<init>(kotlin.String?;kotlin.Boolean?;kotlin.String?;kotlin.Int?){}[0]

    final var cacheTime // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.cacheTime|{}cacheTime[0]
        final fun <get-cacheTime>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.cacheTime.<get-cacheTime>|<get-cacheTime>(){}[0]
        final fun <set-cacheTime>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.cacheTime.<set-cacheTime>|<set-cacheTime>(kotlin.Int?){}[0]
    final var showAlert // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.showAlert|{}showAlert[0]
        final fun <get-showAlert>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.showAlert.<get-showAlert>|<get-showAlert>(){}[0]
        final fun <set-showAlert>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.showAlert.<set-showAlert>|<set-showAlert>(kotlin.Boolean?){}[0]
    final var text // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.text|{}text[0]
        final fun <get-text>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.text.<get-text>|<get-text>(){}[0]
        final fun <set-text>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.text.<set-text>|<set-text>(kotlin.String?){}[0]
    final var url // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.url|{}url[0]
        final fun <get-url>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.url.<get-url>|<get-url>(){}[0]
        final fun <set-url>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.url.<set-url>|<set-url>(kotlin.String?){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.component4|component4(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.copy|copy(kotlin.String?;kotlin.Boolean?;kotlin.String?;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions> { // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions) // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.AnswerCallbackQueryOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions> // eu.vendeli.tgbot.types.internal.options/AnswerCallbackQueryOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions|null[0]
    constructor <init>(kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.inline/InlineQueryResultsButton? = ...) // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.<init>|<init>(kotlin.Int?;kotlin.Boolean?;kotlin.String?;eu.vendeli.tgbot.types.inline.InlineQueryResultsButton?){}[0]

    final var button // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.button|{}button[0]
        final fun <get-button>(): eu.vendeli.tgbot.types.inline/InlineQueryResultsButton? // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.button.<get-button>|<get-button>(){}[0]
        final fun <set-button>(eu.vendeli.tgbot.types.inline/InlineQueryResultsButton?) // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.button.<set-button>|<set-button>(eu.vendeli.tgbot.types.inline.InlineQueryResultsButton?){}[0]
    final var cacheTime // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.cacheTime|{}cacheTime[0]
        final fun <get-cacheTime>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.cacheTime.<get-cacheTime>|<get-cacheTime>(){}[0]
        final fun <set-cacheTime>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.cacheTime.<set-cacheTime>|<set-cacheTime>(kotlin.Int?){}[0]
    final var isPersonal // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.isPersonal|{}isPersonal[0]
        final fun <get-isPersonal>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.isPersonal.<get-isPersonal>|<get-isPersonal>(){}[0]
        final fun <set-isPersonal>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.isPersonal.<set-isPersonal>|<set-isPersonal>(kotlin.Boolean?){}[0]
    final var nextOffset // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.nextOffset|{}nextOffset[0]
        final fun <get-nextOffset>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.nextOffset.<get-nextOffset>|<get-nextOffset>(){}[0]
        final fun <set-nextOffset>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.nextOffset.<set-nextOffset>|<set-nextOffset>(kotlin.String?){}[0]

    final fun button(kotlin/String, kotlin/Function0<kotlin/String>) // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.button|button(kotlin.String;kotlin.Function0<kotlin.String>){}[0]
    final fun button(kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.button|button(kotlin.String;kotlin.String){}[0]
    final fun component1(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types.inline/InlineQueryResultsButton? // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.component4|component4(){}[0]
    final fun copy(kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.inline/InlineQueryResultsButton? = ...): eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.copy|copy(kotlin.Int?;kotlin.Boolean?;kotlin.String?;eu.vendeli.tgbot.types.inline.InlineQueryResultsButton?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions> { // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions) // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.AnswerInlineQueryOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions> // eu.vendeli.tgbot.types.internal.options/AnswerInlineQueryOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/AudioOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon, eu.vendeli.tgbot.types.internal.options/OptionsParseMode, eu.vendeli.tgbot.types.internal.options/ThumbnailProp { // eu.vendeli.tgbot.types.internal.options/AudioOptions|null[0]
    constructor <init>(eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types.internal.options/AudioOptions.<init>|<init>(eu.vendeli.tgbot.types.ParseMode?;kotlin.Int?;kotlin.String?;kotlin.String?;kotlin.Boolean?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/AudioOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AudioOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/AudioOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/AudioOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AudioOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/AudioOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var duration // eu.vendeli.tgbot.types.internal.options/AudioOptions.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AudioOptions.duration.<get-duration>|<get-duration>(){}[0]
        final fun <set-duration>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/AudioOptions.duration.<set-duration>|<set-duration>(kotlin.Int?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/AudioOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AudioOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/AudioOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/AudioOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AudioOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/AudioOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var parseMode // eu.vendeli.tgbot.types.internal.options/AudioOptions.parseMode|{}parseMode[0]
        final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/AudioOptions.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final fun <set-parseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/AudioOptions.parseMode.<set-parseMode>|<set-parseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
    final var performer // eu.vendeli.tgbot.types.internal.options/AudioOptions.performer|{}performer[0]
        final fun <get-performer>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AudioOptions.performer.<get-performer>|<get-performer>(){}[0]
        final fun <set-performer>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/AudioOptions.performer.<set-performer>|<set-performer>(kotlin.String?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/AudioOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AudioOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/AudioOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/AudioOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/AudioOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/AudioOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]
    final var thumbnail // eu.vendeli.tgbot.types.internal.options/AudioOptions.thumbnail|{}thumbnail[0]
        final fun <get-thumbnail>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/AudioOptions.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
        final fun <set-thumbnail>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.types.internal.options/AudioOptions.thumbnail.<set-thumbnail>|<set-thumbnail>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]
    final var title // eu.vendeli.tgbot.types.internal.options/AudioOptions.title|{}title[0]
        final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AudioOptions.title.<get-title>|<get-title>(){}[0]
        final fun <set-title>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/AudioOptions.title.<set-title>|<set-title>(kotlin.String?){}[0]

    final fun component1(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/AudioOptions.component1|component1(){}[0]
    final fun component10(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AudioOptions.component10|component10(){}[0]
    final fun component11(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AudioOptions.component11|component11(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/AudioOptions.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AudioOptions.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/AudioOptions.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AudioOptions.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/AudioOptions.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AudioOptions.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/AudioOptions.component8|component8(){}[0]
    final fun component9(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/AudioOptions.component9|component9(){}[0]
    final fun copy(eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.internal.options/AudioOptions // eu.vendeli.tgbot.types.internal.options/AudioOptions.copy|copy(eu.vendeli.tgbot.types.ParseMode?;kotlin.Int?;kotlin.String?;kotlin.String?;kotlin.Boolean?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/AudioOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/AudioOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/AudioOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/AudioOptions> { // eu.vendeli.tgbot.types.internal.options/AudioOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/AudioOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/AudioOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/AudioOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/AudioOptions // eu.vendeli.tgbot.types.internal.options/AudioOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/AudioOptions) // eu.vendeli.tgbot.types.internal.options/AudioOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.AudioOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/AudioOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/AudioOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/AudioOptions> // eu.vendeli.tgbot.types.internal.options/AudioOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions|null[0]
    constructor <init>(kotlin/String? = ..., kotlinx.datetime/Instant? = ..., kotlin/Int? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.<init>|<init>(kotlin.String?;kotlinx.datetime.Instant?;kotlin.Int?;kotlin.Boolean?){}[0]

    final var createsJoinRequest // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.createsJoinRequest|{}createsJoinRequest[0]
        final fun <get-createsJoinRequest>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.createsJoinRequest.<get-createsJoinRequest>|<get-createsJoinRequest>(){}[0]
        final fun <set-createsJoinRequest>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.createsJoinRequest.<set-createsJoinRequest>|<set-createsJoinRequest>(kotlin.Boolean?){}[0]
    final var expireDate // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.expireDate|{}expireDate[0]
        final fun <get-expireDate>(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.expireDate.<get-expireDate>|<get-expireDate>(){}[0]
        final fun <set-expireDate>(kotlinx.datetime/Instant?) // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.expireDate.<set-expireDate>|<set-expireDate>(kotlinx.datetime.Instant?){}[0]
    final var memberLimit // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.memberLimit|{}memberLimit[0]
        final fun <get-memberLimit>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.memberLimit.<get-memberLimit>|<get-memberLimit>(){}[0]
        final fun <set-memberLimit>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.memberLimit.<set-memberLimit>|<set-memberLimit>(kotlin.Int?){}[0]
    final var name // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.name|{}name[0]
        final fun <get-name>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.name.<get-name>|<get-name>(){}[0]
        final fun <set-name>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.name.<set-name>|<set-name>(kotlin.String?){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.component1|component1(){}[0]
    final fun component2(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.component4|component4(){}[0]
    final fun copy(kotlin/String? = ..., kotlinx.datetime/Instant? = ..., kotlin/Int? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.copy|copy(kotlin.String?;kotlinx.datetime.Instant?;kotlin.Int?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions> { // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions) // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.ChatInviteLinkOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions> // eu.vendeli.tgbot.types.internal.options/ChatInviteLinkOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/ContactOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon { // eu.vendeli.tgbot.types.internal.options/ContactOptions|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types.internal.options/ContactOptions.<init>|<init>(kotlin.String?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/ContactOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ContactOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ContactOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/ContactOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ContactOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ContactOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var lastName // eu.vendeli.tgbot.types.internal.options/ContactOptions.lastName|{}lastName[0]
        final fun <get-lastName>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/ContactOptions.lastName.<get-lastName>|<get-lastName>(){}[0]
        final fun <set-lastName>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/ContactOptions.lastName.<set-lastName>|<set-lastName>(kotlin.String?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/ContactOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/ContactOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/ContactOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/ContactOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/ContactOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/ContactOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/ContactOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ContactOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ContactOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/ContactOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/ContactOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/ContactOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]
    final var vcard // eu.vendeli.tgbot.types.internal.options/ContactOptions.vcard|{}vcard[0]
        final fun <get-vcard>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/ContactOptions.vcard.<get-vcard>|<get-vcard>(){}[0]
        final fun <set-vcard>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/ContactOptions.vcard.<set-vcard>|<set-vcard>(kotlin.String?){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/ContactOptions.component1|component1(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/ContactOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ContactOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ContactOptions.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/ContactOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ContactOptions.component6|component6(){}[0]
    final fun component7(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/ContactOptions.component7|component7(){}[0]
    final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/ContactOptions.component8|component8(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.internal.options/ContactOptions // eu.vendeli.tgbot.types.internal.options/ContactOptions.copy|copy(kotlin.String?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/ContactOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/ContactOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/ContactOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/ContactOptions> { // eu.vendeli.tgbot.types.internal.options/ContactOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/ContactOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/ContactOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/ContactOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/ContactOptions // eu.vendeli.tgbot.types.internal.options/ContactOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/ContactOptions) // eu.vendeli.tgbot.types.internal.options/ContactOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.ContactOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/ContactOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/ContactOptions> // eu.vendeli.tgbot.types.internal.options/ContactOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/CopyMessageOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/OptionsCommon, eu.vendeli.tgbot.types.internal.options/OptionsParseMode, eu.vendeli.tgbot.types.internal.options/ShowCaptionAboveMediaProp { // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions|null[0]
    constructor <init>(kotlin.time/Duration? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.<init>|<init>(kotlin.time.Duration?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var parseMode // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.parseMode|{}parseMode[0]
        final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final fun <set-parseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.parseMode.<set-parseMode>|<set-parseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]
    final var showCaptionAboveMedia // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
        final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final fun <set-showCaptionAboveMedia>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.showCaptionAboveMedia.<set-showCaptionAboveMedia>|<set-showCaptionAboveMedia>(kotlin.Boolean?){}[0]
    final var videoStartTimestamp // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.videoStartTimestamp|{}videoStartTimestamp[0]
        final fun <get-videoStartTimestamp>(): kotlin.time/Duration? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.videoStartTimestamp.<get-videoStartTimestamp>|<get-videoStartTimestamp>(){}[0]
        final fun <set-videoStartTimestamp>(kotlin.time/Duration?) // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.videoStartTimestamp.<set-videoStartTimestamp>|<set-videoStartTimestamp>(kotlin.time.Duration?){}[0]

    final fun component1(): kotlin.time/Duration? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.component6|component6(){}[0]
    final fun component7(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.component8|component8(){}[0]
    final fun copy(kotlin.time/Duration? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/CopyMessageOptions // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.copy|copy(kotlin.time.Duration?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/CopyMessageOptions> { // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/CopyMessageOptions // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/CopyMessageOptions) // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.CopyMessageOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/CopyMessageOptions> // eu.vendeli.tgbot.types.internal.options/CopyMessageOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions|null[0]
    constructor <init>(kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.<init>|<init>(kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final var disableNotification // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var removeCaption // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.removeCaption|{}removeCaption[0]
        final fun <get-removeCaption>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.removeCaption.<get-removeCaption>|<get-removeCaption>(){}[0]
        final fun <set-removeCaption>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.removeCaption.<set-removeCaption>|<set-removeCaption>(kotlin.Boolean?){}[0]

    final fun component1(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.component4|component4(){}[0]
    final fun copy(kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.copy|copy(kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions> { // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions) // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.CopyMessagesOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions> // eu.vendeli.tgbot.types.internal.options/CopyMessagesOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Int? = ..., kotlin.collections/List<kotlin/Int>? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Long? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin.time/Duration? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.<init>|<init>(kotlin.String?;kotlin.Int?;kotlin.collections.List<kotlin.Int>?;kotlin.String?;kotlin.String?;kotlin.Long?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.time.Duration?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final var isFlexible // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.isFlexible|{}isFlexible[0]
        final fun <get-isFlexible>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.isFlexible.<get-isFlexible>|<get-isFlexible>(){}[0]
        final fun <set-isFlexible>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.isFlexible.<set-isFlexible>|<set-isFlexible>(kotlin.Boolean?){}[0]
    final var maxTipAmount // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.maxTipAmount|{}maxTipAmount[0]
        final fun <get-maxTipAmount>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.maxTipAmount.<get-maxTipAmount>|<get-maxTipAmount>(){}[0]
        final fun <set-maxTipAmount>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.maxTipAmount.<set-maxTipAmount>|<set-maxTipAmount>(kotlin.Int?){}[0]
    final var needEmail // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.needEmail|{}needEmail[0]
        final fun <get-needEmail>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.needEmail.<get-needEmail>|<get-needEmail>(){}[0]
        final fun <set-needEmail>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.needEmail.<set-needEmail>|<set-needEmail>(kotlin.Boolean?){}[0]
    final var needName // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.needName|{}needName[0]
        final fun <get-needName>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.needName.<get-needName>|<get-needName>(){}[0]
        final fun <set-needName>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.needName.<set-needName>|<set-needName>(kotlin.Boolean?){}[0]
    final var needPhoneNumber // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.needPhoneNumber|{}needPhoneNumber[0]
        final fun <get-needPhoneNumber>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.needPhoneNumber.<get-needPhoneNumber>|<get-needPhoneNumber>(){}[0]
        final fun <set-needPhoneNumber>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.needPhoneNumber.<set-needPhoneNumber>|<set-needPhoneNumber>(kotlin.Boolean?){}[0]
    final var needShippingAddress // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.needShippingAddress|{}needShippingAddress[0]
        final fun <get-needShippingAddress>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.needShippingAddress.<get-needShippingAddress>|<get-needShippingAddress>(){}[0]
        final fun <set-needShippingAddress>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.needShippingAddress.<set-needShippingAddress>|<set-needShippingAddress>(kotlin.Boolean?){}[0]
    final var photoHeight // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.photoHeight|{}photoHeight[0]
        final fun <get-photoHeight>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.photoHeight.<get-photoHeight>|<get-photoHeight>(){}[0]
        final fun <set-photoHeight>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.photoHeight.<set-photoHeight>|<set-photoHeight>(kotlin.Int?){}[0]
    final var photoSize // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.photoSize|{}photoSize[0]
        final fun <get-photoSize>(): kotlin/Long? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.photoSize.<get-photoSize>|<get-photoSize>(){}[0]
        final fun <set-photoSize>(kotlin/Long?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.photoSize.<set-photoSize>|<set-photoSize>(kotlin.Long?){}[0]
    final var photoUrl // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.photoUrl|{}photoUrl[0]
        final fun <get-photoUrl>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.photoUrl.<get-photoUrl>|<get-photoUrl>(){}[0]
        final fun <set-photoUrl>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.photoUrl.<set-photoUrl>|<set-photoUrl>(kotlin.String?){}[0]
    final var photoWidth // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.photoWidth|{}photoWidth[0]
        final fun <get-photoWidth>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.photoWidth.<get-photoWidth>|<get-photoWidth>(){}[0]
        final fun <set-photoWidth>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.photoWidth.<set-photoWidth>|<set-photoWidth>(kotlin.Int?){}[0]
    final var providerData // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.providerData|{}providerData[0]
        final fun <get-providerData>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.providerData.<get-providerData>|<get-providerData>(){}[0]
        final fun <set-providerData>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.providerData.<set-providerData>|<set-providerData>(kotlin.String?){}[0]
    final var providerToken // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.providerToken|{}providerToken[0]
        final fun <get-providerToken>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.providerToken.<get-providerToken>|<get-providerToken>(){}[0]
        final fun <set-providerToken>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.providerToken.<set-providerToken>|<set-providerToken>(kotlin.String?){}[0]
    final var sendEmailToProvider // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.sendEmailToProvider|{}sendEmailToProvider[0]
        final fun <get-sendEmailToProvider>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.sendEmailToProvider.<get-sendEmailToProvider>|<get-sendEmailToProvider>(){}[0]
        final fun <set-sendEmailToProvider>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.sendEmailToProvider.<set-sendEmailToProvider>|<set-sendEmailToProvider>(kotlin.Boolean?){}[0]
    final var sendPhoneNumberToProvider // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.sendPhoneNumberToProvider|{}sendPhoneNumberToProvider[0]
        final fun <get-sendPhoneNumberToProvider>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.sendPhoneNumberToProvider.<get-sendPhoneNumberToProvider>|<get-sendPhoneNumberToProvider>(){}[0]
        final fun <set-sendPhoneNumberToProvider>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.sendPhoneNumberToProvider.<set-sendPhoneNumberToProvider>|<set-sendPhoneNumberToProvider>(kotlin.Boolean?){}[0]
    final var subscriptionPeriod // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.subscriptionPeriod|{}subscriptionPeriod[0]
        final fun <get-subscriptionPeriod>(): kotlin.time/Duration? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.subscriptionPeriod.<get-subscriptionPeriod>|<get-subscriptionPeriod>(){}[0]
        final fun <set-subscriptionPeriod>(kotlin.time/Duration?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.subscriptionPeriod.<set-subscriptionPeriod>|<set-subscriptionPeriod>(kotlin.time.Duration?){}[0]
    final var suggestedTipAmounts // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.suggestedTipAmounts|{}suggestedTipAmounts[0]
        final fun <get-suggestedTipAmounts>(): kotlin.collections/List<kotlin/Int>? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.suggestedTipAmounts.<get-suggestedTipAmounts>|<get-suggestedTipAmounts>(){}[0]
        final fun <set-suggestedTipAmounts>(kotlin.collections/List<kotlin/Int>?) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.suggestedTipAmounts.<set-suggestedTipAmounts>|<set-suggestedTipAmounts>(kotlin.collections.List<kotlin.Int>?){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component1|component1(){}[0]
    final fun component10(): kotlin.time/Duration? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component10|component10(){}[0]
    final fun component11(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component11|component11(){}[0]
    final fun component12(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component12|component12(){}[0]
    final fun component13(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component13|component13(){}[0]
    final fun component14(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component14|component14(){}[0]
    final fun component15(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component15|component15(){}[0]
    final fun component16(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component16|component16(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<kotlin/Int>? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Long? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component6|component6(){}[0]
    final fun component7(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component7|component7(){}[0]
    final fun component8(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.component9|component9(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/Int? = ..., kotlin.collections/List<kotlin/Int>? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Long? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin.time/Duration? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.copy|copy(kotlin.String?;kotlin.Int?;kotlin.collections.List<kotlin.Int>?;kotlin.String?;kotlin.String?;kotlin.Long?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.time.Duration?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions> { // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions) // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.CreateInvoiceLinkOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions> // eu.vendeli.tgbot.types.internal.options/CreateInvoiceLinkOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions|null[0]
    constructor <init>(eu.vendeli.tgbot.types.media/StickerType? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.<init>|<init>(eu.vendeli.tgbot.types.media.StickerType?;kotlin.Boolean?){}[0]

    final var needsRepainting // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.needsRepainting|{}needsRepainting[0]
        final fun <get-needsRepainting>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.needsRepainting.<get-needsRepainting>|<get-needsRepainting>(){}[0]
        final fun <set-needsRepainting>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.needsRepainting.<set-needsRepainting>|<set-needsRepainting>(kotlin.Boolean?){}[0]
    final var stickerType // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.stickerType|{}stickerType[0]
        final fun <get-stickerType>(): eu.vendeli.tgbot.types.media/StickerType? // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.stickerType.<get-stickerType>|<get-stickerType>(){}[0]
        final fun <set-stickerType>(eu.vendeli.tgbot.types.media/StickerType?) // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.stickerType.<set-stickerType>|<set-stickerType>(eu.vendeli.tgbot.types.media.StickerType?){}[0]

    final fun component1(): eu.vendeli.tgbot.types.media/StickerType? // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.component2|component2(){}[0]
    final fun copy(eu.vendeli.tgbot.types.media/StickerType? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.copy|copy(eu.vendeli.tgbot.types.media.StickerType?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions> { // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions) // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.CreateNewStickerSetOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions> // eu.vendeli.tgbot.types.internal.options/CreateNewStickerSetOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/DiceOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon { // eu.vendeli.tgbot.types.internal.options/DiceOptions|null[0]
    constructor <init>(kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/DiceOptions.<init>|<init>(kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/DiceOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DiceOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/DiceOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/DiceOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DiceOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/DiceOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/DiceOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/DiceOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/DiceOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/DiceOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/DiceOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/DiceOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/DiceOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DiceOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/DiceOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/DiceOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/DiceOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/DiceOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DiceOptions.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/DiceOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DiceOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/DiceOptions.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/DiceOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DiceOptions.component6|component6(){}[0]
    final fun copy(kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/DiceOptions // eu.vendeli.tgbot.types.internal.options/DiceOptions.copy|copy(kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/DiceOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/DiceOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/DiceOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/DiceOptions> { // eu.vendeli.tgbot.types.internal.options/DiceOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/DiceOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/DiceOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/DiceOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/DiceOptions // eu.vendeli.tgbot.types.internal.options/DiceOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/DiceOptions) // eu.vendeli.tgbot.types.internal.options/DiceOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.DiceOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/DiceOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/DiceOptions> // eu.vendeli.tgbot.types.internal.options/DiceOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/DocumentOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon, eu.vendeli.tgbot.types.internal.options/OptionsParseMode, eu.vendeli.tgbot.types.internal.options/ThumbnailProp { // eu.vendeli.tgbot.types.internal.options/DocumentOptions|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/DocumentOptions.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/DocumentOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/DocumentOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableContentTypeDetection // eu.vendeli.tgbot.types.internal.options/DocumentOptions.disableContentTypeDetection|{}disableContentTypeDetection[0]
        final fun <get-disableContentTypeDetection>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.disableContentTypeDetection.<get-disableContentTypeDetection>|<get-disableContentTypeDetection>(){}[0]
        final fun <set-disableContentTypeDetection>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/DocumentOptions.disableContentTypeDetection.<set-disableContentTypeDetection>|<set-disableContentTypeDetection>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/DocumentOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/DocumentOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/DocumentOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/DocumentOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/DocumentOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/DocumentOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var parseMode // eu.vendeli.tgbot.types.internal.options/DocumentOptions.parseMode|{}parseMode[0]
        final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final fun <set-parseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/DocumentOptions.parseMode.<set-parseMode>|<set-parseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/DocumentOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/DocumentOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/DocumentOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/DocumentOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]
    final var thumbnail // eu.vendeli.tgbot.types.internal.options/DocumentOptions.thumbnail|{}thumbnail[0]
        final fun <get-thumbnail>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
        final fun <set-thumbnail>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.types.internal.options/DocumentOptions.thumbnail.<set-thumbnail>|<set-thumbnail>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]

    final fun component1(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.component6|component6(){}[0]
    final fun component7(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.component7|component7(){}[0]
    final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/DocumentOptions.component9|component9(){}[0]
    final fun copy(eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/DocumentOptions // eu.vendeli.tgbot.types.internal.options/DocumentOptions.copy|copy(eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/DocumentOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/DocumentOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/DocumentOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/DocumentOptions> { // eu.vendeli.tgbot.types.internal.options/DocumentOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/DocumentOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/DocumentOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/DocumentOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/DocumentOptions // eu.vendeli.tgbot.types.internal.options/DocumentOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/DocumentOptions) // eu.vendeli.tgbot.types.internal.options/DocumentOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.DocumentOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/DocumentOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/DocumentOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/DocumentOptions> // eu.vendeli.tgbot.types.internal.options/DocumentOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/EditCaptionOptions : eu.vendeli.tgbot.types.internal.options/OptionsParseMode, eu.vendeli.tgbot.types.internal.options/ShowCaptionAboveMediaProp { // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions|null[0]
    constructor <init>(kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ...) // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.<init>|<init>(kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?){}[0]

    final var parseMode // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.parseMode|{}parseMode[0]
        final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final fun <set-parseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.parseMode.<set-parseMode>|<set-parseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
    final var showCaptionAboveMedia // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
        final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final fun <set-showCaptionAboveMedia>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.showCaptionAboveMedia.<set-showCaptionAboveMedia>|<set-showCaptionAboveMedia>(kotlin.Boolean?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.component2|component2(){}[0]
    final fun copy(kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ...): eu.vendeli.tgbot.types.internal.options/EditCaptionOptions // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.copy|copy(kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/EditCaptionOptions> { // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/EditCaptionOptions // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/EditCaptionOptions) // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.EditCaptionOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/EditCaptionOptions> // eu.vendeli.tgbot.types.internal.options/EditCaptionOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions|null[0]
    constructor <init>(kotlin/Float? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.<init>|<init>(kotlin.Float?;kotlin.Int?;kotlin.Int?;kotlin.Int?){}[0]

    final var heading // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.heading|{}heading[0]
        final fun <get-heading>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.heading.<get-heading>|<get-heading>(){}[0]
        final fun <set-heading>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.heading.<set-heading>|<set-heading>(kotlin.Int?){}[0]
    final var horizontalAccuracy // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.horizontalAccuracy|{}horizontalAccuracy[0]
        final fun <get-horizontalAccuracy>(): kotlin/Float? // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.horizontalAccuracy.<get-horizontalAccuracy>|<get-horizontalAccuracy>(){}[0]
        final fun <set-horizontalAccuracy>(kotlin/Float?) // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.horizontalAccuracy.<set-horizontalAccuracy>|<set-horizontalAccuracy>(kotlin.Float?){}[0]
    final var livePeriod // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.livePeriod|{}livePeriod[0]
        final fun <get-livePeriod>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.livePeriod.<get-livePeriod>|<get-livePeriod>(){}[0]
        final fun <set-livePeriod>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.livePeriod.<set-livePeriod>|<set-livePeriod>(kotlin.Int?){}[0]
    final var proximityAlertRadius // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.proximityAlertRadius|{}proximityAlertRadius[0]
        final fun <get-proximityAlertRadius>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.proximityAlertRadius.<get-proximityAlertRadius>|<get-proximityAlertRadius>(){}[0]
        final fun <set-proximityAlertRadius>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.proximityAlertRadius.<set-proximityAlertRadius>|<set-proximityAlertRadius>(kotlin.Int?){}[0]

    final fun component1(): kotlin/Float? // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.component4|component4(){}[0]
    final fun copy(kotlin/Float? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.copy|copy(kotlin.Float?;kotlin.Int?;kotlin.Int?;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions> { // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions) // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.EditMessageLiveLocationOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions> // eu.vendeli.tgbot.types.internal.options/EditMessageLiveLocationOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/EditMessageOptions : eu.vendeli.tgbot.types.internal.options/LinkPreviewProp, eu.vendeli.tgbot.types.internal.options/OptionsParseMode { // eu.vendeli.tgbot.types.internal.options/EditMessageOptions|null[0]
    constructor <init>(eu.vendeli.tgbot.types/LinkPreviewOptions? = ..., eu.vendeli.tgbot.types/ParseMode? = ...) // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.<init>|<init>(eu.vendeli.tgbot.types.LinkPreviewOptions?;eu.vendeli.tgbot.types.ParseMode?){}[0]

    final var linkPreviewOptions // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.linkPreviewOptions|{}linkPreviewOptions[0]
        final fun <get-linkPreviewOptions>(): eu.vendeli.tgbot.types/LinkPreviewOptions? // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.linkPreviewOptions.<get-linkPreviewOptions>|<get-linkPreviewOptions>(){}[0]
        final fun <set-linkPreviewOptions>(eu.vendeli.tgbot.types/LinkPreviewOptions?) // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.linkPreviewOptions.<set-linkPreviewOptions>|<set-linkPreviewOptions>(eu.vendeli.tgbot.types.LinkPreviewOptions?){}[0]
    final var parseMode // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.parseMode|{}parseMode[0]
        final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final fun <set-parseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.parseMode.<set-parseMode>|<set-parseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/EditMessageOptions> { // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/EditMessageOptions // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/EditMessageOptions) // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.EditMessageOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/EditMessageOptions> // eu.vendeli.tgbot.types.internal.options/EditMessageOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions|null[0]
    constructor <init>(kotlin.time/Duration? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.<init>|<init>(kotlin.time.Duration?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Int?){}[0]

    final var disableNotification // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var videoStartTimestamp // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.videoStartTimestamp|{}videoStartTimestamp[0]
        final fun <get-videoStartTimestamp>(): kotlin.time/Duration? // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.videoStartTimestamp.<get-videoStartTimestamp>|<get-videoStartTimestamp>(){}[0]
        final fun <set-videoStartTimestamp>(kotlin.time/Duration?) // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.videoStartTimestamp.<set-videoStartTimestamp>|<set-videoStartTimestamp>(kotlin.time.Duration?){}[0]

    final fun component1(): kotlin.time/Duration? // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.component4|component4(){}[0]
    final fun copy(kotlin.time/Duration? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.copy|copy(kotlin.time.Duration?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions> { // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions) // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.ForwardMessageOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions> // eu.vendeli.tgbot.types.internal.options/ForwardMessageOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions|null[0]
    constructor <init>(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.<init>|<init>(kotlin.Boolean?;kotlin.Boolean?;kotlin.Int?){}[0]

    final var disableNotification // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.component3|component3(){}[0]
    final fun copy(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.copy|copy(kotlin.Boolean?;kotlin.Boolean?;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions> { // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions) // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.ForwardMessagesOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions> // eu.vendeli.tgbot.types.internal.options/ForwardMessagesOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/GameOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon { // eu.vendeli.tgbot.types.internal.options/GameOptions|null[0]
    constructor <init>(kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/GameOptions.<init>|<init>(kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/GameOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/GameOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/GameOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/GameOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/GameOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/GameOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/GameOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/GameOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/GameOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/GameOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/GameOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/GameOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/GameOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/GameOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/GameOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/GameOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/GameOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/GameOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/GameOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/GameOptions.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/GameOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/GameOptions.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/GameOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/GameOptions.component6|component6(){}[0]
    final fun copy(kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/GameOptions // eu.vendeli.tgbot.types.internal.options/GameOptions.copy|copy(kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/GameOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/GameOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/GameOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/GameOptions> { // eu.vendeli.tgbot.types.internal.options/GameOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/GameOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/GameOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/GameOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/GameOptions // eu.vendeli.tgbot.types.internal.options/GameOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/GameOptions) // eu.vendeli.tgbot.types.internal.options/GameOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.GameOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/GameOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/GameOptions> // eu.vendeli.tgbot.types.internal.options/GameOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions|null[0]
    constructor <init>(kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? = ...) // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.<init>|<init>(kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.collections.List<eu.vendeli.tgbot.types.internal.UpdateType>?){}[0]

    final var allowedUpdates // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.allowedUpdates|{}allowedUpdates[0]
        final fun <get-allowedUpdates>(): kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.allowedUpdates.<get-allowedUpdates>|<get-allowedUpdates>(){}[0]
        final fun <set-allowedUpdates>(kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>?) // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.allowedUpdates.<set-allowedUpdates>|<set-allowedUpdates>(kotlin.collections.List<eu.vendeli.tgbot.types.internal.UpdateType>?){}[0]
    final var limit // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.limit|{}limit[0]
        final fun <get-limit>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.limit.<get-limit>|<get-limit>(){}[0]
        final fun <set-limit>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.limit.<set-limit>|<set-limit>(kotlin.Int?){}[0]
    final var offset // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.offset|{}offset[0]
        final fun <get-offset>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.offset.<get-offset>|<get-offset>(){}[0]
        final fun <set-offset>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.offset.<set-offset>|<set-offset>(kotlin.Int?){}[0]
    final var timeout // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.timeout|{}timeout[0]
        final fun <get-timeout>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.timeout.<get-timeout>|<get-timeout>(){}[0]
        final fun <set-timeout>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.timeout.<set-timeout>|<set-timeout>(kotlin.Int?){}[0]

    final fun component1(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.component4|component4(){}[0]
    final fun copy(kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? = ...): eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.copy|copy(kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.collections.List<eu.vendeli.tgbot.types.internal.UpdateType>?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions> { // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions) // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.GetUpdatesOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions> // eu.vendeli.tgbot.types.internal.options/GetUpdatesOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/InvoiceOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon { // eu.vendeli.tgbot.types.internal.options/InvoiceOptions|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Long? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin.collections/List<kotlin/Int>? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.<init>|<init>(kotlin.String?;kotlin.Int?;kotlin.Int?;kotlin.Long?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.collections.List<kotlin.Int>?;kotlin.String?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var isFlexible // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.isFlexible|{}isFlexible[0]
        final fun <get-isFlexible>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.isFlexible.<get-isFlexible>|<get-isFlexible>(){}[0]
        final fun <set-isFlexible>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.isFlexible.<set-isFlexible>|<set-isFlexible>(kotlin.Boolean?){}[0]
    final var maxTipAmount // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.maxTipAmount|{}maxTipAmount[0]
        final fun <get-maxTipAmount>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.maxTipAmount.<get-maxTipAmount>|<get-maxTipAmount>(){}[0]
        final fun <set-maxTipAmount>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.maxTipAmount.<set-maxTipAmount>|<set-maxTipAmount>(kotlin.Int?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var needEmail // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.needEmail|{}needEmail[0]
        final fun <get-needEmail>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.needEmail.<get-needEmail>|<get-needEmail>(){}[0]
        final fun <set-needEmail>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.needEmail.<set-needEmail>|<set-needEmail>(kotlin.Boolean?){}[0]
    final var needName // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.needName|{}needName[0]
        final fun <get-needName>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.needName.<get-needName>|<get-needName>(){}[0]
        final fun <set-needName>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.needName.<set-needName>|<set-needName>(kotlin.Boolean?){}[0]
    final var needPhoneNumber // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.needPhoneNumber|{}needPhoneNumber[0]
        final fun <get-needPhoneNumber>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.needPhoneNumber.<get-needPhoneNumber>|<get-needPhoneNumber>(){}[0]
        final fun <set-needPhoneNumber>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.needPhoneNumber.<set-needPhoneNumber>|<set-needPhoneNumber>(kotlin.Boolean?){}[0]
    final var needShippingAddress // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.needShippingAddress|{}needShippingAddress[0]
        final fun <get-needShippingAddress>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.needShippingAddress.<get-needShippingAddress>|<get-needShippingAddress>(){}[0]
        final fun <set-needShippingAddress>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.needShippingAddress.<set-needShippingAddress>|<set-needShippingAddress>(kotlin.Boolean?){}[0]
    final var photoHeight // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.photoHeight|{}photoHeight[0]
        final fun <get-photoHeight>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.photoHeight.<get-photoHeight>|<get-photoHeight>(){}[0]
        final fun <set-photoHeight>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.photoHeight.<set-photoHeight>|<set-photoHeight>(kotlin.Int?){}[0]
    final var photoSize // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.photoSize|{}photoSize[0]
        final fun <get-photoSize>(): kotlin/Long? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.photoSize.<get-photoSize>|<get-photoSize>(){}[0]
        final fun <set-photoSize>(kotlin/Long?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.photoSize.<set-photoSize>|<set-photoSize>(kotlin.Long?){}[0]
    final var photoUrl // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.photoUrl|{}photoUrl[0]
        final fun <get-photoUrl>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.photoUrl.<get-photoUrl>|<get-photoUrl>(){}[0]
        final fun <set-photoUrl>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.photoUrl.<set-photoUrl>|<set-photoUrl>(kotlin.String?){}[0]
    final var photoWidth // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.photoWidth|{}photoWidth[0]
        final fun <get-photoWidth>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.photoWidth.<get-photoWidth>|<get-photoWidth>(){}[0]
        final fun <set-photoWidth>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.photoWidth.<set-photoWidth>|<set-photoWidth>(kotlin.Int?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var providerData // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.providerData|{}providerData[0]
        final fun <get-providerData>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.providerData.<get-providerData>|<get-providerData>(){}[0]
        final fun <set-providerData>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.providerData.<set-providerData>|<set-providerData>(kotlin.String?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]
    final var sendEmailToProvider // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.sendEmailToProvider|{}sendEmailToProvider[0]
        final fun <get-sendEmailToProvider>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.sendEmailToProvider.<get-sendEmailToProvider>|<get-sendEmailToProvider>(){}[0]
        final fun <set-sendEmailToProvider>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.sendEmailToProvider.<set-sendEmailToProvider>|<set-sendEmailToProvider>(kotlin.Boolean?){}[0]
    final var sendPhoneNumberToProvider // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.sendPhoneNumberToProvider|{}sendPhoneNumberToProvider[0]
        final fun <get-sendPhoneNumberToProvider>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.sendPhoneNumberToProvider.<get-sendPhoneNumberToProvider>|<get-sendPhoneNumberToProvider>(){}[0]
        final fun <set-sendPhoneNumberToProvider>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.sendPhoneNumberToProvider.<set-sendPhoneNumberToProvider>|<set-sendPhoneNumberToProvider>(kotlin.Boolean?){}[0]
    final var startParameter // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.startParameter|{}startParameter[0]
        final fun <get-startParameter>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.startParameter.<get-startParameter>|<get-startParameter>(){}[0]
        final fun <set-startParameter>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.startParameter.<set-startParameter>|<set-startParameter>(kotlin.String?){}[0]
    final var suggestedTipAmounts // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.suggestedTipAmounts|{}suggestedTipAmounts[0]
        final fun <get-suggestedTipAmounts>(): kotlin.collections/List<kotlin/Int>? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.suggestedTipAmounts.<get-suggestedTipAmounts>|<get-suggestedTipAmounts>(){}[0]
        final fun <set-suggestedTipAmounts>(kotlin.collections/List<kotlin/Int>?) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.suggestedTipAmounts.<set-suggestedTipAmounts>|<set-suggestedTipAmounts>(kotlin.collections.List<kotlin.Int>?){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component10|component10(){}[0]
    final fun component11(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component11|component11(){}[0]
    final fun component12(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component12|component12(){}[0]
    final fun component13(): kotlin.collections/List<kotlin/Int>? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component13|component13(){}[0]
    final fun component14(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component14|component14(){}[0]
    final fun component15(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component15|component15(){}[0]
    final fun component16(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component16|component16(){}[0]
    final fun component17(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component17|component17(){}[0]
    final fun component18(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component18|component18(){}[0]
    final fun component19(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component19|component19(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component2|component2(){}[0]
    final fun component20(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component20|component20(){}[0]
    final fun component21(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component21|component21(){}[0]
    final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Long? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.component9|component9(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Long? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin.collections/List<kotlin/Int>? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.internal.options/InvoiceOptions // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.copy|copy(kotlin.String?;kotlin.Int?;kotlin.Int?;kotlin.Long?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.collections.List<kotlin.Int>?;kotlin.String?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/InvoiceOptions> { // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/InvoiceOptions // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/InvoiceOptions) // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.InvoiceOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/InvoiceOptions> // eu.vendeli.tgbot.types.internal.options/InvoiceOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/LocationOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon { // eu.vendeli.tgbot.types.internal.options/LocationOptions|null[0]
    constructor <init>(kotlin/Float? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/LocationOptions.<init>|<init>(kotlin.Float?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/LocationOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/LocationOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/LocationOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/LocationOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/LocationOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/LocationOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var heading // eu.vendeli.tgbot.types.internal.options/LocationOptions.heading|{}heading[0]
        final fun <get-heading>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/LocationOptions.heading.<get-heading>|<get-heading>(){}[0]
        final fun <set-heading>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/LocationOptions.heading.<set-heading>|<set-heading>(kotlin.Int?){}[0]
    final var horizontalAccuracy // eu.vendeli.tgbot.types.internal.options/LocationOptions.horizontalAccuracy|{}horizontalAccuracy[0]
        final fun <get-horizontalAccuracy>(): kotlin/Float? // eu.vendeli.tgbot.types.internal.options/LocationOptions.horizontalAccuracy.<get-horizontalAccuracy>|<get-horizontalAccuracy>(){}[0]
        final fun <set-horizontalAccuracy>(kotlin/Float?) // eu.vendeli.tgbot.types.internal.options/LocationOptions.horizontalAccuracy.<set-horizontalAccuracy>|<set-horizontalAccuracy>(kotlin.Float?){}[0]
    final var livePeriod // eu.vendeli.tgbot.types.internal.options/LocationOptions.livePeriod|{}livePeriod[0]
        final fun <get-livePeriod>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/LocationOptions.livePeriod.<get-livePeriod>|<get-livePeriod>(){}[0]
        final fun <set-livePeriod>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/LocationOptions.livePeriod.<set-livePeriod>|<set-livePeriod>(kotlin.Int?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/LocationOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/LocationOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/LocationOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/LocationOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/LocationOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/LocationOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/LocationOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/LocationOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/LocationOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var proximityAlertRadius // eu.vendeli.tgbot.types.internal.options/LocationOptions.proximityAlertRadius|{}proximityAlertRadius[0]
        final fun <get-proximityAlertRadius>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/LocationOptions.proximityAlertRadius.<get-proximityAlertRadius>|<get-proximityAlertRadius>(){}[0]
        final fun <set-proximityAlertRadius>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/LocationOptions.proximityAlertRadius.<set-proximityAlertRadius>|<set-proximityAlertRadius>(kotlin.Int?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/LocationOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/LocationOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/LocationOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]

    final fun component1(): kotlin/Float? // eu.vendeli.tgbot.types.internal.options/LocationOptions.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/LocationOptions.component10|component10(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/LocationOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/LocationOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/LocationOptions.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/LocationOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/LocationOptions.component6|component6(){}[0]
    final fun component7(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/LocationOptions.component7|component7(){}[0]
    final fun component8(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/LocationOptions.component8|component8(){}[0]
    final fun component9(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/LocationOptions.component9|component9(){}[0]
    final fun copy(kotlin/Float? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/LocationOptions // eu.vendeli.tgbot.types.internal.options/LocationOptions.copy|copy(kotlin.Float?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/LocationOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/LocationOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/LocationOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/LocationOptions> { // eu.vendeli.tgbot.types.internal.options/LocationOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/LocationOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/LocationOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/LocationOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/LocationOptions // eu.vendeli.tgbot.types.internal.options/LocationOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/LocationOptions) // eu.vendeli.tgbot.types.internal.options/LocationOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.LocationOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/LocationOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/LocationOptions> // eu.vendeli.tgbot.types.internal.options/LocationOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/MediaGroupOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon { // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions|null[0]
    constructor <init>(kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.<init>|<init>(kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.component6|component6(){}[0]
    final fun copy(kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/MediaGroupOptions // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.copy|copy(kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/MediaGroupOptions> { // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/MediaGroupOptions // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/MediaGroupOptions) // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.MediaGroupOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/MediaGroupOptions> // eu.vendeli.tgbot.types.internal.options/MediaGroupOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/MessageOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/LinkPreviewProp, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon, eu.vendeli.tgbot.types.internal.options/OptionsParseMode { // eu.vendeli.tgbot.types.internal.options/MessageOptions|null[0]
    constructor <init>(eu.vendeli.tgbot.types/LinkPreviewOptions? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/MessageOptions.<init>|<init>(eu.vendeli.tgbot.types.LinkPreviewOptions?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/MessageOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MessageOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/MessageOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/MessageOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MessageOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/MessageOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var linkPreviewOptions // eu.vendeli.tgbot.types.internal.options/MessageOptions.linkPreviewOptions|{}linkPreviewOptions[0]
        final fun <get-linkPreviewOptions>(): eu.vendeli.tgbot.types/LinkPreviewOptions? // eu.vendeli.tgbot.types.internal.options/MessageOptions.linkPreviewOptions.<get-linkPreviewOptions>|<get-linkPreviewOptions>(){}[0]
        final fun <set-linkPreviewOptions>(eu.vendeli.tgbot.types/LinkPreviewOptions?) // eu.vendeli.tgbot.types.internal.options/MessageOptions.linkPreviewOptions.<set-linkPreviewOptions>|<set-linkPreviewOptions>(eu.vendeli.tgbot.types.LinkPreviewOptions?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/MessageOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/MessageOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/MessageOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/MessageOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/MessageOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/MessageOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var parseMode // eu.vendeli.tgbot.types.internal.options/MessageOptions.parseMode|{}parseMode[0]
        final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/MessageOptions.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final fun <set-parseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/MessageOptions.parseMode.<set-parseMode>|<set-parseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/MessageOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MessageOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/MessageOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/MessageOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/MessageOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/MessageOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]

    final fun component1(): eu.vendeli.tgbot.types/LinkPreviewOptions? // eu.vendeli.tgbot.types.internal.options/MessageOptions.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/MessageOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MessageOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MessageOptions.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/MessageOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/MessageOptions.component6|component6(){}[0]
    final fun component7(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/MessageOptions.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/MessageOptions.component8|component8(){}[0]
    final fun copy(eu.vendeli.tgbot.types/LinkPreviewOptions? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/MessageOptions // eu.vendeli.tgbot.types.internal.options/MessageOptions.copy|copy(eu.vendeli.tgbot.types.LinkPreviewOptions?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/MessageOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/MessageOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/MessageOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/MessageOptions> { // eu.vendeli.tgbot.types.internal.options/MessageOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/MessageOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/MessageOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/MessageOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/MessageOptions // eu.vendeli.tgbot.types.internal.options/MessageOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/MessageOptions) // eu.vendeli.tgbot.types.internal.options/MessageOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.MessageOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/MessageOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/MessageOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/MessageOptions> // eu.vendeli.tgbot.types.internal.options/MessageOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/PaidMediaOptions : eu.vendeli.tgbot.types.internal.options/OptionsCommon, eu.vendeli.tgbot.types.internal.options/OptionsParseMode, eu.vendeli.tgbot.types.internal.options/ShowCaptionAboveMediaProp { // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.<init>|<init>(kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var parseMode // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.parseMode|{}parseMode[0]
        final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final fun <set-parseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.parseMode.<set-parseMode>|<set-parseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
    final var payload // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.payload|{}payload[0]
        final fun <get-payload>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.payload.<get-payload>|<get-payload>(){}[0]
        final fun <set-payload>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.payload.<set-payload>|<set-payload>(kotlin.String?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]
    final var showCaptionAboveMedia // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
        final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final fun <set-showCaptionAboveMedia>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.showCaptionAboveMedia.<set-showCaptionAboveMedia>|<set-showCaptionAboveMedia>(kotlin.Boolean?){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.component7|component7(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/PaidMediaOptions // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.copy|copy(kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/PaidMediaOptions> { // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/PaidMediaOptions // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/PaidMediaOptions) // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.PaidMediaOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/PaidMediaOptions> // eu.vendeli.tgbot.types.internal.options/PaidMediaOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/PhotoOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MediaSpoiler, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon, eu.vendeli.tgbot.types.internal.options/OptionsParseMode, eu.vendeli.tgbot.types.internal.options/ShowCaptionAboveMediaProp { // eu.vendeli.tgbot.types.internal.options/PhotoOptions|null[0]
    constructor <init>(kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/PhotoOptions.<init>|<init>(kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.Boolean?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/PhotoOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PhotoOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/PhotoOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PhotoOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var hasSpoiler // eu.vendeli.tgbot.types.internal.options/PhotoOptions.hasSpoiler|{}hasSpoiler[0]
        final fun <get-hasSpoiler>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.hasSpoiler.<get-hasSpoiler>|<get-hasSpoiler>(){}[0]
        final fun <set-hasSpoiler>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PhotoOptions.hasSpoiler.<set-hasSpoiler>|<set-hasSpoiler>(kotlin.Boolean?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/PhotoOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/PhotoOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/PhotoOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/PhotoOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var parseMode // eu.vendeli.tgbot.types.internal.options/PhotoOptions.parseMode|{}parseMode[0]
        final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final fun <set-parseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/PhotoOptions.parseMode.<set-parseMode>|<set-parseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/PhotoOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PhotoOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/PhotoOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/PhotoOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]
    final var showCaptionAboveMedia // eu.vendeli.tgbot.types.internal.options/PhotoOptions.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
        final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final fun <set-showCaptionAboveMedia>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PhotoOptions.showCaptionAboveMedia.<set-showCaptionAboveMedia>|<set-showCaptionAboveMedia>(kotlin.Boolean?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.component7|component7(){}[0]
    final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PhotoOptions.component9|component9(){}[0]
    final fun copy(kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/PhotoOptions // eu.vendeli.tgbot.types.internal.options/PhotoOptions.copy|copy(kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.Boolean?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/PhotoOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/PhotoOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/PhotoOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/PhotoOptions> { // eu.vendeli.tgbot.types.internal.options/PhotoOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/PhotoOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/PhotoOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/PhotoOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/PhotoOptions // eu.vendeli.tgbot.types.internal.options/PhotoOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/PhotoOptions) // eu.vendeli.tgbot.types.internal.options/PhotoOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.PhotoOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/PhotoOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/PhotoOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/PhotoOptions> // eu.vendeli.tgbot.types.internal.options/PhotoOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/PollOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon { // eu.vendeli.tgbot.types.internal.options/PollOptions|null[0]
    constructor <init>(kotlin/Boolean? = ..., eu.vendeli.tgbot.types.poll/PollType? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin.time/Duration? = ..., kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/PollOptions.<init>|<init>(kotlin.Boolean?;eu.vendeli.tgbot.types.poll.PollType?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.time.Duration?;kotlinx.datetime.Instant?;kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/PollOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PollOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PollOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var allowsMultipleAnswers // eu.vendeli.tgbot.types.internal.options/PollOptions.allowsMultipleAnswers|{}allowsMultipleAnswers[0]
        final fun <get-allowsMultipleAnswers>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PollOptions.allowsMultipleAnswers.<get-allowsMultipleAnswers>|<get-allowsMultipleAnswers>(){}[0]
        final fun <set-allowsMultipleAnswers>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PollOptions.allowsMultipleAnswers.<set-allowsMultipleAnswers>|<set-allowsMultipleAnswers>(kotlin.Boolean?){}[0]
    final var closeDate // eu.vendeli.tgbot.types.internal.options/PollOptions.closeDate|{}closeDate[0]
        final fun <get-closeDate>(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.internal.options/PollOptions.closeDate.<get-closeDate>|<get-closeDate>(){}[0]
        final fun <set-closeDate>(kotlinx.datetime/Instant?) // eu.vendeli.tgbot.types.internal.options/PollOptions.closeDate.<set-closeDate>|<set-closeDate>(kotlinx.datetime.Instant?){}[0]
    final var correctOptionId // eu.vendeli.tgbot.types.internal.options/PollOptions.correctOptionId|{}correctOptionId[0]
        final fun <get-correctOptionId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/PollOptions.correctOptionId.<get-correctOptionId>|<get-correctOptionId>(){}[0]
        final fun <set-correctOptionId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/PollOptions.correctOptionId.<set-correctOptionId>|<set-correctOptionId>(kotlin.Int?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/PollOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PollOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PollOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var explanation // eu.vendeli.tgbot.types.internal.options/PollOptions.explanation|{}explanation[0]
        final fun <get-explanation>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/PollOptions.explanation.<get-explanation>|<get-explanation>(){}[0]
        final fun <set-explanation>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/PollOptions.explanation.<set-explanation>|<set-explanation>(kotlin.String?){}[0]
    final var explanationEntities // eu.vendeli.tgbot.types.internal.options/PollOptions.explanationEntities|{}explanationEntities[0]
        final fun <get-explanationEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.internal.options/PollOptions.explanationEntities.<get-explanationEntities>|<get-explanationEntities>(){}[0]
        final fun <set-explanationEntities>(kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>?) // eu.vendeli.tgbot.types.internal.options/PollOptions.explanationEntities.<set-explanationEntities>|<set-explanationEntities>(kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?){}[0]
    final var explanationParseMode // eu.vendeli.tgbot.types.internal.options/PollOptions.explanationParseMode|{}explanationParseMode[0]
        final fun <get-explanationParseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/PollOptions.explanationParseMode.<get-explanationParseMode>|<get-explanationParseMode>(){}[0]
        final fun <set-explanationParseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/PollOptions.explanationParseMode.<set-explanationParseMode>|<set-explanationParseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
    final var isAnonymous // eu.vendeli.tgbot.types.internal.options/PollOptions.isAnonymous|{}isAnonymous[0]
        final fun <get-isAnonymous>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PollOptions.isAnonymous.<get-isAnonymous>|<get-isAnonymous>(){}[0]
        final fun <set-isAnonymous>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PollOptions.isAnonymous.<set-isAnonymous>|<set-isAnonymous>(kotlin.Boolean?){}[0]
    final var isClosed // eu.vendeli.tgbot.types.internal.options/PollOptions.isClosed|{}isClosed[0]
        final fun <get-isClosed>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PollOptions.isClosed.<get-isClosed>|<get-isClosed>(){}[0]
        final fun <set-isClosed>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PollOptions.isClosed.<set-isClosed>|<set-isClosed>(kotlin.Boolean?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/PollOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/PollOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/PollOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/PollOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/PollOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/PollOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var openPeriod // eu.vendeli.tgbot.types.internal.options/PollOptions.openPeriod|{}openPeriod[0]
        final fun <get-openPeriod>(): kotlin.time/Duration? // eu.vendeli.tgbot.types.internal.options/PollOptions.openPeriod.<get-openPeriod>|<get-openPeriod>(){}[0]
        final fun <set-openPeriod>(kotlin.time/Duration?) // eu.vendeli.tgbot.types.internal.options/PollOptions.openPeriod.<set-openPeriod>|<set-openPeriod>(kotlin.time.Duration?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/PollOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PollOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PollOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var questionParseMode // eu.vendeli.tgbot.types.internal.options/PollOptions.questionParseMode|{}questionParseMode[0]
        final fun <get-questionParseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/PollOptions.questionParseMode.<get-questionParseMode>|<get-questionParseMode>(){}[0]
        final fun <set-questionParseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/PollOptions.questionParseMode.<set-questionParseMode>|<set-questionParseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/PollOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/PollOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/PollOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]
    final var type // eu.vendeli.tgbot.types.internal.options/PollOptions.type|{}type[0]
        final fun <get-type>(): eu.vendeli.tgbot.types.poll/PollType? // eu.vendeli.tgbot.types.internal.options/PollOptions.type.<get-type>|<get-type>(){}[0]
        final fun <set-type>(eu.vendeli.tgbot.types.poll/PollType?) // eu.vendeli.tgbot.types.internal.options/PollOptions.type.<set-type>|<set-type>(eu.vendeli.tgbot.types.poll.PollType?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PollOptions.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PollOptions.component10|component10(){}[0]
    final fun component11(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/PollOptions.component11|component11(){}[0]
    final fun component12(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PollOptions.component12|component12(){}[0]
    final fun component13(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/PollOptions.component13|component13(){}[0]
    final fun component14(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PollOptions.component14|component14(){}[0]
    final fun component15(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/PollOptions.component15|component15(){}[0]
    final fun component16(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/PollOptions.component16|component16(){}[0]
    final fun component17(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PollOptions.component17|component17(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.poll/PollType? // eu.vendeli.tgbot.types.internal.options/PollOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PollOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/PollOptions.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/PollOptions.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/PollOptions.component6|component6(){}[0]
    final fun component7(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.internal.options/PollOptions.component7|component7(){}[0]
    final fun component8(): kotlin.time/Duration? // eu.vendeli.tgbot.types.internal.options/PollOptions.component8|component8(){}[0]
    final fun component9(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.internal.options/PollOptions.component9|component9(){}[0]
    final fun copy(kotlin/Boolean? = ..., eu.vendeli.tgbot.types.poll/PollType? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin.time/Duration? = ..., kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/PollOptions // eu.vendeli.tgbot.types.internal.options/PollOptions.copy|copy(kotlin.Boolean?;eu.vendeli.tgbot.types.poll.PollType?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.time.Duration?;kotlinx.datetime.Instant?;kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/PollOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/PollOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/PollOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/PollOptions> { // eu.vendeli.tgbot.types.internal.options/PollOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/PollOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/PollOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/PollOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/PollOptions // eu.vendeli.tgbot.types.internal.options/PollOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/PollOptions) // eu.vendeli.tgbot.types.internal.options/PollOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.PollOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/PollOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/PollOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/PollOptions> // eu.vendeli.tgbot.types.internal.options/PollOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions|null[0]
    constructor <init>(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.<init>|<init>(kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final var canChangeInfo // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canChangeInfo|{}canChangeInfo[0]
        final fun <get-canChangeInfo>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canChangeInfo.<get-canChangeInfo>|<get-canChangeInfo>(){}[0]
        final fun <set-canChangeInfo>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canChangeInfo.<set-canChangeInfo>|<set-canChangeInfo>(kotlin.Boolean?){}[0]
    final var canDeleteMessages // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canDeleteMessages|{}canDeleteMessages[0]
        final fun <get-canDeleteMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canDeleteMessages.<get-canDeleteMessages>|<get-canDeleteMessages>(){}[0]
        final fun <set-canDeleteMessages>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canDeleteMessages.<set-canDeleteMessages>|<set-canDeleteMessages>(kotlin.Boolean?){}[0]
    final var canDeleteStories // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canDeleteStories|{}canDeleteStories[0]
        final fun <get-canDeleteStories>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canDeleteStories.<get-canDeleteStories>|<get-canDeleteStories>(){}[0]
        final fun <set-canDeleteStories>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canDeleteStories.<set-canDeleteStories>|<set-canDeleteStories>(kotlin.Boolean?){}[0]
    final var canEditMessages // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canEditMessages|{}canEditMessages[0]
        final fun <get-canEditMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canEditMessages.<get-canEditMessages>|<get-canEditMessages>(){}[0]
        final fun <set-canEditMessages>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canEditMessages.<set-canEditMessages>|<set-canEditMessages>(kotlin.Boolean?){}[0]
    final var canEditStories // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canEditStories|{}canEditStories[0]
        final fun <get-canEditStories>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canEditStories.<get-canEditStories>|<get-canEditStories>(){}[0]
        final fun <set-canEditStories>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canEditStories.<set-canEditStories>|<set-canEditStories>(kotlin.Boolean?){}[0]
    final var canInviteUsers // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canInviteUsers|{}canInviteUsers[0]
        final fun <get-canInviteUsers>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canInviteUsers.<get-canInviteUsers>|<get-canInviteUsers>(){}[0]
        final fun <set-canInviteUsers>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canInviteUsers.<set-canInviteUsers>|<set-canInviteUsers>(kotlin.Boolean?){}[0]
    final var canManageChat // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canManageChat|{}canManageChat[0]
        final fun <get-canManageChat>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canManageChat.<get-canManageChat>|<get-canManageChat>(){}[0]
        final fun <set-canManageChat>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canManageChat.<set-canManageChat>|<set-canManageChat>(kotlin.Boolean?){}[0]
    final var canManageTopics // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canManageTopics|{}canManageTopics[0]
        final fun <get-canManageTopics>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canManageTopics.<get-canManageTopics>|<get-canManageTopics>(){}[0]
        final fun <set-canManageTopics>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canManageTopics.<set-canManageTopics>|<set-canManageTopics>(kotlin.Boolean?){}[0]
    final var canManageVideoChats // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canManageVideoChats|{}canManageVideoChats[0]
        final fun <get-canManageVideoChats>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canManageVideoChats.<get-canManageVideoChats>|<get-canManageVideoChats>(){}[0]
        final fun <set-canManageVideoChats>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canManageVideoChats.<set-canManageVideoChats>|<set-canManageVideoChats>(kotlin.Boolean?){}[0]
    final var canPinMessages // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canPinMessages|{}canPinMessages[0]
        final fun <get-canPinMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canPinMessages.<get-canPinMessages>|<get-canPinMessages>(){}[0]
        final fun <set-canPinMessages>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canPinMessages.<set-canPinMessages>|<set-canPinMessages>(kotlin.Boolean?){}[0]
    final var canPostMessages // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canPostMessages|{}canPostMessages[0]
        final fun <get-canPostMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canPostMessages.<get-canPostMessages>|<get-canPostMessages>(){}[0]
        final fun <set-canPostMessages>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canPostMessages.<set-canPostMessages>|<set-canPostMessages>(kotlin.Boolean?){}[0]
    final var canPostStories // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canPostStories|{}canPostStories[0]
        final fun <get-canPostStories>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canPostStories.<get-canPostStories>|<get-canPostStories>(){}[0]
        final fun <set-canPostStories>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canPostStories.<set-canPostStories>|<set-canPostStories>(kotlin.Boolean?){}[0]
    final var canPromoteMembers // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canPromoteMembers|{}canPromoteMembers[0]
        final fun <get-canPromoteMembers>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canPromoteMembers.<get-canPromoteMembers>|<get-canPromoteMembers>(){}[0]
        final fun <set-canPromoteMembers>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canPromoteMembers.<set-canPromoteMembers>|<set-canPromoteMembers>(kotlin.Boolean?){}[0]
    final var canRestrictMembers // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canRestrictMembers|{}canRestrictMembers[0]
        final fun <get-canRestrictMembers>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canRestrictMembers.<get-canRestrictMembers>|<get-canRestrictMembers>(){}[0]
        final fun <set-canRestrictMembers>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.canRestrictMembers.<set-canRestrictMembers>|<set-canRestrictMembers>(kotlin.Boolean?){}[0]
    final var isAnonymous // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.isAnonymous|{}isAnonymous[0]
        final fun <get-isAnonymous>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.isAnonymous.<get-isAnonymous>|<get-isAnonymous>(){}[0]
        final fun <set-isAnonymous>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.isAnonymous.<set-isAnonymous>|<set-isAnonymous>(kotlin.Boolean?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component10|component10(){}[0]
    final fun component11(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component11|component11(){}[0]
    final fun component12(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component12|component12(){}[0]
    final fun component13(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component13|component13(){}[0]
    final fun component14(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component14|component14(){}[0]
    final fun component15(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component15|component15(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.component9|component9(){}[0]
    final fun copy(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.copy|copy(kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions> { // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions) // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.PromoteChatMemberOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions> // eu.vendeli.tgbot.types.internal.options/PromoteChatMemberOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions { // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions|null[0]
    constructor <init>(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.<init>|<init>(kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final var inputFieldPlaceholder // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.inputFieldPlaceholder|{}inputFieldPlaceholder[0]
        final fun <get-inputFieldPlaceholder>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.inputFieldPlaceholder.<get-inputFieldPlaceholder>|<get-inputFieldPlaceholder>(){}[0]
        final fun <set-inputFieldPlaceholder>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.inputFieldPlaceholder.<set-inputFieldPlaceholder>|<set-inputFieldPlaceholder>(kotlin.String?){}[0]
    final var isPersistent // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.isPersistent|{}isPersistent[0]
        final fun <get-isPersistent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.isPersistent.<get-isPersistent>|<get-isPersistent>(){}[0]
        final fun <set-isPersistent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.isPersistent.<set-isPersistent>|<set-isPersistent>(kotlin.Boolean?){}[0]
    final var oneTimeKeyboard // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.oneTimeKeyboard|{}oneTimeKeyboard[0]
        final fun <get-oneTimeKeyboard>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.oneTimeKeyboard.<get-oneTimeKeyboard>|<get-oneTimeKeyboard>(){}[0]
        final fun <set-oneTimeKeyboard>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.oneTimeKeyboard.<set-oneTimeKeyboard>|<set-oneTimeKeyboard>(kotlin.Boolean?){}[0]
    final var resizeKeyboard // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.resizeKeyboard|{}resizeKeyboard[0]
        final fun <get-resizeKeyboard>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.resizeKeyboard.<get-resizeKeyboard>|<get-resizeKeyboard>(){}[0]
        final fun <set-resizeKeyboard>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.resizeKeyboard.<set-resizeKeyboard>|<set-resizeKeyboard>(kotlin.Boolean?){}[0]
    final var selective // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.selective|{}selective[0]
        final fun <get-selective>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.selective.<get-selective>|<get-selective>(){}[0]
        final fun <set-selective>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.selective.<set-selective>|<set-selective>(kotlin.Boolean?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.component5|component5(){}[0]
    final fun copy(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.copy|copy(kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions> { // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions) // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.ReplyKeyboardMarkupOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions> // eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions|null[0]
    constructor <init>(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.<init>|<init>(kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final var allowBotChats // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.allowBotChats|{}allowBotChats[0]
        final fun <get-allowBotChats>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.allowBotChats.<get-allowBotChats>|<get-allowBotChats>(){}[0]
        final fun <set-allowBotChats>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.allowBotChats.<set-allowBotChats>|<set-allowBotChats>(kotlin.Boolean?){}[0]
    final var allowChannelChats // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.allowChannelChats|{}allowChannelChats[0]
        final fun <get-allowChannelChats>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.allowChannelChats.<get-allowChannelChats>|<get-allowChannelChats>(){}[0]
        final fun <set-allowChannelChats>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.allowChannelChats.<set-allowChannelChats>|<set-allowChannelChats>(kotlin.Boolean?){}[0]
    final var allowGroupChats // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.allowGroupChats|{}allowGroupChats[0]
        final fun <get-allowGroupChats>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.allowGroupChats.<get-allowGroupChats>|<get-allowGroupChats>(){}[0]
        final fun <set-allowGroupChats>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.allowGroupChats.<set-allowGroupChats>|<set-allowGroupChats>(kotlin.Boolean?){}[0]
    final var allowUserChats // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.allowUserChats|{}allowUserChats[0]
        final fun <get-allowUserChats>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.allowUserChats.<get-allowUserChats>|<get-allowUserChats>(){}[0]
        final fun <set-allowUserChats>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.allowUserChats.<set-allowUserChats>|<set-allowUserChats>(kotlin.Boolean?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.component4|component4(){}[0]
    final fun copy(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.copy|copy(kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions> { // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions) // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.SavePreparedInlineMessageOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions> // eu.vendeli.tgbot.types.internal.options/SavePreparedInlineMessageOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions|null[0]
    constructor <init>(kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.<init>|<init>(kotlin.Boolean?;kotlin.Boolean?){}[0]

    final var disableEditMessage // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.disableEditMessage|{}disableEditMessage[0]
        final fun <get-disableEditMessage>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.disableEditMessage.<get-disableEditMessage>|<get-disableEditMessage>(){}[0]
        final fun <set-disableEditMessage>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.disableEditMessage.<set-disableEditMessage>|<set-disableEditMessage>(kotlin.Boolean?){}[0]
    final var force // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.force|{}force[0]
        final fun <get-force>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.force.<get-force>|<get-force>(){}[0]
        final fun <set-force>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.force.<set-force>|<set-force>(kotlin.Boolean?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.component2|component2(){}[0]
    final fun copy(kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.copy|copy(kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions> { // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions) // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.SetGameScoreOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions> // eu.vendeli.tgbot.types.internal.options/SetGameScoreOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/SetWebhookOptions : eu.vendeli.tgbot.types.internal.options/Options { // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/InputFile? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? = ..., kotlin/Boolean? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.<init>|<init>(eu.vendeli.tgbot.types.internal.InputFile?;kotlin.String?;kotlin.Int?;kotlin.collections.List<eu.vendeli.tgbot.types.internal.UpdateType>?;kotlin.Boolean?;kotlin.String?){}[0]

    final var allowedUpdates // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.allowedUpdates|{}allowedUpdates[0]
        final fun <get-allowedUpdates>(): kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.allowedUpdates.<get-allowedUpdates>|<get-allowedUpdates>(){}[0]
        final fun <set-allowedUpdates>(kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>?) // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.allowedUpdates.<set-allowedUpdates>|<set-allowedUpdates>(kotlin.collections.List<eu.vendeli.tgbot.types.internal.UpdateType>?){}[0]
    final var certificate // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.certificate|{}certificate[0]
        final fun <get-certificate>(): eu.vendeli.tgbot.types.internal/InputFile? // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.certificate.<get-certificate>|<get-certificate>(){}[0]
        final fun <set-certificate>(eu.vendeli.tgbot.types.internal/InputFile?) // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.certificate.<set-certificate>|<set-certificate>(eu.vendeli.tgbot.types.internal.InputFile?){}[0]
    final var dropPendingUpdates // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.dropPendingUpdates|{}dropPendingUpdates[0]
        final fun <get-dropPendingUpdates>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.dropPendingUpdates.<get-dropPendingUpdates>|<get-dropPendingUpdates>(){}[0]
        final fun <set-dropPendingUpdates>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.dropPendingUpdates.<set-dropPendingUpdates>|<set-dropPendingUpdates>(kotlin.Boolean?){}[0]
    final var ipAddress // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.ipAddress|{}ipAddress[0]
        final fun <get-ipAddress>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.ipAddress.<get-ipAddress>|<get-ipAddress>(){}[0]
        final fun <set-ipAddress>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.ipAddress.<set-ipAddress>|<set-ipAddress>(kotlin.String?){}[0]
    final var maxConnections // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.maxConnections|{}maxConnections[0]
        final fun <get-maxConnections>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.maxConnections.<get-maxConnections>|<get-maxConnections>(){}[0]
        final fun <set-maxConnections>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.maxConnections.<set-maxConnections>|<set-maxConnections>(kotlin.Int?){}[0]
    final var secretToken // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.secretToken|{}secretToken[0]
        final fun <get-secretToken>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.secretToken.<get-secretToken>|<get-secretToken>(){}[0]
        final fun <set-secretToken>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.secretToken.<set-secretToken>|<set-secretToken>(kotlin.String?){}[0]

    final fun component1(): eu.vendeli.tgbot.types.internal/InputFile? // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.component1|component1(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.component6|component6(){}[0]
    final fun copy(eu.vendeli.tgbot.types.internal/InputFile? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? = ..., kotlin/Boolean? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.internal.options/SetWebhookOptions // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.copy|copy(eu.vendeli.tgbot.types.internal.InputFile?;kotlin.String?;kotlin.Int?;kotlin.collections.List<eu.vendeli.tgbot.types.internal.UpdateType>?;kotlin.Boolean?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/SetWebhookOptions> { // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/SetWebhookOptions // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/SetWebhookOptions) // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.SetWebhookOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/SetWebhookOptions> // eu.vendeli.tgbot.types.internal.options/SetWebhookOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/StickerOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon { // eu.vendeli.tgbot.types.internal.options/StickerOptions|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/StickerOptions.<init>|<init>(kotlin.String?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/StickerOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/StickerOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/StickerOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/StickerOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/StickerOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/StickerOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var emoji // eu.vendeli.tgbot.types.internal.options/StickerOptions.emoji|{}emoji[0]
        final fun <get-emoji>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/StickerOptions.emoji.<get-emoji>|<get-emoji>(){}[0]
        final fun <set-emoji>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/StickerOptions.emoji.<set-emoji>|<set-emoji>(kotlin.String?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/StickerOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/StickerOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/StickerOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/StickerOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/StickerOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/StickerOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/StickerOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/StickerOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/StickerOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/StickerOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/StickerOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/StickerOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/StickerOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/StickerOptions.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/StickerOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/StickerOptions.component4|component4(){}[0]
    final fun component5(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/StickerOptions.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/StickerOptions.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/StickerOptions.component7|component7(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/StickerOptions // eu.vendeli.tgbot.types.internal.options/StickerOptions.copy|copy(kotlin.String?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/StickerOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/StickerOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/StickerOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/StickerOptions> { // eu.vendeli.tgbot.types.internal.options/StickerOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/StickerOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/StickerOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/StickerOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/StickerOptions // eu.vendeli.tgbot.types.internal.options/StickerOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/StickerOptions) // eu.vendeli.tgbot.types.internal.options/StickerOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.StickerOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/StickerOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/StickerOptions> // eu.vendeli.tgbot.types.internal.options/StickerOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/VenueOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon { // eu.vendeli.tgbot.types.internal.options/VenueOptions|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/VenueOptions.<init>|<init>(kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/VenueOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VenueOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VenueOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/VenueOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VenueOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VenueOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var foursquareId // eu.vendeli.tgbot.types.internal.options/VenueOptions.foursquareId|{}foursquareId[0]
        final fun <get-foursquareId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VenueOptions.foursquareId.<get-foursquareId>|<get-foursquareId>(){}[0]
        final fun <set-foursquareId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/VenueOptions.foursquareId.<set-foursquareId>|<set-foursquareId>(kotlin.String?){}[0]
    final var foursquareType // eu.vendeli.tgbot.types.internal.options/VenueOptions.foursquareType|{}foursquareType[0]
        final fun <get-foursquareType>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VenueOptions.foursquareType.<get-foursquareType>|<get-foursquareType>(){}[0]
        final fun <set-foursquareType>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/VenueOptions.foursquareType.<set-foursquareType>|<set-foursquareType>(kotlin.String?){}[0]
    final var googlePlaceId // eu.vendeli.tgbot.types.internal.options/VenueOptions.googlePlaceId|{}googlePlaceId[0]
        final fun <get-googlePlaceId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VenueOptions.googlePlaceId.<get-googlePlaceId>|<get-googlePlaceId>(){}[0]
        final fun <set-googlePlaceId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/VenueOptions.googlePlaceId.<set-googlePlaceId>|<set-googlePlaceId>(kotlin.String?){}[0]
    final var googlePlaceType // eu.vendeli.tgbot.types.internal.options/VenueOptions.googlePlaceType|{}googlePlaceType[0]
        final fun <get-googlePlaceType>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VenueOptions.googlePlaceType.<get-googlePlaceType>|<get-googlePlaceType>(){}[0]
        final fun <set-googlePlaceType>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/VenueOptions.googlePlaceType.<set-googlePlaceType>|<set-googlePlaceType>(kotlin.String?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/VenueOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VenueOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/VenueOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/VenueOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VenueOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/VenueOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/VenueOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VenueOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VenueOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/VenueOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/VenueOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/VenueOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VenueOptions.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VenueOptions.component10|component10(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VenueOptions.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VenueOptions.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VenueOptions.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VenueOptions.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/VenueOptions.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VenueOptions.component7|component7(){}[0]
    final fun component8(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VenueOptions.component8|component8(){}[0]
    final fun component9(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VenueOptions.component9|component9(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/VenueOptions // eu.vendeli.tgbot.types.internal.options/VenueOptions.copy|copy(kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/VenueOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/VenueOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/VenueOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/VenueOptions> { // eu.vendeli.tgbot.types.internal.options/VenueOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/VenueOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/VenueOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/VenueOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/VenueOptions // eu.vendeli.tgbot.types.internal.options/VenueOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/VenueOptions) // eu.vendeli.tgbot.types.internal.options/VenueOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.VenueOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/VenueOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/VenueOptions> // eu.vendeli.tgbot.types.internal.options/VenueOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/VideoNoteOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon, eu.vendeli.tgbot.types.internal.options/ThumbnailProp { // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions|null[0]
    constructor <init>(kotlin/Int? = ..., kotlin/Int? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.<init>|<init>(kotlin.Int?;kotlin.Int?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var duration // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.duration.<get-duration>|<get-duration>(){}[0]
        final fun <set-duration>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.duration.<set-duration>|<set-duration>(kotlin.Int?){}[0]
    final var length // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.length|{}length[0]
        final fun <get-length>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.length.<get-length>|<get-length>(){}[0]
        final fun <set-length>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.length.<set-length>|<set-length>(kotlin.Int?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]
    final var thumbnail // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.thumbnail|{}thumbnail[0]
        final fun <get-thumbnail>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
        final fun <set-thumbnail>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.thumbnail.<set-thumbnail>|<set-thumbnail>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]

    final fun component1(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.component6|component6(){}[0]
    final fun component7(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.component7|component7(){}[0]
    final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.component9|component9(){}[0]
    final fun copy(kotlin/Int? = ..., kotlin/Int? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/VideoNoteOptions // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.copy|copy(kotlin.Int?;kotlin.Int?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/VideoNoteOptions> { // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/VideoNoteOptions // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/VideoNoteOptions) // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.VideoNoteOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/VideoNoteOptions> // eu.vendeli.tgbot.types.internal.options/VideoNoteOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/VideoOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MediaSpoiler, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon, eu.vendeli.tgbot.types.internal.options/OptionsParseMode, eu.vendeli.tgbot.types.internal.options/ShowCaptionAboveMediaProp, eu.vendeli.tgbot.types.internal.options/ThumbnailProp { // eu.vendeli.tgbot.types.internal.options/VideoOptions|null[0]
    constructor <init>(kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin.time/Duration? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/VideoOptions.<init>|<init>(kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.time.Duration?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.Boolean?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/VideoOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var cover // eu.vendeli.tgbot.types.internal.options/VideoOptions.cover|{}cover[0]
        final fun <get-cover>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/VideoOptions.cover.<get-cover>|<get-cover>(){}[0]
        final fun <set-cover>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.cover.<set-cover>|<set-cover>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/VideoOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var duration // eu.vendeli.tgbot.types.internal.options/VideoOptions.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoOptions.duration.<get-duration>|<get-duration>(){}[0]
        final fun <set-duration>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.duration.<set-duration>|<set-duration>(kotlin.Int?){}[0]
    final var hasSpoiler // eu.vendeli.tgbot.types.internal.options/VideoOptions.hasSpoiler|{}hasSpoiler[0]
        final fun <get-hasSpoiler>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoOptions.hasSpoiler.<get-hasSpoiler>|<get-hasSpoiler>(){}[0]
        final fun <set-hasSpoiler>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.hasSpoiler.<set-hasSpoiler>|<set-hasSpoiler>(kotlin.Boolean?){}[0]
    final var height // eu.vendeli.tgbot.types.internal.options/VideoOptions.height|{}height[0]
        final fun <get-height>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoOptions.height.<get-height>|<get-height>(){}[0]
        final fun <set-height>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.height.<set-height>|<set-height>(kotlin.Int?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/VideoOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VideoOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/VideoOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var parseMode // eu.vendeli.tgbot.types.internal.options/VideoOptions.parseMode|{}parseMode[0]
        final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/VideoOptions.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final fun <set-parseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.parseMode.<set-parseMode>|<set-parseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/VideoOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/VideoOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/VideoOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]
    final var showCaptionAboveMedia // eu.vendeli.tgbot.types.internal.options/VideoOptions.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
        final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoOptions.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final fun <set-showCaptionAboveMedia>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.showCaptionAboveMedia.<set-showCaptionAboveMedia>|<set-showCaptionAboveMedia>(kotlin.Boolean?){}[0]
    final var startTimestamp // eu.vendeli.tgbot.types.internal.options/VideoOptions.startTimestamp|{}startTimestamp[0]
        final fun <get-startTimestamp>(): kotlin.time/Duration? // eu.vendeli.tgbot.types.internal.options/VideoOptions.startTimestamp.<get-startTimestamp>|<get-startTimestamp>(){}[0]
        final fun <set-startTimestamp>(kotlin.time/Duration?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.startTimestamp.<set-startTimestamp>|<set-startTimestamp>(kotlin.time.Duration?){}[0]
    final var supportsStreaming // eu.vendeli.tgbot.types.internal.options/VideoOptions.supportsStreaming|{}supportsStreaming[0]
        final fun <get-supportsStreaming>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoOptions.supportsStreaming.<get-supportsStreaming>|<get-supportsStreaming>(){}[0]
        final fun <set-supportsStreaming>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.supportsStreaming.<set-supportsStreaming>|<set-supportsStreaming>(kotlin.Boolean?){}[0]
    final var thumbnail // eu.vendeli.tgbot.types.internal.options/VideoOptions.thumbnail|{}thumbnail[0]
        final fun <get-thumbnail>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/VideoOptions.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
        final fun <set-thumbnail>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.thumbnail.<set-thumbnail>|<set-thumbnail>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]
    final var width // eu.vendeli.tgbot.types.internal.options/VideoOptions.width|{}width[0]
        final fun <get-width>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoOptions.width.<get-width>|<get-width>(){}[0]
        final fun <set-width>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/VideoOptions.width.<set-width>|<set-width>(kotlin.Int?){}[0]

    final fun component1(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component10|component10(){}[0]
    final fun component11(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component11|component11(){}[0]
    final fun component12(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component12|component12(){}[0]
    final fun component13(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component13|component13(){}[0]
    final fun component14(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component14|component14(){}[0]
    final fun component15(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component15|component15(){}[0]
    final fun component16(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component16|component16(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component5|component5(){}[0]
    final fun component6(): kotlin.time/Duration? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component6|component6(){}[0]
    final fun component7(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component8|component8(){}[0]
    final fun component9(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/VideoOptions.component9|component9(){}[0]
    final fun copy(kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin.time/Duration? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/VideoOptions // eu.vendeli.tgbot.types.internal.options/VideoOptions.copy|copy(kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.time.Duration?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Boolean?;kotlin.Int?;kotlin.Boolean?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/VideoOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/VideoOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/VideoOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/VideoOptions> { // eu.vendeli.tgbot.types.internal.options/VideoOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/VideoOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/VideoOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/VideoOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/VideoOptions // eu.vendeli.tgbot.types.internal.options/VideoOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/VideoOptions) // eu.vendeli.tgbot.types.internal.options/VideoOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.VideoOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/VideoOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/VideoOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/VideoOptions> // eu.vendeli.tgbot.types.internal.options/VideoOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal.options/VoiceOptions : eu.vendeli.tgbot.types.internal.options/ForumProps, eu.vendeli.tgbot.types.internal.options/MessageEffectIdProp, eu.vendeli.tgbot.types.internal.options/OptionsCommon, eu.vendeli.tgbot.types.internal.options/OptionsParseMode { // eu.vendeli.tgbot.types.internal.options/VoiceOptions|null[0]
    constructor <init>(eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.internal.options/VoiceOptions.<init>|<init>(eu.vendeli.tgbot.types.ParseMode?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]

    final var allowPaidBroadcast // eu.vendeli.tgbot.types.internal.options/VoiceOptions.allowPaidBroadcast|{}allowPaidBroadcast[0]
        final fun <get-allowPaidBroadcast>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.allowPaidBroadcast.<get-allowPaidBroadcast>|<get-allowPaidBroadcast>(){}[0]
        final fun <set-allowPaidBroadcast>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VoiceOptions.allowPaidBroadcast.<set-allowPaidBroadcast>|<set-allowPaidBroadcast>(kotlin.Boolean?){}[0]
    final var disableNotification // eu.vendeli.tgbot.types.internal.options/VoiceOptions.disableNotification|{}disableNotification[0]
        final fun <get-disableNotification>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.disableNotification.<get-disableNotification>|<get-disableNotification>(){}[0]
        final fun <set-disableNotification>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VoiceOptions.disableNotification.<set-disableNotification>|<set-disableNotification>(kotlin.Boolean?){}[0]
    final var duration // eu.vendeli.tgbot.types.internal.options/VoiceOptions.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.duration.<get-duration>|<get-duration>(){}[0]
        final fun <set-duration>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/VoiceOptions.duration.<set-duration>|<set-duration>(kotlin.Int?){}[0]
    final var messageEffectId // eu.vendeli.tgbot.types.internal.options/VoiceOptions.messageEffectId|{}messageEffectId[0]
        final fun <get-messageEffectId>(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.messageEffectId.<get-messageEffectId>|<get-messageEffectId>(){}[0]
        final fun <set-messageEffectId>(kotlin/String?) // eu.vendeli.tgbot.types.internal.options/VoiceOptions.messageEffectId.<set-messageEffectId>|<set-messageEffectId>(kotlin.String?){}[0]
    final var messageThreadId // eu.vendeli.tgbot.types.internal.options/VoiceOptions.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
        final fun <set-messageThreadId>(kotlin/Int?) // eu.vendeli.tgbot.types.internal.options/VoiceOptions.messageThreadId.<set-messageThreadId>|<set-messageThreadId>(kotlin.Int?){}[0]
    final var parseMode // eu.vendeli.tgbot.types.internal.options/VoiceOptions.parseMode|{}parseMode[0]
        final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final fun <set-parseMode>(eu.vendeli.tgbot.types/ParseMode?) // eu.vendeli.tgbot.types.internal.options/VoiceOptions.parseMode.<set-parseMode>|<set-parseMode>(eu.vendeli.tgbot.types.ParseMode?){}[0]
    final var protectContent // eu.vendeli.tgbot.types.internal.options/VoiceOptions.protectContent|{}protectContent[0]
        final fun <get-protectContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.protectContent.<get-protectContent>|<get-protectContent>(){}[0]
        final fun <set-protectContent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.internal.options/VoiceOptions.protectContent.<set-protectContent>|<set-protectContent>(kotlin.Boolean?){}[0]
    final var replyParameters // eu.vendeli.tgbot.types.internal.options/VoiceOptions.replyParameters|{}replyParameters[0]
        final fun <get-replyParameters>(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.replyParameters.<get-replyParameters>|<get-replyParameters>(){}[0]
        final fun <set-replyParameters>(eu.vendeli.tgbot.types/ReplyParameters?) // eu.vendeli.tgbot.types.internal.options/VoiceOptions.replyParameters.<set-replyParameters>|<set-replyParameters>(eu.vendeli.tgbot.types.ReplyParameters?){}[0]

    final fun component1(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.component1|component1(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types/ReplyParameters? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.component5|component5(){}[0]
    final fun component6(): kotlin/Int? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.component6|component6(){}[0]
    final fun component7(): kotlin/String? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.internal.options/VoiceOptions.component8|component8(){}[0]
    final fun copy(eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ReplyParameters? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.internal.options/VoiceOptions // eu.vendeli.tgbot.types.internal.options/VoiceOptions.copy|copy(eu.vendeli.tgbot.types.ParseMode?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.ReplyParameters?;kotlin.Int?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.options/VoiceOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.options/VoiceOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.options/VoiceOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal.options/VoiceOptions> { // eu.vendeli.tgbot.types.internal.options/VoiceOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal.options/VoiceOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal.options/VoiceOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal.options/VoiceOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal.options/VoiceOptions // eu.vendeli.tgbot.types.internal.options/VoiceOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal.options/VoiceOptions) // eu.vendeli.tgbot.types.internal.options/VoiceOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.options.VoiceOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal.options/VoiceOptions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.internal.options/VoiceOptions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal.options/VoiceOptions> // eu.vendeli.tgbot.types.internal.options/VoiceOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.business/BusinessConnection) // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.business.BusinessConnection){}[0]

    final val businessConnection // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.businessConnection|{}businessConnection[0]
        final fun <get-businessConnection>(): eu.vendeli.tgbot.types.business/BusinessConnection // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.businessConnection.<get-businessConnection>|<get-businessConnection>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.business/BusinessConnection // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.business/BusinessConnection = ...): eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.business.BusinessConnection){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/BusinessMessageUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.msg/Message) // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.Message){}[0]

    final val businessMessage // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.businessMessage|{}businessMessage[0]
        final fun <get-businessMessage>(): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.businessMessage.<get-businessMessage>|<get-businessMessage>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.msg/Message = ...): eu.vendeli.tgbot.types.internal/BusinessMessageUpdate // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.Message){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/BusinessMessageUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/CallbackQueryUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types/CallbackQuery) // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.CallbackQuery){}[0]

    final val callbackQuery // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.callbackQuery|{}callbackQuery[0]
        final fun <get-callbackQuery>(): eu.vendeli.tgbot.types/CallbackQuery // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.callbackQuery.<get-callbackQuery>|<get-callbackQuery>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types/CallbackQuery // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types/CallbackQuery = ...): eu.vendeli.tgbot.types.internal/CallbackQueryUpdate // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.CallbackQuery){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/CallbackQueryUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/ChannelPostUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/ChannelPostUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.msg/Message) // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.Message){}[0]

    final val channelPost // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.channelPost|{}channelPost[0]
        final fun <get-channelPost>(): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.channelPost.<get-channelPost>|<get-channelPost>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.msg/Message = ...): eu.vendeli.tgbot.types.internal/ChannelPostUpdate // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.Message){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/ChannelPostUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/ChatBoostUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate { // eu.vendeli.tgbot.types.internal/ChatBoostUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.boost/ChatBoostUpdated) // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.boost.ChatBoostUpdated){}[0]

    final val chatBoost // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.chatBoost|{}chatBoost[0]
        final fun <get-chatBoost>(): eu.vendeli.tgbot.types.boost/ChatBoostUpdated // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.chatBoost.<get-chatBoost>|<get-chatBoost>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.boost/ChatBoostUpdated // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.boost/ChatBoostUpdated = ...): eu.vendeli.tgbot.types.internal/ChatBoostUpdate // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.boost.ChatBoostUpdated){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/ChatBoostUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.chat/ChatJoinRequest) // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.chat.ChatJoinRequest){}[0]

    final val chatJoinRequest // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.chatJoinRequest|{}chatJoinRequest[0]
        final fun <get-chatJoinRequest>(): eu.vendeli.tgbot.types.chat/ChatJoinRequest // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.chatJoinRequest.<get-chatJoinRequest>|<get-chatJoinRequest>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.chat/ChatJoinRequest // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.chat/ChatJoinRequest = ...): eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.chat.ChatJoinRequest){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/ChatMemberUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/ChatMemberUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.chat/ChatMemberUpdated) // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.chat.ChatMemberUpdated){}[0]

    final val chatMember // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.chatMember|{}chatMember[0]
        final fun <get-chatMember>(): eu.vendeli.tgbot.types.chat/ChatMemberUpdated // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.chatMember.<get-chatMember>|<get-chatMember>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.chat/ChatMemberUpdated // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.chat/ChatMemberUpdated = ...): eu.vendeli.tgbot.types.internal/ChatMemberUpdate // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.chat.ChatMemberUpdated){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/ChatMemberUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.inline/ChosenInlineResult) // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.inline.ChosenInlineResult){}[0]

    final val chosenInlineResult // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.chosenInlineResult|{}chosenInlineResult[0]
        final fun <get-chosenInlineResult>(): eu.vendeli.tgbot.types.inline/ChosenInlineResult // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.chosenInlineResult.<get-chosenInlineResult>|<get-chosenInlineResult>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.inline/ChosenInlineResult // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.inline/ChosenInlineResult = ...): eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.inline.ChosenInlineResult){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate { // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.business/BusinessMessagesDeleted) // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.business.BusinessMessagesDeleted){}[0]

    final val deletedBusinessMessages // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.deletedBusinessMessages|{}deletedBusinessMessages[0]
        final fun <get-deletedBusinessMessages>(): eu.vendeli.tgbot.types.business/BusinessMessagesDeleted // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.deletedBusinessMessages.<get-deletedBusinessMessages>|<get-deletedBusinessMessages>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.business/BusinessMessagesDeleted // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.business/BusinessMessagesDeleted = ...): eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.business.BusinessMessagesDeleted){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.msg/Message) // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.Message){}[0]

    final val editedBusinessMessage // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.editedBusinessMessage|{}editedBusinessMessage[0]
        final fun <get-editedBusinessMessage>(): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.editedBusinessMessage.<get-editedBusinessMessage>|<get-editedBusinessMessage>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.msg/Message = ...): eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.Message){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.msg/Message) // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.Message){}[0]

    final val editedChannelPost // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.editedChannelPost|{}editedChannelPost[0]
        final fun <get-editedChannelPost>(): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.editedChannelPost.<get-editedChannelPost>|<get-editedChannelPost>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.msg/Message = ...): eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.Message){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/EditedMessageUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/EditedMessageUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.msg/Message) // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.Message){}[0]

    final val editedMessage // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.editedMessage|{}editedMessage[0]
        final fun <get-editedMessage>(): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.editedMessage.<get-editedMessage>|<get-editedMessage>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.msg/Message = ...): eu.vendeli.tgbot.types.internal/EditedMessageUpdate // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.Message){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/EditedMessageUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/FailedUpdate { // eu.vendeli.tgbot.types.internal/FailedUpdate|null[0]
    constructor <init>(kotlin/Throwable, eu.vendeli.tgbot.types.internal/ProcessedUpdate) // eu.vendeli.tgbot.types.internal/FailedUpdate.<init>|<init>(kotlin.Throwable;eu.vendeli.tgbot.types.internal.ProcessedUpdate){}[0]

    final val exception // eu.vendeli.tgbot.types.internal/FailedUpdate.exception|{}exception[0]
        final fun <get-exception>(): kotlin/Throwable // eu.vendeli.tgbot.types.internal/FailedUpdate.exception.<get-exception>|<get-exception>(){}[0]
    final val update // eu.vendeli.tgbot.types.internal/FailedUpdate.update|{}update[0]
        final fun <get-update>(): eu.vendeli.tgbot.types.internal/ProcessedUpdate // eu.vendeli.tgbot.types.internal/FailedUpdate.update.<get-update>|<get-update>(){}[0]

    final fun component1(): kotlin/Throwable // eu.vendeli.tgbot.types.internal/FailedUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.internal/ProcessedUpdate // eu.vendeli.tgbot.types.internal/FailedUpdate.component2|component2(){}[0]
    final fun copy(kotlin/Throwable = ..., eu.vendeli.tgbot.types.internal/ProcessedUpdate = ...): eu.vendeli.tgbot.types.internal/FailedUpdate // eu.vendeli.tgbot.types.internal/FailedUpdate.copy|copy(kotlin.Throwable;eu.vendeli.tgbot.types.internal.ProcessedUpdate){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/FailedUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/FailedUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/FailedUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/InlineQueryUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/InlineQueryUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.inline/InlineQuery) // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.inline.InlineQuery){}[0]

    final val inlineQuery // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.inlineQuery|{}inlineQuery[0]
        final fun <get-inlineQuery>(): eu.vendeli.tgbot.types.inline/InlineQuery // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.inlineQuery.<get-inlineQuery>|<get-inlineQuery>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.inline/InlineQuery // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.inline/InlineQuery = ...): eu.vendeli.tgbot.types.internal/InlineQueryUpdate // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.inline.InlineQuery){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/InlineQueryUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/InputBreakPoint { // eu.vendeli.tgbot.types.internal/InputBreakPoint|null[0]
    constructor <init>(kotlin/Function1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Boolean>, kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>? = ..., kotlin/Boolean = ...) // eu.vendeli.tgbot.types.internal/InputBreakPoint.<init>|<init>(kotlin.Function1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Boolean>;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Unit>?;kotlin.Boolean){}[0]

    final val activity // eu.vendeli.tgbot.types.internal/InputBreakPoint.activity|{}activity[0]
        final fun <get-activity>(): kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>? // eu.vendeli.tgbot.types.internal/InputBreakPoint.activity.<get-activity>|<get-activity>(){}[0]
    final val condition // eu.vendeli.tgbot.types.internal/InputBreakPoint.condition|{}condition[0]
        final fun <get-condition>(): kotlin/Function1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Boolean> // eu.vendeli.tgbot.types.internal/InputBreakPoint.condition.<get-condition>|<get-condition>(){}[0]
    final val repeat // eu.vendeli.tgbot.types.internal/InputBreakPoint.repeat|{}repeat[0]
        final fun <get-repeat>(): kotlin/Boolean // eu.vendeli.tgbot.types.internal/InputBreakPoint.repeat.<get-repeat>|<get-repeat>(){}[0]

    final fun component1(): kotlin/Function1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Boolean> // eu.vendeli.tgbot.types.internal/InputBreakPoint.component1|component1(){}[0]
    final fun component2(): kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>? // eu.vendeli.tgbot.types.internal/InputBreakPoint.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean // eu.vendeli.tgbot.types.internal/InputBreakPoint.component3|component3(){}[0]
    final fun copy(kotlin/Function1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Boolean> = ..., kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ProcessedUpdate>, kotlin/Unit>? = ..., kotlin/Boolean = ...): eu.vendeli.tgbot.types.internal/InputBreakPoint // eu.vendeli.tgbot.types.internal/InputBreakPoint.copy|copy(kotlin.Function1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Boolean>;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ProcessedUpdate>,kotlin.Unit>?;kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/InputBreakPoint.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/InputBreakPoint.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/InputBreakPoint.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/InputFile { // eu.vendeli.tgbot.types.internal/InputFile|null[0]
    constructor <init>(kotlin/ByteArray, kotlin/String = ..., kotlin/String = ...) // eu.vendeli.tgbot.types.internal/InputFile.<init>|<init>(kotlin.ByteArray;kotlin.String;kotlin.String){}[0]

    final val contentType // eu.vendeli.tgbot.types.internal/InputFile.contentType|{}contentType[0]
        final fun <get-contentType>(): kotlin/String // eu.vendeli.tgbot.types.internal/InputFile.contentType.<get-contentType>|<get-contentType>(){}[0]
    final val data // eu.vendeli.tgbot.types.internal/InputFile.data|{}data[0]
        final fun <get-data>(): kotlin/ByteArray // eu.vendeli.tgbot.types.internal/InputFile.data.<get-data>|<get-data>(){}[0]
    final val fileName // eu.vendeli.tgbot.types.internal/InputFile.fileName|{}fileName[0]
        final fun <get-fileName>(): kotlin/String // eu.vendeli.tgbot.types.internal/InputFile.fileName.<get-fileName>|<get-fileName>(){}[0]

    final fun component1(): kotlin/ByteArray // eu.vendeli.tgbot.types.internal/InputFile.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.internal/InputFile.component2|component2(){}[0]
    final fun component3(): kotlin/String // eu.vendeli.tgbot.types.internal/InputFile.component3|component3(){}[0]
    final fun copy(kotlin/ByteArray = ..., kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.internal/InputFile // eu.vendeli.tgbot.types.internal/InputFile.copy|copy(kotlin.ByteArray;kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/InputFile.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/InputFile.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/InputFile.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal/InputFile> { // eu.vendeli.tgbot.types.internal/InputFile.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.internal/InputFile.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal/InputFile.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal/InputFile.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal/InputFile // eu.vendeli.tgbot.types.internal/InputFile.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal/InputFile) // eu.vendeli.tgbot.types.internal/InputFile.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.InputFile){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal/InputFile.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal/InputFile> // eu.vendeli.tgbot.types.internal/InputFile.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.internal/InvocationMeta { // eu.vendeli.tgbot.types.internal/InvocationMeta|null[0]
    constructor <init>(kotlin/String, kotlin/String, eu.vendeli.tgbot.types.internal.configuration/RateLimits = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Guard> = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> = ...) // eu.vendeli.tgbot.types.internal/InvocationMeta.<init>|<init>(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.internal.configuration.RateLimits;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.Guard>;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.ArgumentParser>){}[0]

    final val argParser // eu.vendeli.tgbot.types.internal/InvocationMeta.argParser|{}argParser[0]
        final fun <get-argParser>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> // eu.vendeli.tgbot.types.internal/InvocationMeta.argParser.<get-argParser>|<get-argParser>(){}[0]
    final val function // eu.vendeli.tgbot.types.internal/InvocationMeta.function|{}function[0]
        final fun <get-function>(): kotlin/String // eu.vendeli.tgbot.types.internal/InvocationMeta.function.<get-function>|<get-function>(){}[0]
    final val guard // eu.vendeli.tgbot.types.internal/InvocationMeta.guard|{}guard[0]
        final fun <get-guard>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Guard> // eu.vendeli.tgbot.types.internal/InvocationMeta.guard.<get-guard>|<get-guard>(){}[0]
    final val qualifier // eu.vendeli.tgbot.types.internal/InvocationMeta.qualifier|{}qualifier[0]
        final fun <get-qualifier>(): kotlin/String // eu.vendeli.tgbot.types.internal/InvocationMeta.qualifier.<get-qualifier>|<get-qualifier>(){}[0]
    final val rateLimits // eu.vendeli.tgbot.types.internal/InvocationMeta.rateLimits|{}rateLimits[0]
        final fun <get-rateLimits>(): eu.vendeli.tgbot.types.internal.configuration/RateLimits // eu.vendeli.tgbot.types.internal/InvocationMeta.rateLimits.<get-rateLimits>|<get-rateLimits>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.internal/InvocationMeta.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.internal/InvocationMeta.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.internal.configuration/RateLimits // eu.vendeli.tgbot.types.internal/InvocationMeta.component3|component3(){}[0]
    final fun component4(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Guard> // eu.vendeli.tgbot.types.internal/InvocationMeta.component4|component4(){}[0]
    final fun component5(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> // eu.vendeli.tgbot.types.internal/InvocationMeta.component5|component5(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., eu.vendeli.tgbot.types.internal.configuration/RateLimits = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Guard> = ..., kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/ArgumentParser> = ...): eu.vendeli.tgbot.types.internal/InvocationMeta // eu.vendeli.tgbot.types.internal/InvocationMeta.copy|copy(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.internal.configuration.RateLimits;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.Guard>;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.ArgumentParser>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/InvocationMeta.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/InvocationMeta.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/InvocationMeta.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate { // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated) // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.MessageReactionCountUpdated){}[0]

    final val messageReactionCount // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.messageReactionCount|{}messageReactionCount[0]
        final fun <get-messageReactionCount>(): eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.messageReactionCount.<get-messageReactionCount>|<get-messageReactionCount>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated = ...): eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.MessageReactionCountUpdated){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/MessageReactionUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/MessageReactionUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.msg/MessageReactionUpdated) // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.MessageReactionUpdated){}[0]

    final val messageReaction // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.messageReaction|{}messageReaction[0]
        final fun <get-messageReaction>(): eu.vendeli.tgbot.types.msg/MessageReactionUpdated // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.messageReaction.<get-messageReaction>|<get-messageReaction>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.msg/MessageReactionUpdated // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.msg/MessageReactionUpdated = ...): eu.vendeli.tgbot.types.internal/MessageReactionUpdate // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.MessageReactionUpdated){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/MessageReactionUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/MessageUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/MessageUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.msg/Message) // eu.vendeli.tgbot.types.internal/MessageUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.Message){}[0]

    final val message // eu.vendeli.tgbot.types.internal/MessageUpdate.message|{}message[0]
        final fun <get-message>(): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.internal/MessageUpdate.message.<get-message>|<get-message>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/MessageUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/MessageUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/MessageUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/MessageUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/MessageUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/MessageUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/MessageUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/MessageUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/MessageUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/MessageUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.internal/MessageUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.msg/Message = ...): eu.vendeli.tgbot.types.internal/MessageUpdate // eu.vendeli.tgbot.types.internal/MessageUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.msg.Message){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/MessageUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/MessageUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/MessageUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/MyChatMemberUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.chat/ChatMemberUpdated) // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.chat.ChatMemberUpdated){}[0]

    final val myChatMember // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.myChatMember|{}myChatMember[0]
        final fun <get-myChatMember>(): eu.vendeli.tgbot.types.chat/ChatMemberUpdated // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.myChatMember.<get-myChatMember>|<get-myChatMember>(){}[0]
    final val origin // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.chat/ChatMemberUpdated // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.chat/ChatMemberUpdated = ...): eu.vendeli.tgbot.types.internal/MyChatMemberUpdate // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.chat.ChatMemberUpdated){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/MyChatMemberUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/PollAnswerUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/PollAnswerUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types/PollAnswer) // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.PollAnswer){}[0]

    final val origin // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val pollAnswer // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.pollAnswer|{}pollAnswer[0]
        final fun <get-pollAnswer>(): eu.vendeli.tgbot.types/PollAnswer // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.pollAnswer.<get-pollAnswer>|<get-pollAnswer>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types/PollAnswer // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types/PollAnswer = ...): eu.vendeli.tgbot.types.internal/PollAnswerUpdate // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.PollAnswer){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/PollAnswerUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/PollUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate { // eu.vendeli.tgbot.types.internal/PollUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.poll/Poll) // eu.vendeli.tgbot.types.internal/PollUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.poll.Poll){}[0]

    final val origin // eu.vendeli.tgbot.types.internal/PollUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/PollUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val poll // eu.vendeli.tgbot.types.internal/PollUpdate.poll|{}poll[0]
        final fun <get-poll>(): eu.vendeli.tgbot.types.poll/Poll // eu.vendeli.tgbot.types.internal/PollUpdate.poll.<get-poll>|<get-poll>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/PollUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/PollUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/PollUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/PollUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/PollUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/PollUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.poll/Poll // eu.vendeli.tgbot.types.internal/PollUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.poll/Poll = ...): eu.vendeli.tgbot.types.internal/PollUpdate // eu.vendeli.tgbot.types.internal/PollUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.poll.Poll){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/PollUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/PollUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/PollUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.payment/PreCheckoutQuery) // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.payment.PreCheckoutQuery){}[0]

    final val origin // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val preCheckoutQuery // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.preCheckoutQuery|{}preCheckoutQuery[0]
        final fun <get-preCheckoutQuery>(): eu.vendeli.tgbot.types.payment/PreCheckoutQuery // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.preCheckoutQuery.<get-preCheckoutQuery>|<get-preCheckoutQuery>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.payment/PreCheckoutQuery // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.payment/PreCheckoutQuery = ...): eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.payment.PreCheckoutQuery){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.media/PaidMediaPurchased) // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.media.PaidMediaPurchased){}[0]

    final val origin // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val purchasedPaidMedia // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.purchasedPaidMedia|{}purchasedPaidMedia[0]
        final fun <get-purchasedPaidMedia>(): eu.vendeli.tgbot.types.media/PaidMediaPurchased // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.purchasedPaidMedia.<get-purchasedPaidMedia>|<get-purchasedPaidMedia>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.media/PaidMediaPurchased // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.media/PaidMediaPurchased = ...): eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.media.PaidMediaPurchased){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate { // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.boost/ChatBoostRemoved) // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.boost.ChatBoostRemoved){}[0]

    final val origin // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val removedChatBoost // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.removedChatBoost|{}removedChatBoost[0]
        final fun <get-removedChatBoost>(): eu.vendeli.tgbot.types.boost/ChatBoostRemoved // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.removedChatBoost.<get-removedChatBoost>|<get-removedChatBoost>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.boost/ChatBoostRemoved // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.boost/ChatBoostRemoved = ...): eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.boost.ChatBoostRemoved){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.internal/ShippingQueryUpdate : eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot.types.internal/UserReference { // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types/Update, eu.vendeli.tgbot.types.payment/ShippingQuery) // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.payment.ShippingQuery){}[0]

    final val origin // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.origin.<get-origin>|<get-origin>(){}[0]
    final val shippingQuery // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.shippingQuery|{}shippingQuery[0]
        final fun <get-shippingQuery>(): eu.vendeli.tgbot.types.payment/ShippingQuery // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.shippingQuery.<get-shippingQuery>|<get-shippingQuery>(){}[0]
    final val text // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.text.<get-text>|<get-text>(){}[0]
    final val updateId // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
    final val user // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.user.<get-user>|<get-user>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.payment/ShippingQuery // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types/Update = ..., eu.vendeli.tgbot.types.payment/ShippingQuery = ...): eu.vendeli.tgbot.types.internal/ShippingQueryUpdate // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.Update;eu.vendeli.tgbot.types.payment.ShippingQuery){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/ShippingQueryUpdate.toString|toString(){}[0]
}

final class eu.vendeli.tgbot.types.keyboard/CopyTextButton { // eu.vendeli.tgbot.types.keyboard/CopyTextButton|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.types.keyboard/CopyTextButton.<init>|<init>(kotlin.String){}[0]

    final val text // eu.vendeli.tgbot.types.keyboard/CopyTextButton.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.keyboard/CopyTextButton.text.<get-text>|<get-text>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.keyboard/CopyTextButton.component1|component1(){}[0]
    final fun copy(kotlin/String = ...): eu.vendeli.tgbot.types.keyboard/CopyTextButton // eu.vendeli.tgbot.types.keyboard/CopyTextButton.copy|copy(kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/CopyTextButton.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/CopyTextButton.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.keyboard/CopyTextButton.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/CopyTextButton> { // eu.vendeli.tgbot.types.keyboard/CopyTextButton.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/CopyTextButton.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/CopyTextButton.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/CopyTextButton.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/CopyTextButton // eu.vendeli.tgbot.types.keyboard/CopyTextButton.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/CopyTextButton) // eu.vendeli.tgbot.types.keyboard/CopyTextButton.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.CopyTextButton){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/CopyTextButton.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/CopyTextButton> // eu.vendeli.tgbot.types.keyboard/CopyTextButton.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.keyboard/ForceReply : eu.vendeli.tgbot.interfaces.marker/Keyboard { // eu.vendeli.tgbot.types.keyboard/ForceReply|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.keyboard/ForceReply.<init>|<init>(kotlin.String?;kotlin.Boolean?){}[0]

    final val forceReply // eu.vendeli.tgbot.types.keyboard/ForceReply.forceReply|{}forceReply[0]
        final fun <get-forceReply>(): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/ForceReply.forceReply.<get-forceReply>|<get-forceReply>(){}[0]
    final val inputFieldPlaceholder // eu.vendeli.tgbot.types.keyboard/ForceReply.inputFieldPlaceholder|{}inputFieldPlaceholder[0]
        final fun <get-inputFieldPlaceholder>(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/ForceReply.inputFieldPlaceholder.<get-inputFieldPlaceholder>|<get-inputFieldPlaceholder>(){}[0]
    final val selective // eu.vendeli.tgbot.types.keyboard/ForceReply.selective|{}selective[0]
        final fun <get-selective>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/ForceReply.selective.<get-selective>|<get-selective>(){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/ForceReply.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/ForceReply.component2|component2(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.keyboard/ForceReply // eu.vendeli.tgbot.types.keyboard/ForceReply.copy|copy(kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/ForceReply.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/ForceReply.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.keyboard/ForceReply.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/ForceReply> { // eu.vendeli.tgbot.types.keyboard/ForceReply.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/ForceReply.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/ForceReply.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/ForceReply.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/ForceReply // eu.vendeli.tgbot.types.keyboard/ForceReply.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/ForceReply) // eu.vendeli.tgbot.types.keyboard/ForceReply.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.ForceReply){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/ForceReply.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/ForceReply> // eu.vendeli.tgbot.types.keyboard/ForceReply.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton : eu.vendeli.tgbot.interfaces.marker/Button { // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.keyboard/WebAppInfo? = ..., eu.vendeli.tgbot.types.keyboard/LoginUrl? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat? = ..., eu.vendeli.tgbot.types.keyboard/CopyTextButton? = ..., eu.vendeli.tgbot.types.game/CallbackGame? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.<init>|<init>(kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.keyboard.WebAppInfo?;eu.vendeli.tgbot.types.keyboard.LoginUrl?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.inline.SwitchInlineQueryChosenChat?;eu.vendeli.tgbot.types.keyboard.CopyTextButton?;eu.vendeli.tgbot.types.game.CallbackGame?;kotlin.Boolean?){}[0]

    final val callbackData // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.callbackData|{}callbackData[0]
        final fun <get-callbackData>(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.callbackData.<get-callbackData>|<get-callbackData>(){}[0]
    final val callbackGame // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.callbackGame|{}callbackGame[0]
        final fun <get-callbackGame>(): eu.vendeli.tgbot.types.game/CallbackGame? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.callbackGame.<get-callbackGame>|<get-callbackGame>(){}[0]
    final val copyText // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.copyText|{}copyText[0]
        final fun <get-copyText>(): eu.vendeli.tgbot.types.keyboard/CopyTextButton? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.copyText.<get-copyText>|<get-copyText>(){}[0]
    final val loginUrl // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.loginUrl|{}loginUrl[0]
        final fun <get-loginUrl>(): eu.vendeli.tgbot.types.keyboard/LoginUrl? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.loginUrl.<get-loginUrl>|<get-loginUrl>(){}[0]
    final val pay // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.pay|{}pay[0]
        final fun <get-pay>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.pay.<get-pay>|<get-pay>(){}[0]
    final val switchInlineQuery // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.switchInlineQuery|{}switchInlineQuery[0]
        final fun <get-switchInlineQuery>(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.switchInlineQuery.<get-switchInlineQuery>|<get-switchInlineQuery>(){}[0]
    final val switchInlineQueryChosenChat // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.switchInlineQueryChosenChat|{}switchInlineQueryChosenChat[0]
        final fun <get-switchInlineQueryChosenChat>(): eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.switchInlineQueryChosenChat.<get-switchInlineQueryChosenChat>|<get-switchInlineQueryChosenChat>(){}[0]
    final val switchInlineQueryCurrentChat // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.switchInlineQueryCurrentChat|{}switchInlineQueryCurrentChat[0]
        final fun <get-switchInlineQueryCurrentChat>(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.switchInlineQueryCurrentChat.<get-switchInlineQueryCurrentChat>|<get-switchInlineQueryCurrentChat>(){}[0]
    final val text // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.text.<get-text>|<get-text>(){}[0]
    final val url // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.url|{}url[0]
        final fun <get-url>(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.url.<get-url>|<get-url>(){}[0]
    final val webApp // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.webApp|{}webApp[0]
        final fun <get-webApp>(): eu.vendeli.tgbot.types.keyboard/WebAppInfo? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.webApp.<get-webApp>|<get-webApp>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.component1|component1(){}[0]
    final fun component10(): eu.vendeli.tgbot.types.game/CallbackGame? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.component10|component10(){}[0]
    final fun component11(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.component11|component11(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types.keyboard/WebAppInfo? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types.keyboard/LoginUrl? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.component6|component6(){}[0]
    final fun component7(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.component7|component7(){}[0]
    final fun component8(): eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.component8|component8(){}[0]
    final fun component9(): eu.vendeli.tgbot.types.keyboard/CopyTextButton? // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.keyboard/WebAppInfo? = ..., eu.vendeli.tgbot.types.keyboard/LoginUrl? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat? = ..., eu.vendeli.tgbot.types.keyboard/CopyTextButton? = ..., eu.vendeli.tgbot.types.game/CallbackGame? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.copy|copy(kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.keyboard.WebAppInfo?;eu.vendeli.tgbot.types.keyboard.LoginUrl?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.inline.SwitchInlineQueryChosenChat?;eu.vendeli.tgbot.types.keyboard.CopyTextButton?;eu.vendeli.tgbot.types.game.CallbackGame?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton> { // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton) // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.InlineKeyboardButton){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton> // eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup : eu.vendeli.tgbot.interfaces.marker/Keyboard { // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup|null[0]
    constructor <init>(kotlin.collections/List<kotlin.collections/List<eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton>>) // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.<init>|<init>(kotlin.collections.List<kotlin.collections.List<eu.vendeli.tgbot.types.keyboard.InlineKeyboardButton>>){}[0]
    constructor <init>(kotlin/Array<out eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton>...) // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.<init>|<init>(kotlin.Array<out|eu.vendeli.tgbot.types.keyboard.InlineKeyboardButton>...){}[0]

    final val keyboard // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.keyboard|{}keyboard[0]
        final fun <get-keyboard>(): kotlin.collections/List<kotlin.collections/List<eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton>> // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.keyboard.<get-keyboard>|<get-keyboard>(){}[0]

    final fun addElement(eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton) // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.addElement|addElement(eu.vendeli.tgbot.types.keyboard.InlineKeyboardButton){}[0]
    final fun addElement(kotlin.collections/List<eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton>) // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.addElement|addElement(kotlin.collections.List<eu.vendeli.tgbot.types.keyboard.InlineKeyboardButton>){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup> { // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup) // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup> // eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.keyboard/KeyboardButton : eu.vendeli.tgbot.interfaces.marker/Button { // eu.vendeli.tgbot.types.keyboard/KeyboardButton|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers? = ..., eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType? = ..., eu.vendeli.tgbot.types.keyboard/WebAppInfo? = ...) // eu.vendeli.tgbot.types.keyboard/KeyboardButton.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.keyboard.KeyboardButtonRequestUsers?;eu.vendeli.tgbot.types.keyboard.KeyboardButtonRequestChat?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.keyboard.KeyboardButtonPollType?;eu.vendeli.tgbot.types.keyboard.WebAppInfo?){}[0]

    final val requestChat // eu.vendeli.tgbot.types.keyboard/KeyboardButton.requestChat|{}requestChat[0]
        final fun <get-requestChat>(): eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat? // eu.vendeli.tgbot.types.keyboard/KeyboardButton.requestChat.<get-requestChat>|<get-requestChat>(){}[0]
    final val requestContact // eu.vendeli.tgbot.types.keyboard/KeyboardButton.requestContact|{}requestContact[0]
        final fun <get-requestContact>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButton.requestContact.<get-requestContact>|<get-requestContact>(){}[0]
    final val requestLocation // eu.vendeli.tgbot.types.keyboard/KeyboardButton.requestLocation|{}requestLocation[0]
        final fun <get-requestLocation>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButton.requestLocation.<get-requestLocation>|<get-requestLocation>(){}[0]
    final val requestPoll // eu.vendeli.tgbot.types.keyboard/KeyboardButton.requestPoll|{}requestPoll[0]
        final fun <get-requestPoll>(): eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType? // eu.vendeli.tgbot.types.keyboard/KeyboardButton.requestPoll.<get-requestPoll>|<get-requestPoll>(){}[0]
    final val requestUsers // eu.vendeli.tgbot.types.keyboard/KeyboardButton.requestUsers|{}requestUsers[0]
        final fun <get-requestUsers>(): eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers? // eu.vendeli.tgbot.types.keyboard/KeyboardButton.requestUsers.<get-requestUsers>|<get-requestUsers>(){}[0]
    final val text // eu.vendeli.tgbot.types.keyboard/KeyboardButton.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.keyboard/KeyboardButton.text.<get-text>|<get-text>(){}[0]
    final val webApp // eu.vendeli.tgbot.types.keyboard/KeyboardButton.webApp|{}webApp[0]
        final fun <get-webApp>(): eu.vendeli.tgbot.types.keyboard/WebAppInfo? // eu.vendeli.tgbot.types.keyboard/KeyboardButton.webApp.<get-webApp>|<get-webApp>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.keyboard/KeyboardButton.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers? // eu.vendeli.tgbot.types.keyboard/KeyboardButton.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat? // eu.vendeli.tgbot.types.keyboard/KeyboardButton.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButton.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButton.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType? // eu.vendeli.tgbot.types.keyboard/KeyboardButton.component6|component6(){}[0]
    final fun component7(): eu.vendeli.tgbot.types.keyboard/WebAppInfo? // eu.vendeli.tgbot.types.keyboard/KeyboardButton.component7|component7(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers? = ..., eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType? = ..., eu.vendeli.tgbot.types.keyboard/WebAppInfo? = ...): eu.vendeli.tgbot.types.keyboard/KeyboardButton // eu.vendeli.tgbot.types.keyboard/KeyboardButton.copy|copy(kotlin.String;eu.vendeli.tgbot.types.keyboard.KeyboardButtonRequestUsers?;eu.vendeli.tgbot.types.keyboard.KeyboardButtonRequestChat?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.keyboard.KeyboardButtonPollType?;eu.vendeli.tgbot.types.keyboard.WebAppInfo?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/KeyboardButton.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/KeyboardButton.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.keyboard/KeyboardButton.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/KeyboardButton> { // eu.vendeli.tgbot.types.keyboard/KeyboardButton.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/KeyboardButton.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/KeyboardButton.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/KeyboardButton.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/KeyboardButton // eu.vendeli.tgbot.types.keyboard/KeyboardButton.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/KeyboardButton) // eu.vendeli.tgbot.types.keyboard/KeyboardButton.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.KeyboardButton){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/KeyboardButton.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/KeyboardButton> // eu.vendeli.tgbot.types.keyboard/KeyboardButton.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType { // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType|null[0]
    constructor <init>(eu.vendeli.tgbot.types.poll/PollType? = ...) // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.<init>|<init>(eu.vendeli.tgbot.types.poll.PollType?){}[0]

    final val type // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.type|{}type[0]
        final fun <get-type>(): eu.vendeli.tgbot.types.poll/PollType? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.type.<get-type>|<get-type>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.poll/PollType? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.component1|component1(){}[0]
    final fun copy(eu.vendeli.tgbot.types.poll/PollType? = ...): eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.copy|copy(eu.vendeli.tgbot.types.poll.PollType?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType> { // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType) // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.KeyboardButtonPollType){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType> // eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat { // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat|null[0]
    constructor <init>(kotlin/Int, kotlin/Boolean, kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.chat/ChatAdministratorRights? = ..., eu.vendeli.tgbot.types.chat/ChatAdministratorRights? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.<init>|<init>(kotlin.Int;kotlin.Boolean;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.chat.ChatAdministratorRights?;eu.vendeli.tgbot.types.chat.ChatAdministratorRights?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final val botAdministratorRights // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.botAdministratorRights|{}botAdministratorRights[0]
        final fun <get-botAdministratorRights>(): eu.vendeli.tgbot.types.chat/ChatAdministratorRights? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.botAdministratorRights.<get-botAdministratorRights>|<get-botAdministratorRights>(){}[0]
    final val botIsMember // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.botIsMember|{}botIsMember[0]
        final fun <get-botIsMember>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.botIsMember.<get-botIsMember>|<get-botIsMember>(){}[0]
    final val chatHasUsername // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.chatHasUsername|{}chatHasUsername[0]
        final fun <get-chatHasUsername>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.chatHasUsername.<get-chatHasUsername>|<get-chatHasUsername>(){}[0]
    final val chatIsChannel // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.chatIsChannel|{}chatIsChannel[0]
        final fun <get-chatIsChannel>(): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.chatIsChannel.<get-chatIsChannel>|<get-chatIsChannel>(){}[0]
    final val chatIsCreated // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.chatIsCreated|{}chatIsCreated[0]
        final fun <get-chatIsCreated>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.chatIsCreated.<get-chatIsCreated>|<get-chatIsCreated>(){}[0]
    final val chatIsForum // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.chatIsForum|{}chatIsForum[0]
        final fun <get-chatIsForum>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.chatIsForum.<get-chatIsForum>|<get-chatIsForum>(){}[0]
    final val requestId // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.requestId|{}requestId[0]
        final fun <get-requestId>(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.requestId.<get-requestId>|<get-requestId>(){}[0]
    final val requestPhoto // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.requestPhoto|{}requestPhoto[0]
        final fun <get-requestPhoto>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.requestPhoto.<get-requestPhoto>|<get-requestPhoto>(){}[0]
    final val requestTitle // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.requestTitle|{}requestTitle[0]
        final fun <get-requestTitle>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.requestTitle.<get-requestTitle>|<get-requestTitle>(){}[0]
    final val requestUsername // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.requestUsername|{}requestUsername[0]
        final fun <get-requestUsername>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.requestUsername.<get-requestUsername>|<get-requestUsername>(){}[0]
    final val userAdministratorRights // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.userAdministratorRights|{}userAdministratorRights[0]
        final fun <get-userAdministratorRights>(): eu.vendeli.tgbot.types.chat/ChatAdministratorRights? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.userAdministratorRights.<get-userAdministratorRights>|<get-userAdministratorRights>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.component10|component10(){}[0]
    final fun component11(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.component11|component11(){}[0]
    final fun component2(): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types.chat/ChatAdministratorRights? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.component6|component6(){}[0]
    final fun component7(): eu.vendeli.tgbot.types.chat/ChatAdministratorRights? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.component9|component9(){}[0]
    final fun copy(kotlin/Int = ..., kotlin/Boolean = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.chat/ChatAdministratorRights? = ..., eu.vendeli.tgbot.types.chat/ChatAdministratorRights? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.copy|copy(kotlin.Int;kotlin.Boolean;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.chat.ChatAdministratorRights?;eu.vendeli.tgbot.types.chat.ChatAdministratorRights?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat> { // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat) // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.KeyboardButtonRequestChat){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat> // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers { // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers|null[0]
    constructor <init>(kotlin/Int, kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.<init>|<init>(kotlin.Int;kotlin.Boolean?;kotlin.Boolean?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final val maxQuantity // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.maxQuantity|{}maxQuantity[0]
        final fun <get-maxQuantity>(): kotlin/Int? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.maxQuantity.<get-maxQuantity>|<get-maxQuantity>(){}[0]
    final val requestId // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.requestId|{}requestId[0]
        final fun <get-requestId>(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.requestId.<get-requestId>|<get-requestId>(){}[0]
    final val requestName // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.requestName|{}requestName[0]
        final fun <get-requestName>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.requestName.<get-requestName>|<get-requestName>(){}[0]
    final val requestPhoto // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.requestPhoto|{}requestPhoto[0]
        final fun <get-requestPhoto>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.requestPhoto.<get-requestPhoto>|<get-requestPhoto>(){}[0]
    final val requestUsername // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.requestUsername|{}requestUsername[0]
        final fun <get-requestUsername>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.requestUsername.<get-requestUsername>|<get-requestUsername>(){}[0]
    final val userIsBot // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.userIsBot|{}userIsBot[0]
        final fun <get-userIsBot>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.userIsBot.<get-userIsBot>|<get-userIsBot>(){}[0]
    final val userIsPremium // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.userIsPremium|{}userIsPremium[0]
        final fun <get-userIsPremium>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.userIsPremium.<get-userIsPremium>|<get-userIsPremium>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.component7|component7(){}[0]
    final fun copy(kotlin/Int = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.copy|copy(kotlin.Int;kotlin.Boolean?;kotlin.Boolean?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers> { // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers) // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.KeyboardButtonRequestUsers){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers> // eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.keyboard/LoginUrl { // eu.vendeli.tgbot.types.keyboard/LoginUrl|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.keyboard/LoginUrl.<init>|<init>(kotlin.String;kotlin.String?;kotlin.String?;kotlin.Boolean?){}[0]

    final val botUsername // eu.vendeli.tgbot.types.keyboard/LoginUrl.botUsername|{}botUsername[0]
        final fun <get-botUsername>(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/LoginUrl.botUsername.<get-botUsername>|<get-botUsername>(){}[0]
    final val forwardText // eu.vendeli.tgbot.types.keyboard/LoginUrl.forwardText|{}forwardText[0]
        final fun <get-forwardText>(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/LoginUrl.forwardText.<get-forwardText>|<get-forwardText>(){}[0]
    final val requestWriteAccess // eu.vendeli.tgbot.types.keyboard/LoginUrl.requestWriteAccess|{}requestWriteAccess[0]
        final fun <get-requestWriteAccess>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/LoginUrl.requestWriteAccess.<get-requestWriteAccess>|<get-requestWriteAccess>(){}[0]
    final val url // eu.vendeli.tgbot.types.keyboard/LoginUrl.url|{}url[0]
        final fun <get-url>(): kotlin/String // eu.vendeli.tgbot.types.keyboard/LoginUrl.url.<get-url>|<get-url>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.keyboard/LoginUrl.component1|component1(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/LoginUrl.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/LoginUrl.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/LoginUrl.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.keyboard/LoginUrl // eu.vendeli.tgbot.types.keyboard/LoginUrl.copy|copy(kotlin.String;kotlin.String?;kotlin.String?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/LoginUrl.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/LoginUrl.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.keyboard/LoginUrl.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/LoginUrl> { // eu.vendeli.tgbot.types.keyboard/LoginUrl.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/LoginUrl.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/LoginUrl.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/LoginUrl.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/LoginUrl // eu.vendeli.tgbot.types.keyboard/LoginUrl.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/LoginUrl) // eu.vendeli.tgbot.types.keyboard/LoginUrl.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.LoginUrl){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/LoginUrl.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/LoginUrl> // eu.vendeli.tgbot.types.keyboard/LoginUrl.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup : eu.vendeli.tgbot.interfaces.marker/Keyboard { // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup|null[0]
    constructor <init>(kotlin.collections/List<kotlin.collections/List<eu.vendeli.tgbot.types.keyboard/KeyboardButton>>, kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.<init>|<init>(kotlin.collections.List<kotlin.collections.List<eu.vendeli.tgbot.types.keyboard.KeyboardButton>>;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    constructor <init>(kotlin/Array<out eu.vendeli.tgbot.types.keyboard/KeyboardButton>...) // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.<init>|<init>(kotlin.Array<out|eu.vendeli.tgbot.types.keyboard.KeyboardButton>...){}[0]
    constructor <init>(kotlin/Array<out kotlin.collections/List<eu.vendeli.tgbot.types.keyboard/KeyboardButton>>...) // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.<init>|<init>(kotlin.Array<out|kotlin.collections.List<eu.vendeli.tgbot.types.keyboard.KeyboardButton>>...){}[0]

    final var inputFieldPlaceholder // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.inputFieldPlaceholder|{}inputFieldPlaceholder[0]
        final fun <get-inputFieldPlaceholder>(): kotlin/String? // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.inputFieldPlaceholder.<get-inputFieldPlaceholder>|<get-inputFieldPlaceholder>(){}[0]
        final fun <set-inputFieldPlaceholder>(kotlin/String?) // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.inputFieldPlaceholder.<set-inputFieldPlaceholder>|<set-inputFieldPlaceholder>(kotlin.String?){}[0]
    final var isPersistent // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.isPersistent|{}isPersistent[0]
        final fun <get-isPersistent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.isPersistent.<get-isPersistent>|<get-isPersistent>(){}[0]
        final fun <set-isPersistent>(kotlin/Boolean?) // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.isPersistent.<set-isPersistent>|<set-isPersistent>(kotlin.Boolean?){}[0]
    final var oneTimeKeyboard // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.oneTimeKeyboard|{}oneTimeKeyboard[0]
        final fun <get-oneTimeKeyboard>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.oneTimeKeyboard.<get-oneTimeKeyboard>|<get-oneTimeKeyboard>(){}[0]
        final fun <set-oneTimeKeyboard>(kotlin/Boolean?) // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.oneTimeKeyboard.<set-oneTimeKeyboard>|<set-oneTimeKeyboard>(kotlin.Boolean?){}[0]
    final var resizeKeyboard // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.resizeKeyboard|{}resizeKeyboard[0]
        final fun <get-resizeKeyboard>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.resizeKeyboard.<get-resizeKeyboard>|<get-resizeKeyboard>(){}[0]
        final fun <set-resizeKeyboard>(kotlin/Boolean?) // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.resizeKeyboard.<set-resizeKeyboard>|<set-resizeKeyboard>(kotlin.Boolean?){}[0]
    final var selective // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.selective|{}selective[0]
        final fun <get-selective>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.selective.<get-selective>|<get-selective>(){}[0]
        final fun <set-selective>(kotlin/Boolean?) // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.selective.<set-selective>|<set-selective>(kotlin.Boolean?){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup> { // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup) // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.ReplyKeyboardMarkup){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup> // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove : eu.vendeli.tgbot.interfaces.marker/Keyboard { // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove|null[0]
    constructor <init>(kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.<init>|<init>(kotlin.Boolean?){}[0]

    final val removeKeyboard // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.removeKeyboard|{}removeKeyboard[0]
        final fun <get-removeKeyboard>(): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.removeKeyboard.<get-removeKeyboard>|<get-removeKeyboard>(){}[0]
    final val selective // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.selective|{}selective[0]
        final fun <get-selective>(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.selective.<get-selective>|<get-selective>(){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.component1|component1(){}[0]
    final fun copy(kotlin/Boolean? = ...): eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.copy|copy(kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove> { // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove) // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.ReplyKeyboardRemove){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove> // eu.vendeli.tgbot.types.keyboard/ReplyKeyboardRemove.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.keyboard/WebAppData { // eu.vendeli.tgbot.types.keyboard/WebAppData|null[0]
    constructor <init>(kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.keyboard/WebAppData.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val buttonText // eu.vendeli.tgbot.types.keyboard/WebAppData.buttonText|{}buttonText[0]
        final fun <get-buttonText>(): kotlin/String // eu.vendeli.tgbot.types.keyboard/WebAppData.buttonText.<get-buttonText>|<get-buttonText>(){}[0]
    final val data // eu.vendeli.tgbot.types.keyboard/WebAppData.data|{}data[0]
        final fun <get-data>(): kotlin/String // eu.vendeli.tgbot.types.keyboard/WebAppData.data.<get-data>|<get-data>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.keyboard/WebAppData.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.keyboard/WebAppData.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.keyboard/WebAppData // eu.vendeli.tgbot.types.keyboard/WebAppData.copy|copy(kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/WebAppData.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/WebAppData.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.keyboard/WebAppData.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/WebAppData> { // eu.vendeli.tgbot.types.keyboard/WebAppData.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/WebAppData.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/WebAppData.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/WebAppData.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/WebAppData // eu.vendeli.tgbot.types.keyboard/WebAppData.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/WebAppData) // eu.vendeli.tgbot.types.keyboard/WebAppData.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.WebAppData){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/WebAppData.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/WebAppData> // eu.vendeli.tgbot.types.keyboard/WebAppData.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.keyboard/WebAppInfo { // eu.vendeli.tgbot.types.keyboard/WebAppInfo|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.types.keyboard/WebAppInfo.<init>|<init>(kotlin.String){}[0]

    final val url // eu.vendeli.tgbot.types.keyboard/WebAppInfo.url|{}url[0]
        final fun <get-url>(): kotlin/String // eu.vendeli.tgbot.types.keyboard/WebAppInfo.url.<get-url>|<get-url>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.keyboard/WebAppInfo.component1|component1(){}[0]
    final fun copy(kotlin/String = ...): eu.vendeli.tgbot.types.keyboard/WebAppInfo // eu.vendeli.tgbot.types.keyboard/WebAppInfo.copy|copy(kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/WebAppInfo.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/WebAppInfo.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.keyboard/WebAppInfo.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/WebAppInfo> { // eu.vendeli.tgbot.types.keyboard/WebAppInfo.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.keyboard/WebAppInfo.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/WebAppInfo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/WebAppInfo.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/WebAppInfo // eu.vendeli.tgbot.types.keyboard/WebAppInfo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/WebAppInfo) // eu.vendeli.tgbot.types.keyboard/WebAppInfo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.WebAppInfo){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.keyboard/WebAppInfo.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/WebAppInfo> // eu.vendeli.tgbot.types.keyboard/WebAppInfo.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/Animation { // eu.vendeli.tgbot.types.media/Animation|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Int, kotlin/Int, kotlin/Int, eu.vendeli.tgbot.types.media/PhotoSize? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Long? = ...) // eu.vendeli.tgbot.types.media/Animation.<init>|<init>(kotlin.String;kotlin.String;kotlin.Int;kotlin.Int;kotlin.Int;eu.vendeli.tgbot.types.media.PhotoSize?;kotlin.String?;kotlin.String?;kotlin.Long?){}[0]

    final val duration // eu.vendeli.tgbot.types.media/Animation.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int // eu.vendeli.tgbot.types.media/Animation.duration.<get-duration>|<get-duration>(){}[0]
    final val fileId // eu.vendeli.tgbot.types.media/Animation.fileId|{}fileId[0]
        final fun <get-fileId>(): kotlin/String // eu.vendeli.tgbot.types.media/Animation.fileId.<get-fileId>|<get-fileId>(){}[0]
    final val fileName // eu.vendeli.tgbot.types.media/Animation.fileName|{}fileName[0]
        final fun <get-fileName>(): kotlin/String? // eu.vendeli.tgbot.types.media/Animation.fileName.<get-fileName>|<get-fileName>(){}[0]
    final val fileSize // eu.vendeli.tgbot.types.media/Animation.fileSize|{}fileSize[0]
        final fun <get-fileSize>(): kotlin/Long? // eu.vendeli.tgbot.types.media/Animation.fileSize.<get-fileSize>|<get-fileSize>(){}[0]
    final val fileUniqueId // eu.vendeli.tgbot.types.media/Animation.fileUniqueId|{}fileUniqueId[0]
        final fun <get-fileUniqueId>(): kotlin/String // eu.vendeli.tgbot.types.media/Animation.fileUniqueId.<get-fileUniqueId>|<get-fileUniqueId>(){}[0]
    final val height // eu.vendeli.tgbot.types.media/Animation.height|{}height[0]
        final fun <get-height>(): kotlin/Int // eu.vendeli.tgbot.types.media/Animation.height.<get-height>|<get-height>(){}[0]
    final val mimeType // eu.vendeli.tgbot.types.media/Animation.mimeType|{}mimeType[0]
        final fun <get-mimeType>(): kotlin/String? // eu.vendeli.tgbot.types.media/Animation.mimeType.<get-mimeType>|<get-mimeType>(){}[0]
    final val thumbnail // eu.vendeli.tgbot.types.media/Animation.thumbnail|{}thumbnail[0]
        final fun <get-thumbnail>(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/Animation.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
    final val width // eu.vendeli.tgbot.types.media/Animation.width|{}width[0]
        final fun <get-width>(): kotlin/Int // eu.vendeli.tgbot.types.media/Animation.width.<get-width>|<get-width>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.media/Animation.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.media/Animation.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types.media/Animation.component3|component3(){}[0]
    final fun component4(): kotlin/Int // eu.vendeli.tgbot.types.media/Animation.component4|component4(){}[0]
    final fun component5(): kotlin/Int // eu.vendeli.tgbot.types.media/Animation.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/Animation.component6|component6(){}[0]
    final fun component7(): kotlin/String? // eu.vendeli.tgbot.types.media/Animation.component7|component7(){}[0]
    final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.media/Animation.component8|component8(){}[0]
    final fun component9(): kotlin/Long? // eu.vendeli.tgbot.types.media/Animation.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ..., eu.vendeli.tgbot.types.media/PhotoSize? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Long? = ...): eu.vendeli.tgbot.types.media/Animation // eu.vendeli.tgbot.types.media/Animation.copy|copy(kotlin.String;kotlin.String;kotlin.Int;kotlin.Int;kotlin.Int;eu.vendeli.tgbot.types.media.PhotoSize?;kotlin.String?;kotlin.String?;kotlin.Long?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/Animation.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/Animation.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/Animation.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/Animation> { // eu.vendeli.tgbot.types.media/Animation.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/Animation.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/Animation.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/Animation.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/Animation // eu.vendeli.tgbot.types.media/Animation.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/Animation) // eu.vendeli.tgbot.types.media/Animation.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.Animation){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/Animation.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/Animation> // eu.vendeli.tgbot.types.media/Animation.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/Audio { // eu.vendeli.tgbot.types.media/Audio|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Int, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Long? = ..., eu.vendeli.tgbot.types.media/PhotoSize? = ...) // eu.vendeli.tgbot.types.media/Audio.<init>|<init>(kotlin.String;kotlin.String;kotlin.Int;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Long?;eu.vendeli.tgbot.types.media.PhotoSize?){}[0]

    final val duration // eu.vendeli.tgbot.types.media/Audio.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int // eu.vendeli.tgbot.types.media/Audio.duration.<get-duration>|<get-duration>(){}[0]
    final val fileId // eu.vendeli.tgbot.types.media/Audio.fileId|{}fileId[0]
        final fun <get-fileId>(): kotlin/String // eu.vendeli.tgbot.types.media/Audio.fileId.<get-fileId>|<get-fileId>(){}[0]
    final val fileName // eu.vendeli.tgbot.types.media/Audio.fileName|{}fileName[0]
        final fun <get-fileName>(): kotlin/String? // eu.vendeli.tgbot.types.media/Audio.fileName.<get-fileName>|<get-fileName>(){}[0]
    final val fileSize // eu.vendeli.tgbot.types.media/Audio.fileSize|{}fileSize[0]
        final fun <get-fileSize>(): kotlin/Long? // eu.vendeli.tgbot.types.media/Audio.fileSize.<get-fileSize>|<get-fileSize>(){}[0]
    final val fileUniqueId // eu.vendeli.tgbot.types.media/Audio.fileUniqueId|{}fileUniqueId[0]
        final fun <get-fileUniqueId>(): kotlin/String // eu.vendeli.tgbot.types.media/Audio.fileUniqueId.<get-fileUniqueId>|<get-fileUniqueId>(){}[0]
    final val mimeType // eu.vendeli.tgbot.types.media/Audio.mimeType|{}mimeType[0]
        final fun <get-mimeType>(): kotlin/String? // eu.vendeli.tgbot.types.media/Audio.mimeType.<get-mimeType>|<get-mimeType>(){}[0]
    final val performer // eu.vendeli.tgbot.types.media/Audio.performer|{}performer[0]
        final fun <get-performer>(): kotlin/String? // eu.vendeli.tgbot.types.media/Audio.performer.<get-performer>|<get-performer>(){}[0]
    final val thumbnail // eu.vendeli.tgbot.types.media/Audio.thumbnail|{}thumbnail[0]
        final fun <get-thumbnail>(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/Audio.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
    final val title // eu.vendeli.tgbot.types.media/Audio.title|{}title[0]
        final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.media/Audio.title.<get-title>|<get-title>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.media/Audio.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.media/Audio.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types.media/Audio.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.media/Audio.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.media/Audio.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.media/Audio.component6|component6(){}[0]
    final fun component7(): kotlin/String? // eu.vendeli.tgbot.types.media/Audio.component7|component7(){}[0]
    final fun component8(): kotlin/Long? // eu.vendeli.tgbot.types.media/Audio.component8|component8(){}[0]
    final fun component9(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/Audio.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Int = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Long? = ..., eu.vendeli.tgbot.types.media/PhotoSize? = ...): eu.vendeli.tgbot.types.media/Audio // eu.vendeli.tgbot.types.media/Audio.copy|copy(kotlin.String;kotlin.String;kotlin.Int;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Long?;eu.vendeli.tgbot.types.media.PhotoSize?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/Audio.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/Audio.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/Audio.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/Audio> { // eu.vendeli.tgbot.types.media/Audio.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/Audio.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/Audio.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/Audio.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/Audio // eu.vendeli.tgbot.types.media/Audio.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/Audio) // eu.vendeli.tgbot.types.media/Audio.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.Audio){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/Audio.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/Audio> // eu.vendeli.tgbot.types.media/Audio.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/Document { // eu.vendeli.tgbot.types.media/Document|null[0]
    constructor <init>(kotlin/String, kotlin/String, eu.vendeli.tgbot.types.media/PhotoSize? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Long? = ...) // eu.vendeli.tgbot.types.media/Document.<init>|<init>(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.media.PhotoSize?;kotlin.String?;kotlin.String?;kotlin.Long?){}[0]

    final val fileId // eu.vendeli.tgbot.types.media/Document.fileId|{}fileId[0]
        final fun <get-fileId>(): kotlin/String // eu.vendeli.tgbot.types.media/Document.fileId.<get-fileId>|<get-fileId>(){}[0]
    final val fileName // eu.vendeli.tgbot.types.media/Document.fileName|{}fileName[0]
        final fun <get-fileName>(): kotlin/String? // eu.vendeli.tgbot.types.media/Document.fileName.<get-fileName>|<get-fileName>(){}[0]
    final val fileSize // eu.vendeli.tgbot.types.media/Document.fileSize|{}fileSize[0]
        final fun <get-fileSize>(): kotlin/Long? // eu.vendeli.tgbot.types.media/Document.fileSize.<get-fileSize>|<get-fileSize>(){}[0]
    final val fileUniqueId // eu.vendeli.tgbot.types.media/Document.fileUniqueId|{}fileUniqueId[0]
        final fun <get-fileUniqueId>(): kotlin/String // eu.vendeli.tgbot.types.media/Document.fileUniqueId.<get-fileUniqueId>|<get-fileUniqueId>(){}[0]
    final val mimeType // eu.vendeli.tgbot.types.media/Document.mimeType|{}mimeType[0]
        final fun <get-mimeType>(): kotlin/String? // eu.vendeli.tgbot.types.media/Document.mimeType.<get-mimeType>|<get-mimeType>(){}[0]
    final val thumbnail // eu.vendeli.tgbot.types.media/Document.thumbnail|{}thumbnail[0]
        final fun <get-thumbnail>(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/Document.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.media/Document.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.media/Document.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/Document.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.media/Document.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.media/Document.component5|component5(){}[0]
    final fun component6(): kotlin/Long? // eu.vendeli.tgbot.types.media/Document.component6|component6(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., eu.vendeli.tgbot.types.media/PhotoSize? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Long? = ...): eu.vendeli.tgbot.types.media/Document // eu.vendeli.tgbot.types.media/Document.copy|copy(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.media.PhotoSize?;kotlin.String?;kotlin.String?;kotlin.Long?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/Document.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/Document.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/Document.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/Document> { // eu.vendeli.tgbot.types.media/Document.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/Document.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/Document.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/Document.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/Document // eu.vendeli.tgbot.types.media/Document.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/Document) // eu.vendeli.tgbot.types.media/Document.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.Document){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/Document.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/Document> // eu.vendeli.tgbot.types.media/Document.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/File { // eu.vendeli.tgbot.types.media/File|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Long? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types.media/File.<init>|<init>(kotlin.String;kotlin.String;kotlin.Long?;kotlin.String?){}[0]

    final val fileId // eu.vendeli.tgbot.types.media/File.fileId|{}fileId[0]
        final fun <get-fileId>(): kotlin/String // eu.vendeli.tgbot.types.media/File.fileId.<get-fileId>|<get-fileId>(){}[0]
    final val filePath // eu.vendeli.tgbot.types.media/File.filePath|{}filePath[0]
        final fun <get-filePath>(): kotlin/String? // eu.vendeli.tgbot.types.media/File.filePath.<get-filePath>|<get-filePath>(){}[0]
    final val fileSize // eu.vendeli.tgbot.types.media/File.fileSize|{}fileSize[0]
        final fun <get-fileSize>(): kotlin/Long? // eu.vendeli.tgbot.types.media/File.fileSize.<get-fileSize>|<get-fileSize>(){}[0]
    final val fileUniqueId // eu.vendeli.tgbot.types.media/File.fileUniqueId|{}fileUniqueId[0]
        final fun <get-fileUniqueId>(): kotlin/String // eu.vendeli.tgbot.types.media/File.fileUniqueId.<get-fileUniqueId>|<get-fileUniqueId>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.media/File.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.media/File.component2|component2(){}[0]
    final fun component3(): kotlin/Long? // eu.vendeli.tgbot.types.media/File.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.media/File.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Long? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.media/File // eu.vendeli.tgbot.types.media/File.copy|copy(kotlin.String;kotlin.String;kotlin.Long?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/File.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/File.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/File.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/File> { // eu.vendeli.tgbot.types.media/File.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/File.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/File.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/File.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/File // eu.vendeli.tgbot.types.media/File.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/File) // eu.vendeli.tgbot.types.media/File.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.File){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/File.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/File> // eu.vendeli.tgbot.types.media/File.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/InputSticker { // eu.vendeli.tgbot.types.media/InputSticker|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile, eu.vendeli.tgbot.types.media/StickerFormat, kotlin.collections/List<kotlin/String>, eu.vendeli.tgbot.types.media/MaskPosition? = ..., kotlin.collections/List<kotlin/String>? = ...) // eu.vendeli.tgbot.types.media/InputSticker.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile;eu.vendeli.tgbot.types.media.StickerFormat;kotlin.collections.List<kotlin.String>;eu.vendeli.tgbot.types.media.MaskPosition?;kotlin.collections.List<kotlin.String>?){}[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/InputFile, eu.vendeli.tgbot.types.media/StickerFormat, kotlin.collections/List<kotlin/String>, eu.vendeli.tgbot.types.media/MaskPosition? = ..., kotlin.collections/List<kotlin/String>? = ...) // eu.vendeli.tgbot.types.media/InputSticker.<init>|<init>(eu.vendeli.tgbot.types.internal.InputFile;eu.vendeli.tgbot.types.media.StickerFormat;kotlin.collections.List<kotlin.String>;eu.vendeli.tgbot.types.media.MaskPosition?;kotlin.collections.List<kotlin.String>?){}[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types.media/StickerFormat, kotlin.collections/List<kotlin/String>, eu.vendeli.tgbot.types.media/MaskPosition? = ..., kotlin.collections/List<kotlin/String>? = ...) // eu.vendeli.tgbot.types.media/InputSticker.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.media.StickerFormat;kotlin.collections.List<kotlin.String>;eu.vendeli.tgbot.types.media.MaskPosition?;kotlin.collections.List<kotlin.String>?){}[0]

    final val emojiList // eu.vendeli.tgbot.types.media/InputSticker.emojiList|{}emojiList[0]
        final fun <get-emojiList>(): kotlin.collections/List<kotlin/String> // eu.vendeli.tgbot.types.media/InputSticker.emojiList.<get-emojiList>|<get-emojiList>(){}[0]
    final val format // eu.vendeli.tgbot.types.media/InputSticker.format|{}format[0]
        final fun <get-format>(): eu.vendeli.tgbot.types.media/StickerFormat // eu.vendeli.tgbot.types.media/InputSticker.format.<get-format>|<get-format>(){}[0]
    final val keywords // eu.vendeli.tgbot.types.media/InputSticker.keywords|{}keywords[0]
        final fun <get-keywords>(): kotlin.collections/List<kotlin/String>? // eu.vendeli.tgbot.types.media/InputSticker.keywords.<get-keywords>|<get-keywords>(){}[0]
    final val maskPosition // eu.vendeli.tgbot.types.media/InputSticker.maskPosition|{}maskPosition[0]
        final fun <get-maskPosition>(): eu.vendeli.tgbot.types.media/MaskPosition? // eu.vendeli.tgbot.types.media/InputSticker.maskPosition.<get-maskPosition>|<get-maskPosition>(){}[0]

    final var sticker // eu.vendeli.tgbot.types.media/InputSticker.sticker|{}sticker[0]
        final fun <get-sticker>(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputSticker.sticker.<get-sticker>|<get-sticker>(){}[0]
        final fun <set-sticker>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.types.media/InputSticker.sticker.<set-sticker>|<set-sticker>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]

    final fun component1(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputSticker.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.media/StickerFormat // eu.vendeli.tgbot.types.media/InputSticker.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<kotlin/String> // eu.vendeli.tgbot.types.media/InputSticker.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types.media/MaskPosition? // eu.vendeli.tgbot.types.media/InputSticker.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<kotlin/String>? // eu.vendeli.tgbot.types.media/InputSticker.component5|component5(){}[0]
    final fun copy(eu.vendeli.tgbot.types.internal/ImplicitFile = ..., eu.vendeli.tgbot.types.media/StickerFormat = ..., kotlin.collections/List<kotlin/String> = ..., eu.vendeli.tgbot.types.media/MaskPosition? = ..., kotlin.collections/List<kotlin/String>? = ...): eu.vendeli.tgbot.types.media/InputSticker // eu.vendeli.tgbot.types.media/InputSticker.copy|copy(eu.vendeli.tgbot.types.internal.ImplicitFile;eu.vendeli.tgbot.types.media.StickerFormat;kotlin.collections.List<kotlin.String>;eu.vendeli.tgbot.types.media.MaskPosition?;kotlin.collections.List<kotlin.String>?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/InputSticker.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/InputSticker.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/InputSticker.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/InputSticker> { // eu.vendeli.tgbot.types.media/InputSticker.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/InputSticker.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/InputSticker.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/InputSticker.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/InputSticker // eu.vendeli.tgbot.types.media/InputSticker.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/InputSticker) // eu.vendeli.tgbot.types.media/InputSticker.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.InputSticker){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/InputSticker.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.media/InputSticker.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/InputSticker> // eu.vendeli.tgbot.types.media/InputSticker.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/MaskPosition { // eu.vendeli.tgbot.types.media/MaskPosition|null[0]
    constructor <init>(eu.vendeli.tgbot.types.media/MaskPoint, kotlin/Float, kotlin/Float, kotlin/Float) // eu.vendeli.tgbot.types.media/MaskPosition.<init>|<init>(eu.vendeli.tgbot.types.media.MaskPoint;kotlin.Float;kotlin.Float;kotlin.Float){}[0]

    final val point // eu.vendeli.tgbot.types.media/MaskPosition.point|{}point[0]
        final fun <get-point>(): eu.vendeli.tgbot.types.media/MaskPoint // eu.vendeli.tgbot.types.media/MaskPosition.point.<get-point>|<get-point>(){}[0]
    final val scale // eu.vendeli.tgbot.types.media/MaskPosition.scale|{}scale[0]
        final fun <get-scale>(): kotlin/Float // eu.vendeli.tgbot.types.media/MaskPosition.scale.<get-scale>|<get-scale>(){}[0]
    final val xShift // eu.vendeli.tgbot.types.media/MaskPosition.xShift|{}xShift[0]
        final fun <get-xShift>(): kotlin/Float // eu.vendeli.tgbot.types.media/MaskPosition.xShift.<get-xShift>|<get-xShift>(){}[0]
    final val yShift // eu.vendeli.tgbot.types.media/MaskPosition.yShift|{}yShift[0]
        final fun <get-yShift>(): kotlin/Float // eu.vendeli.tgbot.types.media/MaskPosition.yShift.<get-yShift>|<get-yShift>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.media/MaskPoint // eu.vendeli.tgbot.types.media/MaskPosition.component1|component1(){}[0]
    final fun component2(): kotlin/Float // eu.vendeli.tgbot.types.media/MaskPosition.component2|component2(){}[0]
    final fun component3(): kotlin/Float // eu.vendeli.tgbot.types.media/MaskPosition.component3|component3(){}[0]
    final fun component4(): kotlin/Float // eu.vendeli.tgbot.types.media/MaskPosition.component4|component4(){}[0]
    final fun copy(eu.vendeli.tgbot.types.media/MaskPoint = ..., kotlin/Float = ..., kotlin/Float = ..., kotlin/Float = ...): eu.vendeli.tgbot.types.media/MaskPosition // eu.vendeli.tgbot.types.media/MaskPosition.copy|copy(eu.vendeli.tgbot.types.media.MaskPoint;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/MaskPosition.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/MaskPosition.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/MaskPosition.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/MaskPosition> { // eu.vendeli.tgbot.types.media/MaskPosition.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/MaskPosition.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/MaskPosition.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/MaskPosition.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/MaskPosition // eu.vendeli.tgbot.types.media/MaskPosition.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/MaskPosition) // eu.vendeli.tgbot.types.media/MaskPosition.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.MaskPosition){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/MaskPosition.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.media/MaskPosition.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/MaskPosition> // eu.vendeli.tgbot.types.media/MaskPosition.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/PaidMediaInfo { // eu.vendeli.tgbot.types.media/PaidMediaInfo|null[0]
    constructor <init>(kotlin/Int, kotlin.collections/List<eu.vendeli.tgbot.types.media/PaidMedia>) // eu.vendeli.tgbot.types.media/PaidMediaInfo.<init>|<init>(kotlin.Int;kotlin.collections.List<eu.vendeli.tgbot.types.media.PaidMedia>){}[0]

    final val paidMedia // eu.vendeli.tgbot.types.media/PaidMediaInfo.paidMedia|{}paidMedia[0]
        final fun <get-paidMedia>(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PaidMedia> // eu.vendeli.tgbot.types.media/PaidMediaInfo.paidMedia.<get-paidMedia>|<get-paidMedia>(){}[0]
    final val starCount // eu.vendeli.tgbot.types.media/PaidMediaInfo.starCount|{}starCount[0]
        final fun <get-starCount>(): kotlin/Int // eu.vendeli.tgbot.types.media/PaidMediaInfo.starCount.<get-starCount>|<get-starCount>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.media/PaidMediaInfo.component1|component1(){}[0]
    final fun component2(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PaidMedia> // eu.vendeli.tgbot.types.media/PaidMediaInfo.component2|component2(){}[0]
    final fun copy(kotlin/Int = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PaidMedia> = ...): eu.vendeli.tgbot.types.media/PaidMediaInfo // eu.vendeli.tgbot.types.media/PaidMediaInfo.copy|copy(kotlin.Int;kotlin.collections.List<eu.vendeli.tgbot.types.media.PaidMedia>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/PaidMediaInfo.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/PaidMediaInfo.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/PaidMediaInfo.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/PaidMediaInfo> { // eu.vendeli.tgbot.types.media/PaidMediaInfo.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/PaidMediaInfo.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/PaidMediaInfo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/PaidMediaInfo.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/PaidMediaInfo // eu.vendeli.tgbot.types.media/PaidMediaInfo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/PaidMediaInfo) // eu.vendeli.tgbot.types.media/PaidMediaInfo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.PaidMediaInfo){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/PaidMediaInfo.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.media/PaidMediaInfo.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/PaidMediaInfo> // eu.vendeli.tgbot.types.media/PaidMediaInfo.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/PaidMediaPurchased { // eu.vendeli.tgbot.types.media/PaidMediaPurchased|null[0]
    constructor <init>(eu.vendeli.tgbot.types/User, kotlin/String) // eu.vendeli.tgbot.types.media/PaidMediaPurchased.<init>|<init>(eu.vendeli.tgbot.types.User;kotlin.String){}[0]

    final val from // eu.vendeli.tgbot.types.media/PaidMediaPurchased.from|{}from[0]
        final fun <get-from>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.media/PaidMediaPurchased.from.<get-from>|<get-from>(){}[0]
    final val paidMediaPayload // eu.vendeli.tgbot.types.media/PaidMediaPurchased.paidMediaPayload|{}paidMediaPayload[0]
        final fun <get-paidMediaPayload>(): kotlin/String // eu.vendeli.tgbot.types.media/PaidMediaPurchased.paidMediaPayload.<get-paidMediaPayload>|<get-paidMediaPayload>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.media/PaidMediaPurchased.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.media/PaidMediaPurchased.component2|component2(){}[0]
    final fun copy(eu.vendeli.tgbot.types/User = ..., kotlin/String = ...): eu.vendeli.tgbot.types.media/PaidMediaPurchased // eu.vendeli.tgbot.types.media/PaidMediaPurchased.copy|copy(eu.vendeli.tgbot.types.User;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/PaidMediaPurchased.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/PaidMediaPurchased.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/PaidMediaPurchased.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/PaidMediaPurchased> { // eu.vendeli.tgbot.types.media/PaidMediaPurchased.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/PaidMediaPurchased.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/PaidMediaPurchased.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/PaidMediaPurchased.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/PaidMediaPurchased // eu.vendeli.tgbot.types.media/PaidMediaPurchased.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/PaidMediaPurchased) // eu.vendeli.tgbot.types.media/PaidMediaPurchased.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.PaidMediaPurchased){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/PaidMediaPurchased.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/PaidMediaPurchased> // eu.vendeli.tgbot.types.media/PaidMediaPurchased.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/PhotoSize { // eu.vendeli.tgbot.types.media/PhotoSize|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Int, kotlin/Int, kotlin/Int? = ...) // eu.vendeli.tgbot.types.media/PhotoSize.<init>|<init>(kotlin.String;kotlin.String;kotlin.Int;kotlin.Int;kotlin.Int?){}[0]

    final val fileId // eu.vendeli.tgbot.types.media/PhotoSize.fileId|{}fileId[0]
        final fun <get-fileId>(): kotlin/String // eu.vendeli.tgbot.types.media/PhotoSize.fileId.<get-fileId>|<get-fileId>(){}[0]
    final val fileSize // eu.vendeli.tgbot.types.media/PhotoSize.fileSize|{}fileSize[0]
        final fun <get-fileSize>(): kotlin/Int? // eu.vendeli.tgbot.types.media/PhotoSize.fileSize.<get-fileSize>|<get-fileSize>(){}[0]
    final val fileUniqueId // eu.vendeli.tgbot.types.media/PhotoSize.fileUniqueId|{}fileUniqueId[0]
        final fun <get-fileUniqueId>(): kotlin/String // eu.vendeli.tgbot.types.media/PhotoSize.fileUniqueId.<get-fileUniqueId>|<get-fileUniqueId>(){}[0]
    final val height // eu.vendeli.tgbot.types.media/PhotoSize.height|{}height[0]
        final fun <get-height>(): kotlin/Int // eu.vendeli.tgbot.types.media/PhotoSize.height.<get-height>|<get-height>(){}[0]
    final val width // eu.vendeli.tgbot.types.media/PhotoSize.width|{}width[0]
        final fun <get-width>(): kotlin/Int // eu.vendeli.tgbot.types.media/PhotoSize.width.<get-width>|<get-width>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.media/PhotoSize.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.media/PhotoSize.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types.media/PhotoSize.component3|component3(){}[0]
    final fun component4(): kotlin/Int // eu.vendeli.tgbot.types.media/PhotoSize.component4|component4(){}[0]
    final fun component5(): kotlin/Int? // eu.vendeli.tgbot.types.media/PhotoSize.component5|component5(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.media/PhotoSize // eu.vendeli.tgbot.types.media/PhotoSize.copy|copy(kotlin.String;kotlin.String;kotlin.Int;kotlin.Int;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/PhotoSize.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/PhotoSize.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/PhotoSize.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/PhotoSize> { // eu.vendeli.tgbot.types.media/PhotoSize.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/PhotoSize.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/PhotoSize.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/PhotoSize.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/PhotoSize // eu.vendeli.tgbot.types.media/PhotoSize.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/PhotoSize) // eu.vendeli.tgbot.types.media/PhotoSize.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.PhotoSize){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/PhotoSize.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/PhotoSize> // eu.vendeli.tgbot.types.media/PhotoSize.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/Sticker : eu.vendeli.tgbot.interfaces.marker/MultipleResponse { // eu.vendeli.tgbot.types.media/Sticker|null[0]
    constructor <init>(kotlin/String, kotlin/String, eu.vendeli.tgbot.types.media/StickerType, kotlin/Int, kotlin/Int, kotlin/Boolean, kotlin/Boolean, eu.vendeli.tgbot.types.media/PhotoSize? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.media/File? = ..., eu.vendeli.tgbot.types.media/MaskPosition? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.media/Sticker.<init>|<init>(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.media.StickerType;kotlin.Int;kotlin.Int;kotlin.Boolean;kotlin.Boolean;eu.vendeli.tgbot.types.media.PhotoSize?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.media.File?;eu.vendeli.tgbot.types.media.MaskPosition?;kotlin.String?;kotlin.Boolean?;kotlin.Int?){}[0]

    final val customEmojiId // eu.vendeli.tgbot.types.media/Sticker.customEmojiId|{}customEmojiId[0]
        final fun <get-customEmojiId>(): kotlin/String? // eu.vendeli.tgbot.types.media/Sticker.customEmojiId.<get-customEmojiId>|<get-customEmojiId>(){}[0]
    final val emoji // eu.vendeli.tgbot.types.media/Sticker.emoji|{}emoji[0]
        final fun <get-emoji>(): kotlin/String? // eu.vendeli.tgbot.types.media/Sticker.emoji.<get-emoji>|<get-emoji>(){}[0]
    final val fileId // eu.vendeli.tgbot.types.media/Sticker.fileId|{}fileId[0]
        final fun <get-fileId>(): kotlin/String // eu.vendeli.tgbot.types.media/Sticker.fileId.<get-fileId>|<get-fileId>(){}[0]
    final val fileSize // eu.vendeli.tgbot.types.media/Sticker.fileSize|{}fileSize[0]
        final fun <get-fileSize>(): kotlin/Int? // eu.vendeli.tgbot.types.media/Sticker.fileSize.<get-fileSize>|<get-fileSize>(){}[0]
    final val fileUniqueId // eu.vendeli.tgbot.types.media/Sticker.fileUniqueId|{}fileUniqueId[0]
        final fun <get-fileUniqueId>(): kotlin/String // eu.vendeli.tgbot.types.media/Sticker.fileUniqueId.<get-fileUniqueId>|<get-fileUniqueId>(){}[0]
    final val height // eu.vendeli.tgbot.types.media/Sticker.height|{}height[0]
        final fun <get-height>(): kotlin/Int // eu.vendeli.tgbot.types.media/Sticker.height.<get-height>|<get-height>(){}[0]
    final val isAnimated // eu.vendeli.tgbot.types.media/Sticker.isAnimated|{}isAnimated[0]
        final fun <get-isAnimated>(): kotlin/Boolean // eu.vendeli.tgbot.types.media/Sticker.isAnimated.<get-isAnimated>|<get-isAnimated>(){}[0]
    final val isVideo // eu.vendeli.tgbot.types.media/Sticker.isVideo|{}isVideo[0]
        final fun <get-isVideo>(): kotlin/Boolean // eu.vendeli.tgbot.types.media/Sticker.isVideo.<get-isVideo>|<get-isVideo>(){}[0]
    final val maskPosition // eu.vendeli.tgbot.types.media/Sticker.maskPosition|{}maskPosition[0]
        final fun <get-maskPosition>(): eu.vendeli.tgbot.types.media/MaskPosition? // eu.vendeli.tgbot.types.media/Sticker.maskPosition.<get-maskPosition>|<get-maskPosition>(){}[0]
    final val needsRepainting // eu.vendeli.tgbot.types.media/Sticker.needsRepainting|{}needsRepainting[0]
        final fun <get-needsRepainting>(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/Sticker.needsRepainting.<get-needsRepainting>|<get-needsRepainting>(){}[0]
    final val premiumAnimation // eu.vendeli.tgbot.types.media/Sticker.premiumAnimation|{}premiumAnimation[0]
        final fun <get-premiumAnimation>(): eu.vendeli.tgbot.types.media/File? // eu.vendeli.tgbot.types.media/Sticker.premiumAnimation.<get-premiumAnimation>|<get-premiumAnimation>(){}[0]
    final val setName // eu.vendeli.tgbot.types.media/Sticker.setName|{}setName[0]
        final fun <get-setName>(): kotlin/String? // eu.vendeli.tgbot.types.media/Sticker.setName.<get-setName>|<get-setName>(){}[0]
    final val thumbnail // eu.vendeli.tgbot.types.media/Sticker.thumbnail|{}thumbnail[0]
        final fun <get-thumbnail>(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/Sticker.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
    final val type // eu.vendeli.tgbot.types.media/Sticker.type|{}type[0]
        final fun <get-type>(): eu.vendeli.tgbot.types.media/StickerType // eu.vendeli.tgbot.types.media/Sticker.type.<get-type>|<get-type>(){}[0]
    final val width // eu.vendeli.tgbot.types.media/Sticker.width|{}width[0]
        final fun <get-width>(): kotlin/Int // eu.vendeli.tgbot.types.media/Sticker.width.<get-width>|<get-width>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.media/Sticker.component1|component1(){}[0]
    final fun component10(): kotlin/String? // eu.vendeli.tgbot.types.media/Sticker.component10|component10(){}[0]
    final fun component11(): eu.vendeli.tgbot.types.media/File? // eu.vendeli.tgbot.types.media/Sticker.component11|component11(){}[0]
    final fun component12(): eu.vendeli.tgbot.types.media/MaskPosition? // eu.vendeli.tgbot.types.media/Sticker.component12|component12(){}[0]
    final fun component13(): kotlin/String? // eu.vendeli.tgbot.types.media/Sticker.component13|component13(){}[0]
    final fun component14(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/Sticker.component14|component14(){}[0]
    final fun component15(): kotlin/Int? // eu.vendeli.tgbot.types.media/Sticker.component15|component15(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.media/Sticker.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.media/StickerType // eu.vendeli.tgbot.types.media/Sticker.component3|component3(){}[0]
    final fun component4(): kotlin/Int // eu.vendeli.tgbot.types.media/Sticker.component4|component4(){}[0]
    final fun component5(): kotlin/Int // eu.vendeli.tgbot.types.media/Sticker.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean // eu.vendeli.tgbot.types.media/Sticker.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean // eu.vendeli.tgbot.types.media/Sticker.component7|component7(){}[0]
    final fun component8(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/Sticker.component8|component8(){}[0]
    final fun component9(): kotlin/String? // eu.vendeli.tgbot.types.media/Sticker.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., eu.vendeli.tgbot.types.media/StickerType = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., eu.vendeli.tgbot.types.media/PhotoSize? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.media/File? = ..., eu.vendeli.tgbot.types.media/MaskPosition? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.media/Sticker // eu.vendeli.tgbot.types.media/Sticker.copy|copy(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.media.StickerType;kotlin.Int;kotlin.Int;kotlin.Boolean;kotlin.Boolean;eu.vendeli.tgbot.types.media.PhotoSize?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.media.File?;eu.vendeli.tgbot.types.media.MaskPosition?;kotlin.String?;kotlin.Boolean?;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/Sticker.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/Sticker.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/Sticker.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/Sticker> { // eu.vendeli.tgbot.types.media/Sticker.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/Sticker.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/Sticker.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/Sticker.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/Sticker // eu.vendeli.tgbot.types.media/Sticker.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/Sticker) // eu.vendeli.tgbot.types.media/Sticker.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.Sticker){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/Sticker.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.media/Sticker.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/Sticker> // eu.vendeli.tgbot.types.media/Sticker.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/StickerSet { // eu.vendeli.tgbot.types.media/StickerSet|null[0]
    constructor <init>(kotlin/String, kotlin/String, eu.vendeli.tgbot.types.media/StickerType, kotlin.collections/List<eu.vendeli.tgbot.types.media/Sticker>, eu.vendeli.tgbot.types.media/PhotoSize? = ...) // eu.vendeli.tgbot.types.media/StickerSet.<init>|<init>(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.media.StickerType;kotlin.collections.List<eu.vendeli.tgbot.types.media.Sticker>;eu.vendeli.tgbot.types.media.PhotoSize?){}[0]

    final val name // eu.vendeli.tgbot.types.media/StickerSet.name|{}name[0]
        final fun <get-name>(): kotlin/String // eu.vendeli.tgbot.types.media/StickerSet.name.<get-name>|<get-name>(){}[0]
    final val stickerType // eu.vendeli.tgbot.types.media/StickerSet.stickerType|{}stickerType[0]
        final fun <get-stickerType>(): eu.vendeli.tgbot.types.media/StickerType // eu.vendeli.tgbot.types.media/StickerSet.stickerType.<get-stickerType>|<get-stickerType>(){}[0]
    final val stickers // eu.vendeli.tgbot.types.media/StickerSet.stickers|{}stickers[0]
        final fun <get-stickers>(): kotlin.collections/List<eu.vendeli.tgbot.types.media/Sticker> // eu.vendeli.tgbot.types.media/StickerSet.stickers.<get-stickers>|<get-stickers>(){}[0]
    final val thumbnail // eu.vendeli.tgbot.types.media/StickerSet.thumbnail|{}thumbnail[0]
        final fun <get-thumbnail>(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/StickerSet.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
    final val title // eu.vendeli.tgbot.types.media/StickerSet.title|{}title[0]
        final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.media/StickerSet.title.<get-title>|<get-title>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.media/StickerSet.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.media/StickerSet.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.media/StickerType // eu.vendeli.tgbot.types.media/StickerSet.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<eu.vendeli.tgbot.types.media/Sticker> // eu.vendeli.tgbot.types.media/StickerSet.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/StickerSet.component5|component5(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., eu.vendeli.tgbot.types.media/StickerType = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/Sticker> = ..., eu.vendeli.tgbot.types.media/PhotoSize? = ...): eu.vendeli.tgbot.types.media/StickerSet // eu.vendeli.tgbot.types.media/StickerSet.copy|copy(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.media.StickerType;kotlin.collections.List<eu.vendeli.tgbot.types.media.Sticker>;eu.vendeli.tgbot.types.media.PhotoSize?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/StickerSet.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/StickerSet.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/StickerSet.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/StickerSet> { // eu.vendeli.tgbot.types.media/StickerSet.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/StickerSet.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/StickerSet.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/StickerSet.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/StickerSet // eu.vendeli.tgbot.types.media/StickerSet.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/StickerSet) // eu.vendeli.tgbot.types.media/StickerSet.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.StickerSet){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/StickerSet.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.media/StickerSet.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/StickerSet> // eu.vendeli.tgbot.types.media/StickerSet.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/Story { // eu.vendeli.tgbot.types.media/Story|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types.chat/Chat) // eu.vendeli.tgbot.types.media/Story.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.chat.Chat){}[0]

    final val chat // eu.vendeli.tgbot.types.media/Story.chat|{}chat[0]
        final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.media/Story.chat.<get-chat>|<get-chat>(){}[0]
    final val id // eu.vendeli.tgbot.types.media/Story.id|{}id[0]
        final fun <get-id>(): kotlin/Int // eu.vendeli.tgbot.types.media/Story.id.<get-id>|<get-id>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.media/Story.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.media/Story.component2|component2(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types.chat/Chat = ...): eu.vendeli.tgbot.types.media/Story // eu.vendeli.tgbot.types.media/Story.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.chat.Chat){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/Story.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/Story.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/Story.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/Story> { // eu.vendeli.tgbot.types.media/Story.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/Story.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/Story.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/Story.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/Story // eu.vendeli.tgbot.types.media/Story.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/Story) // eu.vendeli.tgbot.types.media/Story.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.Story){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/Story.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/Story> // eu.vendeli.tgbot.types.media/Story.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/Video { // eu.vendeli.tgbot.types.media/Video|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Int, kotlin/Int, kotlin/Int, eu.vendeli.tgbot.types.media/PhotoSize? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? = ..., kotlin.time/Duration? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Long? = ...) // eu.vendeli.tgbot.types.media/Video.<init>|<init>(kotlin.String;kotlin.String;kotlin.Int;kotlin.Int;kotlin.Int;eu.vendeli.tgbot.types.media.PhotoSize?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>?;kotlin.time.Duration?;kotlin.String?;kotlin.String?;kotlin.Long?){}[0]

    final val cover // eu.vendeli.tgbot.types.media/Video.cover|{}cover[0]
        final fun <get-cover>(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? // eu.vendeli.tgbot.types.media/Video.cover.<get-cover>|<get-cover>(){}[0]
    final val duration // eu.vendeli.tgbot.types.media/Video.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int // eu.vendeli.tgbot.types.media/Video.duration.<get-duration>|<get-duration>(){}[0]
    final val fileId // eu.vendeli.tgbot.types.media/Video.fileId|{}fileId[0]
        final fun <get-fileId>(): kotlin/String // eu.vendeli.tgbot.types.media/Video.fileId.<get-fileId>|<get-fileId>(){}[0]
    final val fileName // eu.vendeli.tgbot.types.media/Video.fileName|{}fileName[0]
        final fun <get-fileName>(): kotlin/String? // eu.vendeli.tgbot.types.media/Video.fileName.<get-fileName>|<get-fileName>(){}[0]
    final val fileSize // eu.vendeli.tgbot.types.media/Video.fileSize|{}fileSize[0]
        final fun <get-fileSize>(): kotlin/Long? // eu.vendeli.tgbot.types.media/Video.fileSize.<get-fileSize>|<get-fileSize>(){}[0]
    final val fileUniqueId // eu.vendeli.tgbot.types.media/Video.fileUniqueId|{}fileUniqueId[0]
        final fun <get-fileUniqueId>(): kotlin/String // eu.vendeli.tgbot.types.media/Video.fileUniqueId.<get-fileUniqueId>|<get-fileUniqueId>(){}[0]
    final val height // eu.vendeli.tgbot.types.media/Video.height|{}height[0]
        final fun <get-height>(): kotlin/Int // eu.vendeli.tgbot.types.media/Video.height.<get-height>|<get-height>(){}[0]
    final val mimeType // eu.vendeli.tgbot.types.media/Video.mimeType|{}mimeType[0]
        final fun <get-mimeType>(): kotlin/String? // eu.vendeli.tgbot.types.media/Video.mimeType.<get-mimeType>|<get-mimeType>(){}[0]
    final val startTimestamp // eu.vendeli.tgbot.types.media/Video.startTimestamp|{}startTimestamp[0]
        final fun <get-startTimestamp>(): kotlin.time/Duration? // eu.vendeli.tgbot.types.media/Video.startTimestamp.<get-startTimestamp>|<get-startTimestamp>(){}[0]
    final val thumbnail // eu.vendeli.tgbot.types.media/Video.thumbnail|{}thumbnail[0]
        final fun <get-thumbnail>(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/Video.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
    final val width // eu.vendeli.tgbot.types.media/Video.width|{}width[0]
        final fun <get-width>(): kotlin/Int // eu.vendeli.tgbot.types.media/Video.width.<get-width>|<get-width>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.media/Video.component1|component1(){}[0]
    final fun component10(): kotlin/String? // eu.vendeli.tgbot.types.media/Video.component10|component10(){}[0]
    final fun component11(): kotlin/Long? // eu.vendeli.tgbot.types.media/Video.component11|component11(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.media/Video.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types.media/Video.component3|component3(){}[0]
    final fun component4(): kotlin/Int // eu.vendeli.tgbot.types.media/Video.component4|component4(){}[0]
    final fun component5(): kotlin/Int // eu.vendeli.tgbot.types.media/Video.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/Video.component6|component6(){}[0]
    final fun component7(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? // eu.vendeli.tgbot.types.media/Video.component7|component7(){}[0]
    final fun component8(): kotlin.time/Duration? // eu.vendeli.tgbot.types.media/Video.component8|component8(){}[0]
    final fun component9(): kotlin/String? // eu.vendeli.tgbot.types.media/Video.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ..., eu.vendeli.tgbot.types.media/PhotoSize? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? = ..., kotlin.time/Duration? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Long? = ...): eu.vendeli.tgbot.types.media/Video // eu.vendeli.tgbot.types.media/Video.copy|copy(kotlin.String;kotlin.String;kotlin.Int;kotlin.Int;kotlin.Int;eu.vendeli.tgbot.types.media.PhotoSize?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>?;kotlin.time.Duration?;kotlin.String?;kotlin.String?;kotlin.Long?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/Video.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/Video.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/Video.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/Video> { // eu.vendeli.tgbot.types.media/Video.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/Video.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/Video.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/Video.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/Video // eu.vendeli.tgbot.types.media/Video.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/Video) // eu.vendeli.tgbot.types.media/Video.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.Video){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/Video.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.media/Video.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/Video> // eu.vendeli.tgbot.types.media/Video.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/VideoChatEnded { // eu.vendeli.tgbot.types.media/VideoChatEnded|null[0]
    constructor <init>(kotlin/Int) // eu.vendeli.tgbot.types.media/VideoChatEnded.<init>|<init>(kotlin.Int){}[0]

    final val duration // eu.vendeli.tgbot.types.media/VideoChatEnded.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int // eu.vendeli.tgbot.types.media/VideoChatEnded.duration.<get-duration>|<get-duration>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.media/VideoChatEnded.component1|component1(){}[0]
    final fun copy(kotlin/Int = ...): eu.vendeli.tgbot.types.media/VideoChatEnded // eu.vendeli.tgbot.types.media/VideoChatEnded.copy|copy(kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/VideoChatEnded.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/VideoChatEnded.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/VideoChatEnded.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/VideoChatEnded> { // eu.vendeli.tgbot.types.media/VideoChatEnded.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/VideoChatEnded.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/VideoChatEnded.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/VideoChatEnded.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/VideoChatEnded // eu.vendeli.tgbot.types.media/VideoChatEnded.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/VideoChatEnded) // eu.vendeli.tgbot.types.media/VideoChatEnded.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.VideoChatEnded){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/VideoChatEnded.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/VideoChatEnded> // eu.vendeli.tgbot.types.media/VideoChatEnded.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited { // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited|null[0]
    constructor <init>(kotlin.collections/List<eu.vendeli.tgbot.types/User>) // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.<init>|<init>(kotlin.collections.List<eu.vendeli.tgbot.types.User>){}[0]

    final val users // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.users|{}users[0]
        final fun <get-users>(): kotlin.collections/List<eu.vendeli.tgbot.types/User> // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.users.<get-users>|<get-users>(){}[0]

    final fun component1(): kotlin.collections/List<eu.vendeli.tgbot.types/User> // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<eu.vendeli.tgbot.types/User> = ...): eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.copy|copy(kotlin.collections.List<eu.vendeli.tgbot.types.User>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited> { // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited) // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.VideoChatParticipantsInvited){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited> // eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/VideoChatScheduled { // eu.vendeli.tgbot.types.media/VideoChatScheduled|null[0]
    constructor <init>(kotlinx.datetime/Instant) // eu.vendeli.tgbot.types.media/VideoChatScheduled.<init>|<init>(kotlinx.datetime.Instant){}[0]

    final val startDate // eu.vendeli.tgbot.types.media/VideoChatScheduled.startDate|{}startDate[0]
        final fun <get-startDate>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.media/VideoChatScheduled.startDate.<get-startDate>|<get-startDate>(){}[0]

    final fun component1(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.media/VideoChatScheduled.component1|component1(){}[0]
    final fun copy(kotlinx.datetime/Instant = ...): eu.vendeli.tgbot.types.media/VideoChatScheduled // eu.vendeli.tgbot.types.media/VideoChatScheduled.copy|copy(kotlinx.datetime.Instant){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/VideoChatScheduled.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/VideoChatScheduled.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/VideoChatScheduled.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/VideoChatScheduled> { // eu.vendeli.tgbot.types.media/VideoChatScheduled.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/VideoChatScheduled.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/VideoChatScheduled.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/VideoChatScheduled.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/VideoChatScheduled // eu.vendeli.tgbot.types.media/VideoChatScheduled.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/VideoChatScheduled) // eu.vendeli.tgbot.types.media/VideoChatScheduled.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.VideoChatScheduled){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/VideoChatScheduled.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/VideoChatScheduled> // eu.vendeli.tgbot.types.media/VideoChatScheduled.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/VideoNote { // eu.vendeli.tgbot.types.media/VideoNote|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Int, kotlin/Int, eu.vendeli.tgbot.types.media/PhotoSize? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.media/VideoNote.<init>|<init>(kotlin.String;kotlin.String;kotlin.Int;kotlin.Int;eu.vendeli.tgbot.types.media.PhotoSize?;kotlin.Int?){}[0]

    final val duration // eu.vendeli.tgbot.types.media/VideoNote.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int // eu.vendeli.tgbot.types.media/VideoNote.duration.<get-duration>|<get-duration>(){}[0]
    final val fileId // eu.vendeli.tgbot.types.media/VideoNote.fileId|{}fileId[0]
        final fun <get-fileId>(): kotlin/String // eu.vendeli.tgbot.types.media/VideoNote.fileId.<get-fileId>|<get-fileId>(){}[0]
    final val fileSize // eu.vendeli.tgbot.types.media/VideoNote.fileSize|{}fileSize[0]
        final fun <get-fileSize>(): kotlin/Int? // eu.vendeli.tgbot.types.media/VideoNote.fileSize.<get-fileSize>|<get-fileSize>(){}[0]
    final val fileUniqueId // eu.vendeli.tgbot.types.media/VideoNote.fileUniqueId|{}fileUniqueId[0]
        final fun <get-fileUniqueId>(): kotlin/String // eu.vendeli.tgbot.types.media/VideoNote.fileUniqueId.<get-fileUniqueId>|<get-fileUniqueId>(){}[0]
    final val length // eu.vendeli.tgbot.types.media/VideoNote.length|{}length[0]
        final fun <get-length>(): kotlin/Int // eu.vendeli.tgbot.types.media/VideoNote.length.<get-length>|<get-length>(){}[0]
    final val thumbnail // eu.vendeli.tgbot.types.media/VideoNote.thumbnail|{}thumbnail[0]
        final fun <get-thumbnail>(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/VideoNote.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.media/VideoNote.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.media/VideoNote.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types.media/VideoNote.component3|component3(){}[0]
    final fun component4(): kotlin/Int // eu.vendeli.tgbot.types.media/VideoNote.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types.media/PhotoSize? // eu.vendeli.tgbot.types.media/VideoNote.component5|component5(){}[0]
    final fun component6(): kotlin/Int? // eu.vendeli.tgbot.types.media/VideoNote.component6|component6(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Int = ..., kotlin/Int = ..., eu.vendeli.tgbot.types.media/PhotoSize? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.media/VideoNote // eu.vendeli.tgbot.types.media/VideoNote.copy|copy(kotlin.String;kotlin.String;kotlin.Int;kotlin.Int;eu.vendeli.tgbot.types.media.PhotoSize?;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/VideoNote.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/VideoNote.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/VideoNote.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/VideoNote> { // eu.vendeli.tgbot.types.media/VideoNote.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/VideoNote.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/VideoNote.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/VideoNote.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/VideoNote // eu.vendeli.tgbot.types.media/VideoNote.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/VideoNote) // eu.vendeli.tgbot.types.media/VideoNote.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.VideoNote){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/VideoNote.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/VideoNote> // eu.vendeli.tgbot.types.media/VideoNote.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.media/Voice { // eu.vendeli.tgbot.types.media/Voice|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Int, kotlin/String? = ..., kotlin/Long? = ...) // eu.vendeli.tgbot.types.media/Voice.<init>|<init>(kotlin.String;kotlin.String;kotlin.Int;kotlin.String?;kotlin.Long?){}[0]

    final val duration // eu.vendeli.tgbot.types.media/Voice.duration|{}duration[0]
        final fun <get-duration>(): kotlin/Int // eu.vendeli.tgbot.types.media/Voice.duration.<get-duration>|<get-duration>(){}[0]
    final val fileId // eu.vendeli.tgbot.types.media/Voice.fileId|{}fileId[0]
        final fun <get-fileId>(): kotlin/String // eu.vendeli.tgbot.types.media/Voice.fileId.<get-fileId>|<get-fileId>(){}[0]
    final val fileSize // eu.vendeli.tgbot.types.media/Voice.fileSize|{}fileSize[0]
        final fun <get-fileSize>(): kotlin/Long? // eu.vendeli.tgbot.types.media/Voice.fileSize.<get-fileSize>|<get-fileSize>(){}[0]
    final val fileUniqueId // eu.vendeli.tgbot.types.media/Voice.fileUniqueId|{}fileUniqueId[0]
        final fun <get-fileUniqueId>(): kotlin/String // eu.vendeli.tgbot.types.media/Voice.fileUniqueId.<get-fileUniqueId>|<get-fileUniqueId>(){}[0]
    final val mimeType // eu.vendeli.tgbot.types.media/Voice.mimeType|{}mimeType[0]
        final fun <get-mimeType>(): kotlin/String? // eu.vendeli.tgbot.types.media/Voice.mimeType.<get-mimeType>|<get-mimeType>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.media/Voice.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.media/Voice.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types.media/Voice.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.media/Voice.component4|component4(){}[0]
    final fun component5(): kotlin/Long? // eu.vendeli.tgbot.types.media/Voice.component5|component5(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Int = ..., kotlin/String? = ..., kotlin/Long? = ...): eu.vendeli.tgbot.types.media/Voice // eu.vendeli.tgbot.types.media/Voice.copy|copy(kotlin.String;kotlin.String;kotlin.Int;kotlin.String?;kotlin.Long?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/Voice.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/Voice.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/Voice.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/Voice> { // eu.vendeli.tgbot.types.media/Voice.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.media/Voice.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/Voice.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/Voice.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/Voice // eu.vendeli.tgbot.types.media/Voice.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/Voice) // eu.vendeli.tgbot.types.media/Voice.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.Voice){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.media/Voice.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/Voice> // eu.vendeli.tgbot.types.media/Voice.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.msg/Message : eu.vendeli.tgbot.interfaces.marker/MultipleResponse, eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage { // eu.vendeli.tgbot.types.msg/Message|null[0]
    constructor <init>(kotlin/Long, kotlin/Int? = ..., eu.vendeli.tgbot.types/User? = ..., eu.vendeli.tgbot.types.chat/Chat? = ..., kotlin/Int? = ..., eu.vendeli.tgbot.types/User? = ..., kotlinx.datetime/Instant, kotlin/String? = ..., eu.vendeli.tgbot.types.chat/Chat, eu.vendeli.tgbot.types.msg/MessageOrigin? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types/ExternalReplyInfo? = ..., eu.vendeli.tgbot.types.media/Story? = ..., eu.vendeli.tgbot.types/TextQuote? = ..., eu.vendeli.tgbot.types/User? = ..., kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/LinkPreviewOptions? = ..., eu.vendeli.tgbot.types.media/Animation? = ..., eu.vendeli.tgbot.types.media/Audio? = ..., eu.vendeli.tgbot.types.media/Document? = ..., eu.vendeli.tgbot.types.media/PaidMediaInfo? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? = ..., eu.vendeli.tgbot.types.media/Sticker? = ..., eu.vendeli.tgbot.types.media/Story? = ..., eu.vendeli.tgbot.types.media/Video? = ..., eu.vendeli.tgbot.types.media/VideoNote? = ..., eu.vendeli.tgbot.types.media/Voice? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/Contact? = ..., eu.vendeli.tgbot.types.game/Dice? = ..., eu.vendeli.tgbot.types.game/Game? = ..., eu.vendeli.tgbot.types.poll/Poll? = ..., eu.vendeli.tgbot.types/Venue? = ..., eu.vendeli.tgbot.types/Location? = ..., kotlin.collections/List<eu.vendeli.tgbot.types/User>? = ..., eu.vendeli.tgbot.types/User? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged? = ..., kotlin/Long? = ..., kotlin/Long? = ..., eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage? = ..., eu.vendeli.tgbot.types.payment/Invoice? = ..., eu.vendeli.tgbot.types.payment/SuccessfulPayment? = ..., eu.vendeli.tgbot.types.payment/RefundedPayment? = ..., eu.vendeli.tgbot.types/UsersShared? = ..., eu.vendeli.tgbot.types.chat/ChatShared? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/WriteAccessAllowed? = ..., eu.vendeli.tgbot.types.passport/PassportData? = ..., eu.vendeli.tgbot.types/ProximityAlertTriggered? = ..., eu.vendeli.tgbot.types.boost/ChatBoostAdded? = ..., eu.vendeli.tgbot.types.forum/ForumTopicCreated? = ..., eu.vendeli.tgbot.types.forum/ForumTopicEdited? = ..., eu.vendeli.tgbot.types.forum/ForumTopicClosed? = ..., eu.vendeli.tgbot.types.forum/ForumTopicReopened? = ..., eu.vendeli.tgbot.types.forum/GeneralForumTopicHidden? = ..., eu.vendeli.tgbot.types.forum/GeneralForumTopicUnhidden? = ..., eu.vendeli.tgbot.types.giveaway/GiveawayCreated? = ..., eu.vendeli.tgbot.types.chat/ChatBackground? = ..., eu.vendeli.tgbot.types.giveaway/Giveaway? = ..., eu.vendeli.tgbot.types.giveaway/GiveawayWinners? = ..., eu.vendeli.tgbot.types.giveaway/GiveawayCompleted? = ..., eu.vendeli.tgbot.types.media/VideoChatScheduled? = ..., eu.vendeli.tgbot.types.media/VideoChatStarted? = ..., eu.vendeli.tgbot.types.media/VideoChatEnded? = ..., eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited? = ..., eu.vendeli.tgbot.types.keyboard/WebAppData? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.msg/Message.<init>|<init>(kotlin.Long;kotlin.Int?;eu.vendeli.tgbot.types.User?;eu.vendeli.tgbot.types.chat.Chat?;kotlin.Int?;eu.vendeli.tgbot.types.User?;kotlinx.datetime.Instant;kotlin.String?;eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.types.msg.MessageOrigin?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.ExternalReplyInfo?;eu.vendeli.tgbot.types.media.Story?;eu.vendeli.tgbot.types.TextQuote?;eu.vendeli.tgbot.types.User?;kotlinx.datetime.Instant?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.String?;eu.vendeli.tgbot.types.LinkPreviewOptions?;eu.vendeli.tgbot.types.media.Animation?;eu.vendeli.tgbot.types.media.Audio?;eu.vendeli.tgbot.types.media.Document?;eu.vendeli.tgbot.types.media.PaidMediaInfo?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>?;eu.vendeli.tgbot.types.media.Sticker?;eu.vendeli.tgbot.types.media.Story?;eu.vendeli.tgbot.types.media.Video?;eu.vendeli.tgbot.types.media.VideoNote?;eu.vendeli.tgbot.types.media.Voice?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Boolean?;eu.vendeli.tgbot.types.Contact?;eu.vendeli.tgbot.types.game.Dice?;eu.vendeli.tgbot.types.game.Game?;eu.vendeli.tgbot.types.poll.Poll?;eu.vendeli.tgbot.types.Venue?;eu.vendeli.tgbot.types.Location?;kotlin.collections.List<eu.vendeli.tgbot.types.User>?;eu.vendeli.tgbot.types.User?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.msg.MessageAutoDeleteTimerChanged?;kotlin.Long?;kotlin.Long?;eu.vendeli.tgbot.types.msg.MaybeInaccessibleMessage?;eu.vendeli.tgbot.types.payment.Invoice?;eu.vendeli.tgbot.types.payment.SuccessfulPayment?;eu.vendeli.tgbot.types.payment.RefundedPayment?;eu.vendeli.tgbot.types.UsersShared?;eu.vendeli.tgbot.types.chat.ChatShared?;kotlin.String?;eu.vendeli.tgbot.types.WriteAccessAllowed?;eu.vendeli.tgbot.types.passport.PassportData?;eu.vendeli.tgbot.types.ProximityAlertTriggered?;eu.vendeli.tgbot.types.boost.ChatBoostAdded?;eu.vendeli.tgbot.types.forum.ForumTopicCreated?;eu.vendeli.tgbot.types.forum.ForumTopicEdited?;eu.vendeli.tgbot.types.forum.ForumTopicClosed?;eu.vendeli.tgbot.types.forum.ForumTopicReopened?;eu.vendeli.tgbot.types.forum.GeneralForumTopicHidden?;eu.vendeli.tgbot.types.forum.GeneralForumTopicUnhidden?;eu.vendeli.tgbot.types.giveaway.GiveawayCreated?;eu.vendeli.tgbot.types.chat.ChatBackground?;eu.vendeli.tgbot.types.giveaway.Giveaway?;eu.vendeli.tgbot.types.giveaway.GiveawayWinners?;eu.vendeli.tgbot.types.giveaway.GiveawayCompleted?;eu.vendeli.tgbot.types.media.VideoChatScheduled?;eu.vendeli.tgbot.types.media.VideoChatStarted?;eu.vendeli.tgbot.types.media.VideoChatEnded?;eu.vendeli.tgbot.types.media.VideoChatParticipantsInvited?;eu.vendeli.tgbot.types.keyboard.WebAppData?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;kotlin.Boolean?){}[0]

    final val animation // eu.vendeli.tgbot.types.msg/Message.animation|{}animation[0]
        final fun <get-animation>(): eu.vendeli.tgbot.types.media/Animation? // eu.vendeli.tgbot.types.msg/Message.animation.<get-animation>|<get-animation>(){}[0]
    final val audio // eu.vendeli.tgbot.types.msg/Message.audio|{}audio[0]
        final fun <get-audio>(): eu.vendeli.tgbot.types.media/Audio? // eu.vendeli.tgbot.types.msg/Message.audio.<get-audio>|<get-audio>(){}[0]
    final val authorSignature // eu.vendeli.tgbot.types.msg/Message.authorSignature|{}authorSignature[0]
        final fun <get-authorSignature>(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.authorSignature.<get-authorSignature>|<get-authorSignature>(){}[0]
    final val boostAdded // eu.vendeli.tgbot.types.msg/Message.boostAdded|{}boostAdded[0]
        final fun <get-boostAdded>(): eu.vendeli.tgbot.types.boost/ChatBoostAdded? // eu.vendeli.tgbot.types.msg/Message.boostAdded.<get-boostAdded>|<get-boostAdded>(){}[0]
    final val businessConnectionId // eu.vendeli.tgbot.types.msg/Message.businessConnectionId|{}businessConnectionId[0]
        final fun <get-businessConnectionId>(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.businessConnectionId.<get-businessConnectionId>|<get-businessConnectionId>(){}[0]
    final val caption // eu.vendeli.tgbot.types.msg/Message.caption|{}caption[0]
        final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.caption.<get-caption>|<get-caption>(){}[0]
    final val captionEntities // eu.vendeli.tgbot.types.msg/Message.captionEntities|{}captionEntities[0]
        final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.msg/Message.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
    final val channelChatCreated // eu.vendeli.tgbot.types.msg/Message.channelChatCreated|{}channelChatCreated[0]
        final fun <get-channelChatCreated>(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.channelChatCreated.<get-channelChatCreated>|<get-channelChatCreated>(){}[0]
    final val chat // eu.vendeli.tgbot.types.msg/Message.chat|{}chat[0]
        final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/Message.chat.<get-chat>|<get-chat>(){}[0]
    final val chatBackgroundSet // eu.vendeli.tgbot.types.msg/Message.chatBackgroundSet|{}chatBackgroundSet[0]
        final fun <get-chatBackgroundSet>(): eu.vendeli.tgbot.types.chat/ChatBackground? // eu.vendeli.tgbot.types.msg/Message.chatBackgroundSet.<get-chatBackgroundSet>|<get-chatBackgroundSet>(){}[0]
    final val chatShared // eu.vendeli.tgbot.types.msg/Message.chatShared|{}chatShared[0]
        final fun <get-chatShared>(): eu.vendeli.tgbot.types.chat/ChatShared? // eu.vendeli.tgbot.types.msg/Message.chatShared.<get-chatShared>|<get-chatShared>(){}[0]
    final val connectedWebsite // eu.vendeli.tgbot.types.msg/Message.connectedWebsite|{}connectedWebsite[0]
        final fun <get-connectedWebsite>(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.connectedWebsite.<get-connectedWebsite>|<get-connectedWebsite>(){}[0]
    final val contact // eu.vendeli.tgbot.types.msg/Message.contact|{}contact[0]
        final fun <get-contact>(): eu.vendeli.tgbot.types/Contact? // eu.vendeli.tgbot.types.msg/Message.contact.<get-contact>|<get-contact>(){}[0]
    final val date // eu.vendeli.tgbot.types.msg/Message.date|{}date[0]
        final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/Message.date.<get-date>|<get-date>(){}[0]
    final val deleteChatPhoto // eu.vendeli.tgbot.types.msg/Message.deleteChatPhoto|{}deleteChatPhoto[0]
        final fun <get-deleteChatPhoto>(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.deleteChatPhoto.<get-deleteChatPhoto>|<get-deleteChatPhoto>(){}[0]
    final val dice // eu.vendeli.tgbot.types.msg/Message.dice|{}dice[0]
        final fun <get-dice>(): eu.vendeli.tgbot.types.game/Dice? // eu.vendeli.tgbot.types.msg/Message.dice.<get-dice>|<get-dice>(){}[0]
    final val document // eu.vendeli.tgbot.types.msg/Message.document|{}document[0]
        final fun <get-document>(): eu.vendeli.tgbot.types.media/Document? // eu.vendeli.tgbot.types.msg/Message.document.<get-document>|<get-document>(){}[0]
    final val editDate // eu.vendeli.tgbot.types.msg/Message.editDate|{}editDate[0]
        final fun <get-editDate>(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.msg/Message.editDate.<get-editDate>|<get-editDate>(){}[0]
    final val effectId // eu.vendeli.tgbot.types.msg/Message.effectId|{}effectId[0]
        final fun <get-effectId>(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.effectId.<get-effectId>|<get-effectId>(){}[0]
    final val entities // eu.vendeli.tgbot.types.msg/Message.entities|{}entities[0]
        final fun <get-entities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.msg/Message.entities.<get-entities>|<get-entities>(){}[0]
    final val externalReply // eu.vendeli.tgbot.types.msg/Message.externalReply|{}externalReply[0]
        final fun <get-externalReply>(): eu.vendeli.tgbot.types/ExternalReplyInfo? // eu.vendeli.tgbot.types.msg/Message.externalReply.<get-externalReply>|<get-externalReply>(){}[0]
    final val forumTopicClosed // eu.vendeli.tgbot.types.msg/Message.forumTopicClosed|{}forumTopicClosed[0]
        final fun <get-forumTopicClosed>(): eu.vendeli.tgbot.types.forum/ForumTopicClosed? // eu.vendeli.tgbot.types.msg/Message.forumTopicClosed.<get-forumTopicClosed>|<get-forumTopicClosed>(){}[0]
    final val forumTopicCreated // eu.vendeli.tgbot.types.msg/Message.forumTopicCreated|{}forumTopicCreated[0]
        final fun <get-forumTopicCreated>(): eu.vendeli.tgbot.types.forum/ForumTopicCreated? // eu.vendeli.tgbot.types.msg/Message.forumTopicCreated.<get-forumTopicCreated>|<get-forumTopicCreated>(){}[0]
    final val forumTopicEdited // eu.vendeli.tgbot.types.msg/Message.forumTopicEdited|{}forumTopicEdited[0]
        final fun <get-forumTopicEdited>(): eu.vendeli.tgbot.types.forum/ForumTopicEdited? // eu.vendeli.tgbot.types.msg/Message.forumTopicEdited.<get-forumTopicEdited>|<get-forumTopicEdited>(){}[0]
    final val forumTopicReopened // eu.vendeli.tgbot.types.msg/Message.forumTopicReopened|{}forumTopicReopened[0]
        final fun <get-forumTopicReopened>(): eu.vendeli.tgbot.types.forum/ForumTopicReopened? // eu.vendeli.tgbot.types.msg/Message.forumTopicReopened.<get-forumTopicReopened>|<get-forumTopicReopened>(){}[0]
    final val forwardOrigin // eu.vendeli.tgbot.types.msg/Message.forwardOrigin|{}forwardOrigin[0]
        final fun <get-forwardOrigin>(): eu.vendeli.tgbot.types.msg/MessageOrigin? // eu.vendeli.tgbot.types.msg/Message.forwardOrigin.<get-forwardOrigin>|<get-forwardOrigin>(){}[0]
    final val from // eu.vendeli.tgbot.types.msg/Message.from|{}from[0]
        final fun <get-from>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/Message.from.<get-from>|<get-from>(){}[0]
    final val game // eu.vendeli.tgbot.types.msg/Message.game|{}game[0]
        final fun <get-game>(): eu.vendeli.tgbot.types.game/Game? // eu.vendeli.tgbot.types.msg/Message.game.<get-game>|<get-game>(){}[0]
    final val generalForumTopicHidden // eu.vendeli.tgbot.types.msg/Message.generalForumTopicHidden|{}generalForumTopicHidden[0]
        final fun <get-generalForumTopicHidden>(): eu.vendeli.tgbot.types.forum/GeneralForumTopicHidden? // eu.vendeli.tgbot.types.msg/Message.generalForumTopicHidden.<get-generalForumTopicHidden>|<get-generalForumTopicHidden>(){}[0]
    final val generalForumTopicUnhidden // eu.vendeli.tgbot.types.msg/Message.generalForumTopicUnhidden|{}generalForumTopicUnhidden[0]
        final fun <get-generalForumTopicUnhidden>(): eu.vendeli.tgbot.types.forum/GeneralForumTopicUnhidden? // eu.vendeli.tgbot.types.msg/Message.generalForumTopicUnhidden.<get-generalForumTopicUnhidden>|<get-generalForumTopicUnhidden>(){}[0]
    final val giveaway // eu.vendeli.tgbot.types.msg/Message.giveaway|{}giveaway[0]
        final fun <get-giveaway>(): eu.vendeli.tgbot.types.giveaway/Giveaway? // eu.vendeli.tgbot.types.msg/Message.giveaway.<get-giveaway>|<get-giveaway>(){}[0]
    final val giveawayCompleted // eu.vendeli.tgbot.types.msg/Message.giveawayCompleted|{}giveawayCompleted[0]
        final fun <get-giveawayCompleted>(): eu.vendeli.tgbot.types.giveaway/GiveawayCompleted? // eu.vendeli.tgbot.types.msg/Message.giveawayCompleted.<get-giveawayCompleted>|<get-giveawayCompleted>(){}[0]
    final val giveawayCreated // eu.vendeli.tgbot.types.msg/Message.giveawayCreated|{}giveawayCreated[0]
        final fun <get-giveawayCreated>(): eu.vendeli.tgbot.types.giveaway/GiveawayCreated? // eu.vendeli.tgbot.types.msg/Message.giveawayCreated.<get-giveawayCreated>|<get-giveawayCreated>(){}[0]
    final val giveawayWinners // eu.vendeli.tgbot.types.msg/Message.giveawayWinners|{}giveawayWinners[0]
        final fun <get-giveawayWinners>(): eu.vendeli.tgbot.types.giveaway/GiveawayWinners? // eu.vendeli.tgbot.types.msg/Message.giveawayWinners.<get-giveawayWinners>|<get-giveawayWinners>(){}[0]
    final val groupChatCreated // eu.vendeli.tgbot.types.msg/Message.groupChatCreated|{}groupChatCreated[0]
        final fun <get-groupChatCreated>(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.groupChatCreated.<get-groupChatCreated>|<get-groupChatCreated>(){}[0]
    final val hasMediaSpoiler // eu.vendeli.tgbot.types.msg/Message.hasMediaSpoiler|{}hasMediaSpoiler[0]
        final fun <get-hasMediaSpoiler>(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.hasMediaSpoiler.<get-hasMediaSpoiler>|<get-hasMediaSpoiler>(){}[0]
    final val hasProtectedContent // eu.vendeli.tgbot.types.msg/Message.hasProtectedContent|{}hasProtectedContent[0]
        final fun <get-hasProtectedContent>(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.hasProtectedContent.<get-hasProtectedContent>|<get-hasProtectedContent>(){}[0]
    final val invoice // eu.vendeli.tgbot.types.msg/Message.invoice|{}invoice[0]
        final fun <get-invoice>(): eu.vendeli.tgbot.types.payment/Invoice? // eu.vendeli.tgbot.types.msg/Message.invoice.<get-invoice>|<get-invoice>(){}[0]
    final val isAutomaticForward // eu.vendeli.tgbot.types.msg/Message.isAutomaticForward|{}isAutomaticForward[0]
        final fun <get-isAutomaticForward>(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.isAutomaticForward.<get-isAutomaticForward>|<get-isAutomaticForward>(){}[0]
    final val isFromOffline // eu.vendeli.tgbot.types.msg/Message.isFromOffline|{}isFromOffline[0]
        final fun <get-isFromOffline>(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.isFromOffline.<get-isFromOffline>|<get-isFromOffline>(){}[0]
    final val isTopicMessage // eu.vendeli.tgbot.types.msg/Message.isTopicMessage|{}isTopicMessage[0]
        final fun <get-isTopicMessage>(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.isTopicMessage.<get-isTopicMessage>|<get-isTopicMessage>(){}[0]
    final val leftChatMember // eu.vendeli.tgbot.types.msg/Message.leftChatMember|{}leftChatMember[0]
        final fun <get-leftChatMember>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/Message.leftChatMember.<get-leftChatMember>|<get-leftChatMember>(){}[0]
    final val linkPreviewOptions // eu.vendeli.tgbot.types.msg/Message.linkPreviewOptions|{}linkPreviewOptions[0]
        final fun <get-linkPreviewOptions>(): eu.vendeli.tgbot.types/LinkPreviewOptions? // eu.vendeli.tgbot.types.msg/Message.linkPreviewOptions.<get-linkPreviewOptions>|<get-linkPreviewOptions>(){}[0]
    final val location // eu.vendeli.tgbot.types.msg/Message.location|{}location[0]
        final fun <get-location>(): eu.vendeli.tgbot.types/Location? // eu.vendeli.tgbot.types.msg/Message.location.<get-location>|<get-location>(){}[0]
    final val mediaGroupId // eu.vendeli.tgbot.types.msg/Message.mediaGroupId|{}mediaGroupId[0]
        final fun <get-mediaGroupId>(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.mediaGroupId.<get-mediaGroupId>|<get-mediaGroupId>(){}[0]
    final val messageAutoDeleteTimerChanged // eu.vendeli.tgbot.types.msg/Message.messageAutoDeleteTimerChanged|{}messageAutoDeleteTimerChanged[0]
        final fun <get-messageAutoDeleteTimerChanged>(): eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged? // eu.vendeli.tgbot.types.msg/Message.messageAutoDeleteTimerChanged.<get-messageAutoDeleteTimerChanged>|<get-messageAutoDeleteTimerChanged>(){}[0]
    final val messageId // eu.vendeli.tgbot.types.msg/Message.messageId|{}messageId[0]
        final fun <get-messageId>(): kotlin/Long // eu.vendeli.tgbot.types.msg/Message.messageId.<get-messageId>|<get-messageId>(){}[0]
    final val messageThreadId // eu.vendeli.tgbot.types.msg/Message.messageThreadId|{}messageThreadId[0]
        final fun <get-messageThreadId>(): kotlin/Int? // eu.vendeli.tgbot.types.msg/Message.messageThreadId.<get-messageThreadId>|<get-messageThreadId>(){}[0]
    final val migrateFromChatId // eu.vendeli.tgbot.types.msg/Message.migrateFromChatId|{}migrateFromChatId[0]
        final fun <get-migrateFromChatId>(): kotlin/Long? // eu.vendeli.tgbot.types.msg/Message.migrateFromChatId.<get-migrateFromChatId>|<get-migrateFromChatId>(){}[0]
    final val migrateToChatId // eu.vendeli.tgbot.types.msg/Message.migrateToChatId|{}migrateToChatId[0]
        final fun <get-migrateToChatId>(): kotlin/Long? // eu.vendeli.tgbot.types.msg/Message.migrateToChatId.<get-migrateToChatId>|<get-migrateToChatId>(){}[0]
    final val newChatMembers // eu.vendeli.tgbot.types.msg/Message.newChatMembers|{}newChatMembers[0]
        final fun <get-newChatMembers>(): kotlin.collections/List<eu.vendeli.tgbot.types/User>? // eu.vendeli.tgbot.types.msg/Message.newChatMembers.<get-newChatMembers>|<get-newChatMembers>(){}[0]
    final val newChatPhoto // eu.vendeli.tgbot.types.msg/Message.newChatPhoto|{}newChatPhoto[0]
        final fun <get-newChatPhoto>(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? // eu.vendeli.tgbot.types.msg/Message.newChatPhoto.<get-newChatPhoto>|<get-newChatPhoto>(){}[0]
    final val newChatTitle // eu.vendeli.tgbot.types.msg/Message.newChatTitle|{}newChatTitle[0]
        final fun <get-newChatTitle>(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.newChatTitle.<get-newChatTitle>|<get-newChatTitle>(){}[0]
    final val paidMedia // eu.vendeli.tgbot.types.msg/Message.paidMedia|{}paidMedia[0]
        final fun <get-paidMedia>(): eu.vendeli.tgbot.types.media/PaidMediaInfo? // eu.vendeli.tgbot.types.msg/Message.paidMedia.<get-paidMedia>|<get-paidMedia>(){}[0]
    final val passportData // eu.vendeli.tgbot.types.msg/Message.passportData|{}passportData[0]
        final fun <get-passportData>(): eu.vendeli.tgbot.types.passport/PassportData? // eu.vendeli.tgbot.types.msg/Message.passportData.<get-passportData>|<get-passportData>(){}[0]
    final val photo // eu.vendeli.tgbot.types.msg/Message.photo|{}photo[0]
        final fun <get-photo>(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? // eu.vendeli.tgbot.types.msg/Message.photo.<get-photo>|<get-photo>(){}[0]
    final val pinnedMessage // eu.vendeli.tgbot.types.msg/Message.pinnedMessage|{}pinnedMessage[0]
        final fun <get-pinnedMessage>(): eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage? // eu.vendeli.tgbot.types.msg/Message.pinnedMessage.<get-pinnedMessage>|<get-pinnedMessage>(){}[0]
    final val poll // eu.vendeli.tgbot.types.msg/Message.poll|{}poll[0]
        final fun <get-poll>(): eu.vendeli.tgbot.types.poll/Poll? // eu.vendeli.tgbot.types.msg/Message.poll.<get-poll>|<get-poll>(){}[0]
    final val proximityAlertTriggered // eu.vendeli.tgbot.types.msg/Message.proximityAlertTriggered|{}proximityAlertTriggered[0]
        final fun <get-proximityAlertTriggered>(): eu.vendeli.tgbot.types/ProximityAlertTriggered? // eu.vendeli.tgbot.types.msg/Message.proximityAlertTriggered.<get-proximityAlertTriggered>|<get-proximityAlertTriggered>(){}[0]
    final val quote // eu.vendeli.tgbot.types.msg/Message.quote|{}quote[0]
        final fun <get-quote>(): eu.vendeli.tgbot.types/TextQuote? // eu.vendeli.tgbot.types.msg/Message.quote.<get-quote>|<get-quote>(){}[0]
    final val refundedPayment // eu.vendeli.tgbot.types.msg/Message.refundedPayment|{}refundedPayment[0]
        final fun <get-refundedPayment>(): eu.vendeli.tgbot.types.payment/RefundedPayment? // eu.vendeli.tgbot.types.msg/Message.refundedPayment.<get-refundedPayment>|<get-refundedPayment>(){}[0]
    final val replyMarkup // eu.vendeli.tgbot.types.msg/Message.replyMarkup|{}replyMarkup[0]
        final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.msg/Message.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
    final val replyToMessage // eu.vendeli.tgbot.types.msg/Message.replyToMessage|{}replyToMessage[0]
        final fun <get-replyToMessage>(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types.msg/Message.replyToMessage.<get-replyToMessage>|<get-replyToMessage>(){}[0]
    final val replyToStory // eu.vendeli.tgbot.types.msg/Message.replyToStory|{}replyToStory[0]
        final fun <get-replyToStory>(): eu.vendeli.tgbot.types.media/Story? // eu.vendeli.tgbot.types.msg/Message.replyToStory.<get-replyToStory>|<get-replyToStory>(){}[0]
    final val senderBoostCount // eu.vendeli.tgbot.types.msg/Message.senderBoostCount|{}senderBoostCount[0]
        final fun <get-senderBoostCount>(): kotlin/Int? // eu.vendeli.tgbot.types.msg/Message.senderBoostCount.<get-senderBoostCount>|<get-senderBoostCount>(){}[0]
    final val senderBusinessBot // eu.vendeli.tgbot.types.msg/Message.senderBusinessBot|{}senderBusinessBot[0]
        final fun <get-senderBusinessBot>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/Message.senderBusinessBot.<get-senderBusinessBot>|<get-senderBusinessBot>(){}[0]
    final val senderChat // eu.vendeli.tgbot.types.msg/Message.senderChat|{}senderChat[0]
        final fun <get-senderChat>(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types.msg/Message.senderChat.<get-senderChat>|<get-senderChat>(){}[0]
    final val showCaptionAboveMedia // eu.vendeli.tgbot.types.msg/Message.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
        final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
    final val sticker // eu.vendeli.tgbot.types.msg/Message.sticker|{}sticker[0]
        final fun <get-sticker>(): eu.vendeli.tgbot.types.media/Sticker? // eu.vendeli.tgbot.types.msg/Message.sticker.<get-sticker>|<get-sticker>(){}[0]
    final val story // eu.vendeli.tgbot.types.msg/Message.story|{}story[0]
        final fun <get-story>(): eu.vendeli.tgbot.types.media/Story? // eu.vendeli.tgbot.types.msg/Message.story.<get-story>|<get-story>(){}[0]
    final val successfulPayment // eu.vendeli.tgbot.types.msg/Message.successfulPayment|{}successfulPayment[0]
        final fun <get-successfulPayment>(): eu.vendeli.tgbot.types.payment/SuccessfulPayment? // eu.vendeli.tgbot.types.msg/Message.successfulPayment.<get-successfulPayment>|<get-successfulPayment>(){}[0]
    final val supergroupChatCreated // eu.vendeli.tgbot.types.msg/Message.supergroupChatCreated|{}supergroupChatCreated[0]
        final fun <get-supergroupChatCreated>(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.supergroupChatCreated.<get-supergroupChatCreated>|<get-supergroupChatCreated>(){}[0]
    final val text // eu.vendeli.tgbot.types.msg/Message.text|{}text[0]
        final fun <get-text>(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.text.<get-text>|<get-text>(){}[0]
    final val usersShared // eu.vendeli.tgbot.types.msg/Message.usersShared|{}usersShared[0]
        final fun <get-usersShared>(): eu.vendeli.tgbot.types/UsersShared? // eu.vendeli.tgbot.types.msg/Message.usersShared.<get-usersShared>|<get-usersShared>(){}[0]
    final val venue // eu.vendeli.tgbot.types.msg/Message.venue|{}venue[0]
        final fun <get-venue>(): eu.vendeli.tgbot.types/Venue? // eu.vendeli.tgbot.types.msg/Message.venue.<get-venue>|<get-venue>(){}[0]
    final val viaBot // eu.vendeli.tgbot.types.msg/Message.viaBot|{}viaBot[0]
        final fun <get-viaBot>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/Message.viaBot.<get-viaBot>|<get-viaBot>(){}[0]
    final val video // eu.vendeli.tgbot.types.msg/Message.video|{}video[0]
        final fun <get-video>(): eu.vendeli.tgbot.types.media/Video? // eu.vendeli.tgbot.types.msg/Message.video.<get-video>|<get-video>(){}[0]
    final val videoChatEnded // eu.vendeli.tgbot.types.msg/Message.videoChatEnded|{}videoChatEnded[0]
        final fun <get-videoChatEnded>(): eu.vendeli.tgbot.types.media/VideoChatEnded? // eu.vendeli.tgbot.types.msg/Message.videoChatEnded.<get-videoChatEnded>|<get-videoChatEnded>(){}[0]
    final val videoChatParticipantsInvited // eu.vendeli.tgbot.types.msg/Message.videoChatParticipantsInvited|{}videoChatParticipantsInvited[0]
        final fun <get-videoChatParticipantsInvited>(): eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited? // eu.vendeli.tgbot.types.msg/Message.videoChatParticipantsInvited.<get-videoChatParticipantsInvited>|<get-videoChatParticipantsInvited>(){}[0]
    final val videoChatScheduled // eu.vendeli.tgbot.types.msg/Message.videoChatScheduled|{}videoChatScheduled[0]
        final fun <get-videoChatScheduled>(): eu.vendeli.tgbot.types.media/VideoChatScheduled? // eu.vendeli.tgbot.types.msg/Message.videoChatScheduled.<get-videoChatScheduled>|<get-videoChatScheduled>(){}[0]
    final val videoChatStarted // eu.vendeli.tgbot.types.msg/Message.videoChatStarted|{}videoChatStarted[0]
        final fun <get-videoChatStarted>(): eu.vendeli.tgbot.types.media/VideoChatStarted? // eu.vendeli.tgbot.types.msg/Message.videoChatStarted.<get-videoChatStarted>|<get-videoChatStarted>(){}[0]
    final val videoNote // eu.vendeli.tgbot.types.msg/Message.videoNote|{}videoNote[0]
        final fun <get-videoNote>(): eu.vendeli.tgbot.types.media/VideoNote? // eu.vendeli.tgbot.types.msg/Message.videoNote.<get-videoNote>|<get-videoNote>(){}[0]
    final val voice // eu.vendeli.tgbot.types.msg/Message.voice|{}voice[0]
        final fun <get-voice>(): eu.vendeli.tgbot.types.media/Voice? // eu.vendeli.tgbot.types.msg/Message.voice.<get-voice>|<get-voice>(){}[0]
    final val webAppData // eu.vendeli.tgbot.types.msg/Message.webAppData|{}webAppData[0]
        final fun <get-webAppData>(): eu.vendeli.tgbot.types.keyboard/WebAppData? // eu.vendeli.tgbot.types.msg/Message.webAppData.<get-webAppData>|<get-webAppData>(){}[0]
    final val writeAccessAllowed // eu.vendeli.tgbot.types.msg/Message.writeAccessAllowed|{}writeAccessAllowed[0]
        final fun <get-writeAccessAllowed>(): eu.vendeli.tgbot.types/WriteAccessAllowed? // eu.vendeli.tgbot.types.msg/Message.writeAccessAllowed.<get-writeAccessAllowed>|<get-writeAccessAllowed>(){}[0]

    final fun component1(): kotlin/Long // eu.vendeli.tgbot.types.msg/Message.component1|component1(){}[0]
    final fun component10(): eu.vendeli.tgbot.types.msg/MessageOrigin? // eu.vendeli.tgbot.types.msg/Message.component10|component10(){}[0]
    final fun component11(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.component11|component11(){}[0]
    final fun component12(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.component12|component12(){}[0]
    final fun component13(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types.msg/Message.component13|component13(){}[0]
    final fun component14(): eu.vendeli.tgbot.types/ExternalReplyInfo? // eu.vendeli.tgbot.types.msg/Message.component14|component14(){}[0]
    final fun component15(): eu.vendeli.tgbot.types.media/Story? // eu.vendeli.tgbot.types.msg/Message.component15|component15(){}[0]
    final fun component16(): eu.vendeli.tgbot.types/TextQuote? // eu.vendeli.tgbot.types.msg/Message.component16|component16(){}[0]
    final fun component17(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/Message.component17|component17(){}[0]
    final fun component18(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.msg/Message.component18|component18(){}[0]
    final fun component19(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.component19|component19(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.msg/Message.component2|component2(){}[0]
    final fun component20(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.component20|component20(){}[0]
    final fun component21(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.component21|component21(){}[0]
    final fun component22(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.component22|component22(){}[0]
    final fun component23(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.component23|component23(){}[0]
    final fun component24(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.msg/Message.component24|component24(){}[0]
    final fun component25(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.component25|component25(){}[0]
    final fun component26(): eu.vendeli.tgbot.types/LinkPreviewOptions? // eu.vendeli.tgbot.types.msg/Message.component26|component26(){}[0]
    final fun component27(): eu.vendeli.tgbot.types.media/Animation? // eu.vendeli.tgbot.types.msg/Message.component27|component27(){}[0]
    final fun component28(): eu.vendeli.tgbot.types.media/Audio? // eu.vendeli.tgbot.types.msg/Message.component28|component28(){}[0]
    final fun component29(): eu.vendeli.tgbot.types.media/Document? // eu.vendeli.tgbot.types.msg/Message.component29|component29(){}[0]
    final fun component3(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/Message.component3|component3(){}[0]
    final fun component30(): eu.vendeli.tgbot.types.media/PaidMediaInfo? // eu.vendeli.tgbot.types.msg/Message.component30|component30(){}[0]
    final fun component31(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? // eu.vendeli.tgbot.types.msg/Message.component31|component31(){}[0]
    final fun component32(): eu.vendeli.tgbot.types.media/Sticker? // eu.vendeli.tgbot.types.msg/Message.component32|component32(){}[0]
    final fun component33(): eu.vendeli.tgbot.types.media/Story? // eu.vendeli.tgbot.types.msg/Message.component33|component33(){}[0]
    final fun component34(): eu.vendeli.tgbot.types.media/Video? // eu.vendeli.tgbot.types.msg/Message.component34|component34(){}[0]
    final fun component35(): eu.vendeli.tgbot.types.media/VideoNote? // eu.vendeli.tgbot.types.msg/Message.component35|component35(){}[0]
    final fun component36(): eu.vendeli.tgbot.types.media/Voice? // eu.vendeli.tgbot.types.msg/Message.component36|component36(){}[0]
    final fun component37(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.component37|component37(){}[0]
    final fun component38(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.msg/Message.component38|component38(){}[0]
    final fun component39(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.component39|component39(){}[0]
    final fun component4(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types.msg/Message.component4|component4(){}[0]
    final fun component40(): eu.vendeli.tgbot.types/Contact? // eu.vendeli.tgbot.types.msg/Message.component40|component40(){}[0]
    final fun component41(): eu.vendeli.tgbot.types.game/Dice? // eu.vendeli.tgbot.types.msg/Message.component41|component41(){}[0]
    final fun component42(): eu.vendeli.tgbot.types.game/Game? // eu.vendeli.tgbot.types.msg/Message.component42|component42(){}[0]
    final fun component43(): eu.vendeli.tgbot.types.poll/Poll? // eu.vendeli.tgbot.types.msg/Message.component43|component43(){}[0]
    final fun component44(): eu.vendeli.tgbot.types/Venue? // eu.vendeli.tgbot.types.msg/Message.component44|component44(){}[0]
    final fun component45(): eu.vendeli.tgbot.types/Location? // eu.vendeli.tgbot.types.msg/Message.component45|component45(){}[0]
    final fun component46(): kotlin.collections/List<eu.vendeli.tgbot.types/User>? // eu.vendeli.tgbot.types.msg/Message.component46|component46(){}[0]
    final fun component47(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/Message.component47|component47(){}[0]
    final fun component48(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.component48|component48(){}[0]
    final fun component49(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? // eu.vendeli.tgbot.types.msg/Message.component49|component49(){}[0]
    final fun component5(): kotlin/Int? // eu.vendeli.tgbot.types.msg/Message.component5|component5(){}[0]
    final fun component50(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.component50|component50(){}[0]
    final fun component51(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.component51|component51(){}[0]
    final fun component52(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.component52|component52(){}[0]
    final fun component53(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.component53|component53(){}[0]
    final fun component54(): eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged? // eu.vendeli.tgbot.types.msg/Message.component54|component54(){}[0]
    final fun component55(): kotlin/Long? // eu.vendeli.tgbot.types.msg/Message.component55|component55(){}[0]
    final fun component56(): kotlin/Long? // eu.vendeli.tgbot.types.msg/Message.component56|component56(){}[0]
    final fun component57(): eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage? // eu.vendeli.tgbot.types.msg/Message.component57|component57(){}[0]
    final fun component58(): eu.vendeli.tgbot.types.payment/Invoice? // eu.vendeli.tgbot.types.msg/Message.component58|component58(){}[0]
    final fun component59(): eu.vendeli.tgbot.types.payment/SuccessfulPayment? // eu.vendeli.tgbot.types.msg/Message.component59|component59(){}[0]
    final fun component6(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/Message.component6|component6(){}[0]
    final fun component60(): eu.vendeli.tgbot.types.payment/RefundedPayment? // eu.vendeli.tgbot.types.msg/Message.component60|component60(){}[0]
    final fun component61(): eu.vendeli.tgbot.types/UsersShared? // eu.vendeli.tgbot.types.msg/Message.component61|component61(){}[0]
    final fun component62(): eu.vendeli.tgbot.types.chat/ChatShared? // eu.vendeli.tgbot.types.msg/Message.component62|component62(){}[0]
    final fun component63(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.component63|component63(){}[0]
    final fun component64(): eu.vendeli.tgbot.types/WriteAccessAllowed? // eu.vendeli.tgbot.types.msg/Message.component64|component64(){}[0]
    final fun component65(): eu.vendeli.tgbot.types.passport/PassportData? // eu.vendeli.tgbot.types.msg/Message.component65|component65(){}[0]
    final fun component66(): eu.vendeli.tgbot.types/ProximityAlertTriggered? // eu.vendeli.tgbot.types.msg/Message.component66|component66(){}[0]
    final fun component67(): eu.vendeli.tgbot.types.boost/ChatBoostAdded? // eu.vendeli.tgbot.types.msg/Message.component67|component67(){}[0]
    final fun component68(): eu.vendeli.tgbot.types.forum/ForumTopicCreated? // eu.vendeli.tgbot.types.msg/Message.component68|component68(){}[0]
    final fun component69(): eu.vendeli.tgbot.types.forum/ForumTopicEdited? // eu.vendeli.tgbot.types.msg/Message.component69|component69(){}[0]
    final fun component7(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/Message.component7|component7(){}[0]
    final fun component70(): eu.vendeli.tgbot.types.forum/ForumTopicClosed? // eu.vendeli.tgbot.types.msg/Message.component70|component70(){}[0]
    final fun component71(): eu.vendeli.tgbot.types.forum/ForumTopicReopened? // eu.vendeli.tgbot.types.msg/Message.component71|component71(){}[0]
    final fun component72(): eu.vendeli.tgbot.types.forum/GeneralForumTopicHidden? // eu.vendeli.tgbot.types.msg/Message.component72|component72(){}[0]
    final fun component73(): eu.vendeli.tgbot.types.forum/GeneralForumTopicUnhidden? // eu.vendeli.tgbot.types.msg/Message.component73|component73(){}[0]
    final fun component74(): eu.vendeli.tgbot.types.giveaway/GiveawayCreated? // eu.vendeli.tgbot.types.msg/Message.component74|component74(){}[0]
    final fun component75(): eu.vendeli.tgbot.types.chat/ChatBackground? // eu.vendeli.tgbot.types.msg/Message.component75|component75(){}[0]
    final fun component76(): eu.vendeli.tgbot.types.giveaway/Giveaway? // eu.vendeli.tgbot.types.msg/Message.component76|component76(){}[0]
    final fun component77(): eu.vendeli.tgbot.types.giveaway/GiveawayWinners? // eu.vendeli.tgbot.types.msg/Message.component77|component77(){}[0]
    final fun component78(): eu.vendeli.tgbot.types.giveaway/GiveawayCompleted? // eu.vendeli.tgbot.types.msg/Message.component78|component78(){}[0]
    final fun component79(): eu.vendeli.tgbot.types.media/VideoChatScheduled? // eu.vendeli.tgbot.types.msg/Message.component79|component79(){}[0]
    final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.msg/Message.component8|component8(){}[0]
    final fun component80(): eu.vendeli.tgbot.types.media/VideoChatStarted? // eu.vendeli.tgbot.types.msg/Message.component80|component80(){}[0]
    final fun component81(): eu.vendeli.tgbot.types.media/VideoChatEnded? // eu.vendeli.tgbot.types.msg/Message.component81|component81(){}[0]
    final fun component82(): eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited? // eu.vendeli.tgbot.types.msg/Message.component82|component82(){}[0]
    final fun component83(): eu.vendeli.tgbot.types.keyboard/WebAppData? // eu.vendeli.tgbot.types.msg/Message.component83|component83(){}[0]
    final fun component84(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.msg/Message.component84|component84(){}[0]
    final fun component85(): kotlin/Boolean? // eu.vendeli.tgbot.types.msg/Message.component85|component85(){}[0]
    final fun component9(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/Message.component9|component9(){}[0]
    final fun copy(kotlin/Long = ..., kotlin/Int? = ..., eu.vendeli.tgbot.types/User? = ..., eu.vendeli.tgbot.types.chat/Chat? = ..., kotlin/Int? = ..., eu.vendeli.tgbot.types/User? = ..., kotlinx.datetime/Instant = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.chat/Chat = ..., eu.vendeli.tgbot.types.msg/MessageOrigin? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types/ExternalReplyInfo? = ..., eu.vendeli.tgbot.types.media/Story? = ..., eu.vendeli.tgbot.types/TextQuote? = ..., eu.vendeli.tgbot.types/User? = ..., kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/LinkPreviewOptions? = ..., eu.vendeli.tgbot.types.media/Animation? = ..., eu.vendeli.tgbot.types.media/Audio? = ..., eu.vendeli.tgbot.types.media/Document? = ..., eu.vendeli.tgbot.types.media/PaidMediaInfo? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? = ..., eu.vendeli.tgbot.types.media/Sticker? = ..., eu.vendeli.tgbot.types.media/Story? = ..., eu.vendeli.tgbot.types.media/Video? = ..., eu.vendeli.tgbot.types.media/VideoNote? = ..., eu.vendeli.tgbot.types.media/Voice? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/Contact? = ..., eu.vendeli.tgbot.types.game/Dice? = ..., eu.vendeli.tgbot.types.game/Game? = ..., eu.vendeli.tgbot.types.poll/Poll? = ..., eu.vendeli.tgbot.types/Venue? = ..., eu.vendeli.tgbot.types/Location? = ..., kotlin.collections/List<eu.vendeli.tgbot.types/User>? = ..., eu.vendeli.tgbot.types/User? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged? = ..., kotlin/Long? = ..., kotlin/Long? = ..., eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage? = ..., eu.vendeli.tgbot.types.payment/Invoice? = ..., eu.vendeli.tgbot.types.payment/SuccessfulPayment? = ..., eu.vendeli.tgbot.types.payment/RefundedPayment? = ..., eu.vendeli.tgbot.types/UsersShared? = ..., eu.vendeli.tgbot.types.chat/ChatShared? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/WriteAccessAllowed? = ..., eu.vendeli.tgbot.types.passport/PassportData? = ..., eu.vendeli.tgbot.types/ProximityAlertTriggered? = ..., eu.vendeli.tgbot.types.boost/ChatBoostAdded? = ..., eu.vendeli.tgbot.types.forum/ForumTopicCreated? = ..., eu.vendeli.tgbot.types.forum/ForumTopicEdited? = ..., eu.vendeli.tgbot.types.forum/ForumTopicClosed? = ..., eu.vendeli.tgbot.types.forum/ForumTopicReopened? = ..., eu.vendeli.tgbot.types.forum/GeneralForumTopicHidden? = ..., eu.vendeli.tgbot.types.forum/GeneralForumTopicUnhidden? = ..., eu.vendeli.tgbot.types.giveaway/GiveawayCreated? = ..., eu.vendeli.tgbot.types.chat/ChatBackground? = ..., eu.vendeli.tgbot.types.giveaway/Giveaway? = ..., eu.vendeli.tgbot.types.giveaway/GiveawayWinners? = ..., eu.vendeli.tgbot.types.giveaway/GiveawayCompleted? = ..., eu.vendeli.tgbot.types.media/VideoChatScheduled? = ..., eu.vendeli.tgbot.types.media/VideoChatStarted? = ..., eu.vendeli.tgbot.types.media/VideoChatEnded? = ..., eu.vendeli.tgbot.types.media/VideoChatParticipantsInvited? = ..., eu.vendeli.tgbot.types.keyboard/WebAppData? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.msg/Message.copy|copy(kotlin.Long;kotlin.Int?;eu.vendeli.tgbot.types.User?;eu.vendeli.tgbot.types.chat.Chat?;kotlin.Int?;eu.vendeli.tgbot.types.User?;kotlinx.datetime.Instant;kotlin.String?;eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.types.msg.MessageOrigin?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.ExternalReplyInfo?;eu.vendeli.tgbot.types.media.Story?;eu.vendeli.tgbot.types.TextQuote?;eu.vendeli.tgbot.types.User?;kotlinx.datetime.Instant?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.String?;eu.vendeli.tgbot.types.LinkPreviewOptions?;eu.vendeli.tgbot.types.media.Animation?;eu.vendeli.tgbot.types.media.Audio?;eu.vendeli.tgbot.types.media.Document?;eu.vendeli.tgbot.types.media.PaidMediaInfo?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>?;eu.vendeli.tgbot.types.media.Sticker?;eu.vendeli.tgbot.types.media.Story?;eu.vendeli.tgbot.types.media.Video?;eu.vendeli.tgbot.types.media.VideoNote?;eu.vendeli.tgbot.types.media.Voice?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Boolean?;eu.vendeli.tgbot.types.Contact?;eu.vendeli.tgbot.types.game.Dice?;eu.vendeli.tgbot.types.game.Game?;eu.vendeli.tgbot.types.poll.Poll?;eu.vendeli.tgbot.types.Venue?;eu.vendeli.tgbot.types.Location?;kotlin.collections.List<eu.vendeli.tgbot.types.User>?;eu.vendeli.tgbot.types.User?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;eu.vendeli.tgbot.types.msg.MessageAutoDeleteTimerChanged?;kotlin.Long?;kotlin.Long?;eu.vendeli.tgbot.types.msg.MaybeInaccessibleMessage?;eu.vendeli.tgbot.types.payment.Invoice?;eu.vendeli.tgbot.types.payment.SuccessfulPayment?;eu.vendeli.tgbot.types.payment.RefundedPayment?;eu.vendeli.tgbot.types.UsersShared?;eu.vendeli.tgbot.types.chat.ChatShared?;kotlin.String?;eu.vendeli.tgbot.types.WriteAccessAllowed?;eu.vendeli.tgbot.types.passport.PassportData?;eu.vendeli.tgbot.types.ProximityAlertTriggered?;eu.vendeli.tgbot.types.boost.ChatBoostAdded?;eu.vendeli.tgbot.types.forum.ForumTopicCreated?;eu.vendeli.tgbot.types.forum.ForumTopicEdited?;eu.vendeli.tgbot.types.forum.ForumTopicClosed?;eu.vendeli.tgbot.types.forum.ForumTopicReopened?;eu.vendeli.tgbot.types.forum.GeneralForumTopicHidden?;eu.vendeli.tgbot.types.forum.GeneralForumTopicUnhidden?;eu.vendeli.tgbot.types.giveaway.GiveawayCreated?;eu.vendeli.tgbot.types.chat.ChatBackground?;eu.vendeli.tgbot.types.giveaway.Giveaway?;eu.vendeli.tgbot.types.giveaway.GiveawayWinners?;eu.vendeli.tgbot.types.giveaway.GiveawayCompleted?;eu.vendeli.tgbot.types.media.VideoChatScheduled?;eu.vendeli.tgbot.types.media.VideoChatStarted?;eu.vendeli.tgbot.types.media.VideoChatEnded?;eu.vendeli.tgbot.types.media.VideoChatParticipantsInvited?;eu.vendeli.tgbot.types.keyboard.WebAppData?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.msg/Message.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.msg/Message.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.msg/Message.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.msg/Message> { // eu.vendeli.tgbot.types.msg/Message.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.msg/Message.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.msg/Message.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.msg/Message.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.msg/Message // eu.vendeli.tgbot.types.msg/Message.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.msg/Message) // eu.vendeli.tgbot.types.msg/Message.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.msg.Message){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.msg/Message.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.msg/Message.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/Message> // eu.vendeli.tgbot.types.msg/Message.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged { // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged|null[0]
    constructor <init>(kotlin/Int) // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.<init>|<init>(kotlin.Int){}[0]

    final val messageAutoDeleteTime // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.messageAutoDeleteTime|{}messageAutoDeleteTime[0]
        final fun <get-messageAutoDeleteTime>(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.messageAutoDeleteTime.<get-messageAutoDeleteTime>|<get-messageAutoDeleteTime>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.component1|component1(){}[0]
    final fun copy(kotlin/Int = ...): eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.copy|copy(kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged> { // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged) // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.msg.MessageAutoDeleteTimerChanged){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged> // eu.vendeli.tgbot.types.msg/MessageAutoDeleteTimerChanged.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.msg/MessageEntity { // eu.vendeli.tgbot.types.msg/MessageEntity|null[0]
    constructor <init>(eu.vendeli.tgbot.types.msg/EntityType, kotlin/Int, kotlin/Int, kotlin/String? = ..., eu.vendeli.tgbot.types/User? = ..., kotlin/String? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types.msg/MessageEntity.<init>|<init>(eu.vendeli.tgbot.types.msg.EntityType;kotlin.Int;kotlin.Int;kotlin.String?;eu.vendeli.tgbot.types.User?;kotlin.String?;kotlin.String?){}[0]

    final val customEmojiId // eu.vendeli.tgbot.types.msg/MessageEntity.customEmojiId|{}customEmojiId[0]
        final fun <get-customEmojiId>(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageEntity.customEmojiId.<get-customEmojiId>|<get-customEmojiId>(){}[0]
    final val language // eu.vendeli.tgbot.types.msg/MessageEntity.language|{}language[0]
        final fun <get-language>(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageEntity.language.<get-language>|<get-language>(){}[0]
    final val length // eu.vendeli.tgbot.types.msg/MessageEntity.length|{}length[0]
        final fun <get-length>(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageEntity.length.<get-length>|<get-length>(){}[0]
    final val offset // eu.vendeli.tgbot.types.msg/MessageEntity.offset|{}offset[0]
        final fun <get-offset>(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageEntity.offset.<get-offset>|<get-offset>(){}[0]
    final val type // eu.vendeli.tgbot.types.msg/MessageEntity.type|{}type[0]
        final fun <get-type>(): eu.vendeli.tgbot.types.msg/EntityType // eu.vendeli.tgbot.types.msg/MessageEntity.type.<get-type>|<get-type>(){}[0]
    final val url // eu.vendeli.tgbot.types.msg/MessageEntity.url|{}url[0]
        final fun <get-url>(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageEntity.url.<get-url>|<get-url>(){}[0]
    final val user // eu.vendeli.tgbot.types.msg/MessageEntity.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/MessageEntity.user.<get-user>|<get-user>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.msg/EntityType // eu.vendeli.tgbot.types.msg/MessageEntity.component1|component1(){}[0]
    final fun component2(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageEntity.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageEntity.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageEntity.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/MessageEntity.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageEntity.component6|component6(){}[0]
    final fun component7(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageEntity.component7|component7(){}[0]
    final fun copy(eu.vendeli.tgbot.types.msg/EntityType = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/User? = ..., kotlin/String? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.msg/MessageEntity // eu.vendeli.tgbot.types.msg/MessageEntity.copy|copy(eu.vendeli.tgbot.types.msg.EntityType;kotlin.Int;kotlin.Int;kotlin.String?;eu.vendeli.tgbot.types.User?;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.msg/MessageEntity.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageEntity.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageEntity.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.msg/MessageEntity> { // eu.vendeli.tgbot.types.msg/MessageEntity.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.msg/MessageEntity.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.msg/MessageEntity.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.msg/MessageEntity.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.msg/MessageEntity // eu.vendeli.tgbot.types.msg/MessageEntity.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.msg/MessageEntity) // eu.vendeli.tgbot.types.msg/MessageEntity.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.msg.MessageEntity){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.msg/MessageEntity.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.msg/MessageEntity.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/MessageEntity> // eu.vendeli.tgbot.types.msg/MessageEntity.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.msg/MessageId : eu.vendeli.tgbot.interfaces.marker/MultipleResponse { // eu.vendeli.tgbot.types.msg/MessageId|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.tgbot.types.msg/MessageId.<init>|<init>(kotlin.Long){}[0]

    final val messageId // eu.vendeli.tgbot.types.msg/MessageId.messageId|{}messageId[0]
        final fun <get-messageId>(): kotlin/Long // eu.vendeli.tgbot.types.msg/MessageId.messageId.<get-messageId>|<get-messageId>(){}[0]

    final fun component1(): kotlin/Long // eu.vendeli.tgbot.types.msg/MessageId.component1|component1(){}[0]
    final fun copy(kotlin/Long = ...): eu.vendeli.tgbot.types.msg/MessageId // eu.vendeli.tgbot.types.msg/MessageId.copy|copy(kotlin.Long){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.msg/MessageId.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageId.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageId.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.msg/MessageId> { // eu.vendeli.tgbot.types.msg/MessageId.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.msg/MessageId.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.msg/MessageId.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.msg/MessageId.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.msg/MessageId // eu.vendeli.tgbot.types.msg/MessageId.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.msg/MessageId) // eu.vendeli.tgbot.types.msg/MessageId.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.msg.MessageId){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.msg/MessageId.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/MessageId> // eu.vendeli.tgbot.types.msg/MessageId.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated { // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated|null[0]
    constructor <init>(eu.vendeli.tgbot.types.chat/Chat, kotlin/Long, kotlinx.datetime/Instant, kotlin.collections/List<eu.vendeli.tgbot.types/ReactionCount>) // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.<init>|<init>(eu.vendeli.tgbot.types.chat.Chat;kotlin.Long;kotlinx.datetime.Instant;kotlin.collections.List<eu.vendeli.tgbot.types.ReactionCount>){}[0]

    final val chat // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.chat|{}chat[0]
        final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.chat.<get-chat>|<get-chat>(){}[0]
    final val date // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.date|{}date[0]
        final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.date.<get-date>|<get-date>(){}[0]
    final val messageId // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.messageId|{}messageId[0]
        final fun <get-messageId>(): kotlin/Long // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.messageId.<get-messageId>|<get-messageId>(){}[0]
    final val reactions // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.reactions|{}reactions[0]
        final fun <get-reactions>(): kotlin.collections/List<eu.vendeli.tgbot.types/ReactionCount> // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.reactions.<get-reactions>|<get-reactions>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.component1|component1(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.component2|component2(){}[0]
    final fun component3(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<eu.vendeli.tgbot.types/ReactionCount> // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.component4|component4(){}[0]
    final fun copy(eu.vendeli.tgbot.types.chat/Chat = ..., kotlin/Long = ..., kotlinx.datetime/Instant = ..., kotlin.collections/List<eu.vendeli.tgbot.types/ReactionCount> = ...): eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.copy|copy(eu.vendeli.tgbot.types.chat.Chat;kotlin.Long;kotlinx.datetime.Instant;kotlin.collections.List<eu.vendeli.tgbot.types.ReactionCount>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated> { // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated) // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.msg.MessageReactionCountUpdated){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated> // eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.msg/MessageReactionUpdated { // eu.vendeli.tgbot.types.msg/MessageReactionUpdated|null[0]
    constructor <init>(eu.vendeli.tgbot.types.chat/Chat, kotlin/Long, eu.vendeli.tgbot.types/User? = ..., eu.vendeli.tgbot.types.chat/Chat? = ..., kotlinx.datetime/Instant, kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType>, kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType>) // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.<init>|<init>(eu.vendeli.tgbot.types.chat.Chat;kotlin.Long;eu.vendeli.tgbot.types.User?;eu.vendeli.tgbot.types.chat.Chat?;kotlinx.datetime.Instant;kotlin.collections.List<eu.vendeli.tgbot.types.ReactionType>;kotlin.collections.List<eu.vendeli.tgbot.types.ReactionType>){}[0]

    final val actorChat // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.actorChat|{}actorChat[0]
        final fun <get-actorChat>(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.actorChat.<get-actorChat>|<get-actorChat>(){}[0]
    final val chat // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.chat|{}chat[0]
        final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.chat.<get-chat>|<get-chat>(){}[0]
    final val date // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.date|{}date[0]
        final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.date.<get-date>|<get-date>(){}[0]
    final val messageId // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.messageId|{}messageId[0]
        final fun <get-messageId>(): kotlin/Long // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.messageId.<get-messageId>|<get-messageId>(){}[0]
    final val newReaction // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.newReaction|{}newReaction[0]
        final fun <get-newReaction>(): kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType> // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.newReaction.<get-newReaction>|<get-newReaction>(){}[0]
    final val oldReaction // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.oldReaction|{}oldReaction[0]
        final fun <get-oldReaction>(): kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType> // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.oldReaction.<get-oldReaction>|<get-oldReaction>(){}[0]
    final val user // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.user.<get-user>|<get-user>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.component1|component1(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.component4|component4(){}[0]
    final fun component5(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.component5|component5(){}[0]
    final fun component6(): kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType> // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.component6|component6(){}[0]
    final fun component7(): kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType> // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.component7|component7(){}[0]
    final fun copy(eu.vendeli.tgbot.types.chat/Chat = ..., kotlin/Long = ..., eu.vendeli.tgbot.types/User? = ..., eu.vendeli.tgbot.types.chat/Chat? = ..., kotlinx.datetime/Instant = ..., kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType> = ..., kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType> = ...): eu.vendeli.tgbot.types.msg/MessageReactionUpdated // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.copy|copy(eu.vendeli.tgbot.types.chat.Chat;kotlin.Long;eu.vendeli.tgbot.types.User?;eu.vendeli.tgbot.types.chat.Chat?;kotlinx.datetime.Instant;kotlin.collections.List<eu.vendeli.tgbot.types.ReactionType>;kotlin.collections.List<eu.vendeli.tgbot.types.ReactionType>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.msg/MessageReactionUpdated> { // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.msg/MessageReactionUpdated // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.msg/MessageReactionUpdated) // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.msg.MessageReactionUpdated){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/MessageReactionUpdated> // eu.vendeli.tgbot.types.msg/MessageReactionUpdated.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.msg/PreparedInlineMessage { // eu.vendeli.tgbot.types.msg/PreparedInlineMessage|null[0]
    constructor <init>(kotlin/String, kotlinx.datetime/Instant) // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.<init>|<init>(kotlin.String;kotlinx.datetime.Instant){}[0]

    final val expirationDate // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.expirationDate|{}expirationDate[0]
        final fun <get-expirationDate>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.expirationDate.<get-expirationDate>|<get-expirationDate>(){}[0]
    final val id // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.id.<get-id>|<get-id>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.component1|component1(){}[0]
    final fun component2(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlinx.datetime/Instant = ...): eu.vendeli.tgbot.types.msg/PreparedInlineMessage // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.copy|copy(kotlin.String;kotlinx.datetime.Instant){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.msg/PreparedInlineMessage> { // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.msg/PreparedInlineMessage // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.msg/PreparedInlineMessage) // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.msg.PreparedInlineMessage){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/PreparedInlineMessage> // eu.vendeli.tgbot.types.msg/PreparedInlineMessage.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.passport/EncryptedCredentials { // eu.vendeli.tgbot.types.passport/EncryptedCredentials|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.passport/EncryptedCredentials.<init>|<init>(kotlin.String;kotlin.String;kotlin.String){}[0]

    final val data // eu.vendeli.tgbot.types.passport/EncryptedCredentials.data|{}data[0]
        final fun <get-data>(): kotlin/String // eu.vendeli.tgbot.types.passport/EncryptedCredentials.data.<get-data>|<get-data>(){}[0]
    final val hash // eu.vendeli.tgbot.types.passport/EncryptedCredentials.hash|{}hash[0]
        final fun <get-hash>(): kotlin/String // eu.vendeli.tgbot.types.passport/EncryptedCredentials.hash.<get-hash>|<get-hash>(){}[0]
    final val secret // eu.vendeli.tgbot.types.passport/EncryptedCredentials.secret|{}secret[0]
        final fun <get-secret>(): kotlin/String // eu.vendeli.tgbot.types.passport/EncryptedCredentials.secret.<get-secret>|<get-secret>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.passport/EncryptedCredentials.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.passport/EncryptedCredentials.component2|component2(){}[0]
    final fun component3(): kotlin/String // eu.vendeli.tgbot.types.passport/EncryptedCredentials.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.passport/EncryptedCredentials // eu.vendeli.tgbot.types.passport/EncryptedCredentials.copy|copy(kotlin.String;kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/EncryptedCredentials.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/EncryptedCredentials.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/EncryptedCredentials.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/EncryptedCredentials> { // eu.vendeli.tgbot.types.passport/EncryptedCredentials.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.passport/EncryptedCredentials.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/EncryptedCredentials.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/EncryptedCredentials.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/EncryptedCredentials // eu.vendeli.tgbot.types.passport/EncryptedCredentials.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/EncryptedCredentials) // eu.vendeli.tgbot.types.passport/EncryptedCredentials.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.EncryptedCredentials){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.passport/EncryptedCredentials.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/EncryptedCredentials> // eu.vendeli.tgbot.types.passport/EncryptedCredentials.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.passport/EncryptedPassportElement { // eu.vendeli.tgbot.types.passport/EncryptedPassportElement|null[0]
    constructor <init>(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.passport/PassportFile>? = ..., eu.vendeli.tgbot.types.passport/PassportFile? = ..., eu.vendeli.tgbot.types.passport/PassportFile? = ..., eu.vendeli.tgbot.types.passport/PassportFile? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.passport/PassportFile>? = ..., kotlin/String) // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.<init>|<init>(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.passport.PassportFile>?;eu.vendeli.tgbot.types.passport.PassportFile?;eu.vendeli.tgbot.types.passport.PassportFile?;eu.vendeli.tgbot.types.passport.PassportFile?;kotlin.collections.List<eu.vendeli.tgbot.types.passport.PassportFile>?;kotlin.String){}[0]

    final val data // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.data|{}data[0]
        final fun <get-data>(): kotlin/String? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.data.<get-data>|<get-data>(){}[0]
    final val email // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.email|{}email[0]
        final fun <get-email>(): kotlin/String? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.email.<get-email>|<get-email>(){}[0]
    final val files // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.files|{}files[0]
        final fun <get-files>(): kotlin.collections/List<eu.vendeli.tgbot.types.passport/PassportFile>? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.files.<get-files>|<get-files>(){}[0]
    final val frontSide // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.frontSide|{}frontSide[0]
        final fun <get-frontSide>(): eu.vendeli.tgbot.types.passport/PassportFile? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.frontSide.<get-frontSide>|<get-frontSide>(){}[0]
    final val hash // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.hash|{}hash[0]
        final fun <get-hash>(): kotlin/String // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.hash.<get-hash>|<get-hash>(){}[0]
    final val phoneNumber // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.phoneNumber|{}phoneNumber[0]
        final fun <get-phoneNumber>(): kotlin/String? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.phoneNumber.<get-phoneNumber>|<get-phoneNumber>(){}[0]
    final val reverseSide // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.reverseSide|{}reverseSide[0]
        final fun <get-reverseSide>(): eu.vendeli.tgbot.types.passport/PassportFile? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.reverseSide.<get-reverseSide>|<get-reverseSide>(){}[0]
    final val selfie // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.selfie|{}selfie[0]
        final fun <get-selfie>(): eu.vendeli.tgbot.types.passport/PassportFile? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.selfie.<get-selfie>|<get-selfie>(){}[0]
    final val translation // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.translation|{}translation[0]
        final fun <get-translation>(): kotlin.collections/List<eu.vendeli.tgbot.types.passport/PassportFile>? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.translation.<get-translation>|<get-translation>(){}[0]
    final val type // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.type|{}type[0]
        final fun <get-type>(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.type.<get-type>|<get-type>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.component1|component1(){}[0]
    final fun component10(): kotlin/String // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.component10|component10(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<eu.vendeli.tgbot.types.passport/PassportFile>? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types.passport/PassportFile? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.component6|component6(){}[0]
    final fun component7(): eu.vendeli.tgbot.types.passport/PassportFile? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.component7|component7(){}[0]
    final fun component8(): eu.vendeli.tgbot.types.passport/PassportFile? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.component8|component8(){}[0]
    final fun component9(): kotlin.collections/List<eu.vendeli.tgbot.types.passport/PassportFile>? // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.component9|component9(){}[0]
    final fun copy(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.passport/PassportFile>? = ..., eu.vendeli.tgbot.types.passport/PassportFile? = ..., eu.vendeli.tgbot.types.passport/PassportFile? = ..., eu.vendeli.tgbot.types.passport/PassportFile? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.passport/PassportFile>? = ..., kotlin/String = ...): eu.vendeli.tgbot.types.passport/EncryptedPassportElement // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.copy|copy(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.passport.PassportFile>?;eu.vendeli.tgbot.types.passport.PassportFile?;eu.vendeli.tgbot.types.passport.PassportFile?;eu.vendeli.tgbot.types.passport.PassportFile?;kotlin.collections.List<eu.vendeli.tgbot.types.passport.PassportFile>?;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/EncryptedPassportElement> { // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/EncryptedPassportElement // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/EncryptedPassportElement) // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.EncryptedPassportElement){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/EncryptedPassportElement> // eu.vendeli.tgbot.types.passport/EncryptedPassportElement.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.passport/PassportData { // eu.vendeli.tgbot.types.passport/PassportData|null[0]
    constructor <init>(kotlin.collections/List<eu.vendeli.tgbot.types.passport/EncryptedPassportElement>, eu.vendeli.tgbot.types.passport/EncryptedCredentials) // eu.vendeli.tgbot.types.passport/PassportData.<init>|<init>(kotlin.collections.List<eu.vendeli.tgbot.types.passport.EncryptedPassportElement>;eu.vendeli.tgbot.types.passport.EncryptedCredentials){}[0]

    final val credentials // eu.vendeli.tgbot.types.passport/PassportData.credentials|{}credentials[0]
        final fun <get-credentials>(): eu.vendeli.tgbot.types.passport/EncryptedCredentials // eu.vendeli.tgbot.types.passport/PassportData.credentials.<get-credentials>|<get-credentials>(){}[0]
    final val data // eu.vendeli.tgbot.types.passport/PassportData.data|{}data[0]
        final fun <get-data>(): kotlin.collections/List<eu.vendeli.tgbot.types.passport/EncryptedPassportElement> // eu.vendeli.tgbot.types.passport/PassportData.data.<get-data>|<get-data>(){}[0]

    final fun component1(): kotlin.collections/List<eu.vendeli.tgbot.types.passport/EncryptedPassportElement> // eu.vendeli.tgbot.types.passport/PassportData.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.passport/EncryptedCredentials // eu.vendeli.tgbot.types.passport/PassportData.component2|component2(){}[0]
    final fun copy(kotlin.collections/List<eu.vendeli.tgbot.types.passport/EncryptedPassportElement> = ..., eu.vendeli.tgbot.types.passport/EncryptedCredentials = ...): eu.vendeli.tgbot.types.passport/PassportData // eu.vendeli.tgbot.types.passport/PassportData.copy|copy(kotlin.collections.List<eu.vendeli.tgbot.types.passport.EncryptedPassportElement>;eu.vendeli.tgbot.types.passport.EncryptedCredentials){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/PassportData.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportData.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportData.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/PassportData> { // eu.vendeli.tgbot.types.passport/PassportData.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.passport/PassportData.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/PassportData.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/PassportData.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/PassportData // eu.vendeli.tgbot.types.passport/PassportData.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/PassportData) // eu.vendeli.tgbot.types.passport/PassportData.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.PassportData){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.passport/PassportData.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.passport/PassportData.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/PassportData> // eu.vendeli.tgbot.types.passport/PassportData.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.passport/PassportFile { // eu.vendeli.tgbot.types.passport/PassportFile|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Int, kotlinx.datetime/Instant) // eu.vendeli.tgbot.types.passport/PassportFile.<init>|<init>(kotlin.String;kotlin.String;kotlin.Int;kotlinx.datetime.Instant){}[0]

    final val fileDate // eu.vendeli.tgbot.types.passport/PassportFile.fileDate|{}fileDate[0]
        final fun <get-fileDate>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.passport/PassportFile.fileDate.<get-fileDate>|<get-fileDate>(){}[0]
    final val fileId // eu.vendeli.tgbot.types.passport/PassportFile.fileId|{}fileId[0]
        final fun <get-fileId>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportFile.fileId.<get-fileId>|<get-fileId>(){}[0]
    final val fileSize // eu.vendeli.tgbot.types.passport/PassportFile.fileSize|{}fileSize[0]
        final fun <get-fileSize>(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportFile.fileSize.<get-fileSize>|<get-fileSize>(){}[0]
    final val fileUniqueId // eu.vendeli.tgbot.types.passport/PassportFile.fileUniqueId|{}fileUniqueId[0]
        final fun <get-fileUniqueId>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportFile.fileUniqueId.<get-fileUniqueId>|<get-fileUniqueId>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportFile.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportFile.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportFile.component3|component3(){}[0]
    final fun component4(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.passport/PassportFile.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Int = ..., kotlinx.datetime/Instant = ...): eu.vendeli.tgbot.types.passport/PassportFile // eu.vendeli.tgbot.types.passport/PassportFile.copy|copy(kotlin.String;kotlin.String;kotlin.Int;kotlinx.datetime.Instant){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/PassportFile.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportFile.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportFile.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/PassportFile> { // eu.vendeli.tgbot.types.passport/PassportFile.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.passport/PassportFile.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/PassportFile.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/PassportFile.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/PassportFile // eu.vendeli.tgbot.types.passport/PassportFile.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/PassportFile) // eu.vendeli.tgbot.types.passport/PassportFile.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.PassportFile){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.passport/PassportFile.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/PassportFile> // eu.vendeli.tgbot.types.passport/PassportFile.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.payment/Invoice { // eu.vendeli.tgbot.types.payment/Invoice|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String, eu.vendeli.tgbot.types.internal/Currency, kotlin/Int) // eu.vendeli.tgbot.types.payment/Invoice.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;eu.vendeli.tgbot.types.internal.Currency;kotlin.Int){}[0]

    final val currency // eu.vendeli.tgbot.types.payment/Invoice.currency|{}currency[0]
        final fun <get-currency>(): eu.vendeli.tgbot.types.internal/Currency // eu.vendeli.tgbot.types.payment/Invoice.currency.<get-currency>|<get-currency>(){}[0]
    final val description // eu.vendeli.tgbot.types.payment/Invoice.description|{}description[0]
        final fun <get-description>(): kotlin/String // eu.vendeli.tgbot.types.payment/Invoice.description.<get-description>|<get-description>(){}[0]
    final val startParameter // eu.vendeli.tgbot.types.payment/Invoice.startParameter|{}startParameter[0]
        final fun <get-startParameter>(): kotlin/String // eu.vendeli.tgbot.types.payment/Invoice.startParameter.<get-startParameter>|<get-startParameter>(){}[0]
    final val title // eu.vendeli.tgbot.types.payment/Invoice.title|{}title[0]
        final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.payment/Invoice.title.<get-title>|<get-title>(){}[0]
    final val totalAmount // eu.vendeli.tgbot.types.payment/Invoice.totalAmount|{}totalAmount[0]
        final fun <get-totalAmount>(): kotlin/Int // eu.vendeli.tgbot.types.payment/Invoice.totalAmount.<get-totalAmount>|<get-totalAmount>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.payment/Invoice.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.payment/Invoice.component2|component2(){}[0]
    final fun component3(): kotlin/String // eu.vendeli.tgbot.types.payment/Invoice.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types.internal/Currency // eu.vendeli.tgbot.types.payment/Invoice.component4|component4(){}[0]
    final fun component5(): kotlin/Int // eu.vendeli.tgbot.types.payment/Invoice.component5|component5(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., eu.vendeli.tgbot.types.internal/Currency = ..., kotlin/Int = ...): eu.vendeli.tgbot.types.payment/Invoice // eu.vendeli.tgbot.types.payment/Invoice.copy|copy(kotlin.String;kotlin.String;kotlin.String;eu.vendeli.tgbot.types.internal.Currency;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.payment/Invoice.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.payment/Invoice.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.payment/Invoice.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.payment/Invoice> { // eu.vendeli.tgbot.types.payment/Invoice.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.payment/Invoice.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.payment/Invoice.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.payment/Invoice.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.payment/Invoice // eu.vendeli.tgbot.types.payment/Invoice.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.payment/Invoice) // eu.vendeli.tgbot.types.payment/Invoice.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.payment.Invoice){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.payment/Invoice.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.payment/Invoice.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.payment/Invoice> // eu.vendeli.tgbot.types.payment/Invoice.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.payment/LabeledPrice { // eu.vendeli.tgbot.types.payment/LabeledPrice|null[0]
    constructor <init>(kotlin/String, kotlin/Int) // eu.vendeli.tgbot.types.payment/LabeledPrice.<init>|<init>(kotlin.String;kotlin.Int){}[0]

    final val amount // eu.vendeli.tgbot.types.payment/LabeledPrice.amount|{}amount[0]
        final fun <get-amount>(): kotlin/Int // eu.vendeli.tgbot.types.payment/LabeledPrice.amount.<get-amount>|<get-amount>(){}[0]
    final val label // eu.vendeli.tgbot.types.payment/LabeledPrice.label|{}label[0]
        final fun <get-label>(): kotlin/String // eu.vendeli.tgbot.types.payment/LabeledPrice.label.<get-label>|<get-label>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.payment/LabeledPrice.component1|component1(){}[0]
    final fun component2(): kotlin/Int // eu.vendeli.tgbot.types.payment/LabeledPrice.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Int = ...): eu.vendeli.tgbot.types.payment/LabeledPrice // eu.vendeli.tgbot.types.payment/LabeledPrice.copy|copy(kotlin.String;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.payment/LabeledPrice.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.payment/LabeledPrice.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.payment/LabeledPrice.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.payment/LabeledPrice> { // eu.vendeli.tgbot.types.payment/LabeledPrice.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.payment/LabeledPrice.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.payment/LabeledPrice.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.payment/LabeledPrice.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.payment/LabeledPrice // eu.vendeli.tgbot.types.payment/LabeledPrice.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.payment/LabeledPrice) // eu.vendeli.tgbot.types.payment/LabeledPrice.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.payment.LabeledPrice){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.payment/LabeledPrice.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.payment/LabeledPrice> // eu.vendeli.tgbot.types.payment/LabeledPrice.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.payment/OrderInfo { // eu.vendeli.tgbot.types.payment/OrderInfo|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.payment/ShippingAddress? = ...) // eu.vendeli.tgbot.types.payment/OrderInfo.<init>|<init>(kotlin.String?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.payment.ShippingAddress?){}[0]

    final val email // eu.vendeli.tgbot.types.payment/OrderInfo.email|{}email[0]
        final fun <get-email>(): kotlin/String? // eu.vendeli.tgbot.types.payment/OrderInfo.email.<get-email>|<get-email>(){}[0]
    final val name // eu.vendeli.tgbot.types.payment/OrderInfo.name|{}name[0]
        final fun <get-name>(): kotlin/String? // eu.vendeli.tgbot.types.payment/OrderInfo.name.<get-name>|<get-name>(){}[0]
    final val phoneNumber // eu.vendeli.tgbot.types.payment/OrderInfo.phoneNumber|{}phoneNumber[0]
        final fun <get-phoneNumber>(): kotlin/String? // eu.vendeli.tgbot.types.payment/OrderInfo.phoneNumber.<get-phoneNumber>|<get-phoneNumber>(){}[0]
    final val shippingAddress // eu.vendeli.tgbot.types.payment/OrderInfo.shippingAddress|{}shippingAddress[0]
        final fun <get-shippingAddress>(): eu.vendeli.tgbot.types.payment/ShippingAddress? // eu.vendeli.tgbot.types.payment/OrderInfo.shippingAddress.<get-shippingAddress>|<get-shippingAddress>(){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types.payment/OrderInfo.component1|component1(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.tgbot.types.payment/OrderInfo.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.payment/OrderInfo.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types.payment/ShippingAddress? // eu.vendeli.tgbot.types.payment/OrderInfo.component4|component4(){}[0]
    final fun copy(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.payment/ShippingAddress? = ...): eu.vendeli.tgbot.types.payment/OrderInfo // eu.vendeli.tgbot.types.payment/OrderInfo.copy|copy(kotlin.String?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.payment.ShippingAddress?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.payment/OrderInfo.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.payment/OrderInfo.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.payment/OrderInfo.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.payment/OrderInfo> { // eu.vendeli.tgbot.types.payment/OrderInfo.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.payment/OrderInfo.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.payment/OrderInfo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.payment/OrderInfo.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.payment/OrderInfo // eu.vendeli.tgbot.types.payment/OrderInfo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.payment/OrderInfo) // eu.vendeli.tgbot.types.payment/OrderInfo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.payment.OrderInfo){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.payment/OrderInfo.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.payment/OrderInfo> // eu.vendeli.tgbot.types.payment/OrderInfo.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.payment/PreCheckoutQuery { // eu.vendeli.tgbot.types.payment/PreCheckoutQuery|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types/User, eu.vendeli.tgbot.types.internal/Currency, kotlin/Int, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types.payment/OrderInfo? = ...) // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.internal.Currency;kotlin.Int;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.payment.OrderInfo?){}[0]

    final val currency // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.currency|{}currency[0]
        final fun <get-currency>(): eu.vendeli.tgbot.types.internal/Currency // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.currency.<get-currency>|<get-currency>(){}[0]
    final val from // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.from|{}from[0]
        final fun <get-from>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.from.<get-from>|<get-from>(){}[0]
    final val id // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.id.<get-id>|<get-id>(){}[0]
    final val invoicePayload // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.invoicePayload|{}invoicePayload[0]
        final fun <get-invoicePayload>(): kotlin/String // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.invoicePayload.<get-invoicePayload>|<get-invoicePayload>(){}[0]
    final val orderInfo // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.orderInfo|{}orderInfo[0]
        final fun <get-orderInfo>(): eu.vendeli.tgbot.types.payment/OrderInfo? // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.orderInfo.<get-orderInfo>|<get-orderInfo>(){}[0]
    final val shippingOptionId // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.shippingOptionId|{}shippingOptionId[0]
        final fun <get-shippingOptionId>(): kotlin/String? // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.shippingOptionId.<get-shippingOptionId>|<get-shippingOptionId>(){}[0]
    final val totalAmount // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.totalAmount|{}totalAmount[0]
        final fun <get-totalAmount>(): kotlin/Int // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.totalAmount.<get-totalAmount>|<get-totalAmount>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.internal/Currency // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.component3|component3(){}[0]
    final fun component4(): kotlin/Int // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.component4|component4(){}[0]
    final fun component5(): kotlin/String // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.component6|component6(){}[0]
    final fun component7(): eu.vendeli.tgbot.types.payment/OrderInfo? // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.component7|component7(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types/User = ..., eu.vendeli.tgbot.types.internal/Currency = ..., kotlin/Int = ..., kotlin/String = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.payment/OrderInfo? = ...): eu.vendeli.tgbot.types.payment/PreCheckoutQuery // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.copy|copy(kotlin.String;eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.internal.Currency;kotlin.Int;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.payment.OrderInfo?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.payment/PreCheckoutQuery> { // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.payment/PreCheckoutQuery // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.payment/PreCheckoutQuery) // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.payment.PreCheckoutQuery){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.payment/PreCheckoutQuery> // eu.vendeli.tgbot.types.payment/PreCheckoutQuery.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.payment/RefundedPayment { // eu.vendeli.tgbot.types.payment/RefundedPayment|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/Currency = ..., kotlin/Int, kotlin/String, kotlin/String, kotlin/String? = ...) // eu.vendeli.tgbot.types.payment/RefundedPayment.<init>|<init>(eu.vendeli.tgbot.types.internal.Currency;kotlin.Int;kotlin.String;kotlin.String;kotlin.String?){}[0]

    final val currency // eu.vendeli.tgbot.types.payment/RefundedPayment.currency|{}currency[0]
        final fun <get-currency>(): eu.vendeli.tgbot.types.internal/Currency // eu.vendeli.tgbot.types.payment/RefundedPayment.currency.<get-currency>|<get-currency>(){}[0]
    final val invoicePayload // eu.vendeli.tgbot.types.payment/RefundedPayment.invoicePayload|{}invoicePayload[0]
        final fun <get-invoicePayload>(): kotlin/String // eu.vendeli.tgbot.types.payment/RefundedPayment.invoicePayload.<get-invoicePayload>|<get-invoicePayload>(){}[0]
    final val providerPaymentChargeId // eu.vendeli.tgbot.types.payment/RefundedPayment.providerPaymentChargeId|{}providerPaymentChargeId[0]
        final fun <get-providerPaymentChargeId>(): kotlin/String? // eu.vendeli.tgbot.types.payment/RefundedPayment.providerPaymentChargeId.<get-providerPaymentChargeId>|<get-providerPaymentChargeId>(){}[0]
    final val telegramPaymentChargeId // eu.vendeli.tgbot.types.payment/RefundedPayment.telegramPaymentChargeId|{}telegramPaymentChargeId[0]
        final fun <get-telegramPaymentChargeId>(): kotlin/String // eu.vendeli.tgbot.types.payment/RefundedPayment.telegramPaymentChargeId.<get-telegramPaymentChargeId>|<get-telegramPaymentChargeId>(){}[0]
    final val totalAmount // eu.vendeli.tgbot.types.payment/RefundedPayment.totalAmount|{}totalAmount[0]
        final fun <get-totalAmount>(): kotlin/Int // eu.vendeli.tgbot.types.payment/RefundedPayment.totalAmount.<get-totalAmount>|<get-totalAmount>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.internal/Currency // eu.vendeli.tgbot.types.payment/RefundedPayment.component1|component1(){}[0]
    final fun component2(): kotlin/Int // eu.vendeli.tgbot.types.payment/RefundedPayment.component2|component2(){}[0]
    final fun component3(): kotlin/String // eu.vendeli.tgbot.types.payment/RefundedPayment.component3|component3(){}[0]
    final fun component4(): kotlin/String // eu.vendeli.tgbot.types.payment/RefundedPayment.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.payment/RefundedPayment.component5|component5(){}[0]
    final fun copy(eu.vendeli.tgbot.types.internal/Currency = ..., kotlin/Int = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.payment/RefundedPayment // eu.vendeli.tgbot.types.payment/RefundedPayment.copy|copy(eu.vendeli.tgbot.types.internal.Currency;kotlin.Int;kotlin.String;kotlin.String;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.payment/RefundedPayment.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.payment/RefundedPayment.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.payment/RefundedPayment.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.payment/RefundedPayment> { // eu.vendeli.tgbot.types.payment/RefundedPayment.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.payment/RefundedPayment.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.payment/RefundedPayment.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.payment/RefundedPayment.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.payment/RefundedPayment // eu.vendeli.tgbot.types.payment/RefundedPayment.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.payment/RefundedPayment) // eu.vendeli.tgbot.types.payment/RefundedPayment.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.payment.RefundedPayment){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.payment/RefundedPayment.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.payment/RefundedPayment.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.payment/RefundedPayment> // eu.vendeli.tgbot.types.payment/RefundedPayment.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.payment/ShippingAddress { // eu.vendeli.tgbot.types.payment/ShippingAddress|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String, kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.payment/ShippingAddress.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.String){}[0]

    final val city // eu.vendeli.tgbot.types.payment/ShippingAddress.city|{}city[0]
        final fun <get-city>(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.city.<get-city>|<get-city>(){}[0]
    final val countryCode // eu.vendeli.tgbot.types.payment/ShippingAddress.countryCode|{}countryCode[0]
        final fun <get-countryCode>(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.countryCode.<get-countryCode>|<get-countryCode>(){}[0]
    final val postCode // eu.vendeli.tgbot.types.payment/ShippingAddress.postCode|{}postCode[0]
        final fun <get-postCode>(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.postCode.<get-postCode>|<get-postCode>(){}[0]
    final val state // eu.vendeli.tgbot.types.payment/ShippingAddress.state|{}state[0]
        final fun <get-state>(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.state.<get-state>|<get-state>(){}[0]
    final val streetLine1 // eu.vendeli.tgbot.types.payment/ShippingAddress.streetLine1|{}streetLine1[0]
        final fun <get-streetLine1>(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.streetLine1.<get-streetLine1>|<get-streetLine1>(){}[0]
    final val streetLine2 // eu.vendeli.tgbot.types.payment/ShippingAddress.streetLine2|{}streetLine2[0]
        final fun <get-streetLine2>(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.streetLine2.<get-streetLine2>|<get-streetLine2>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.component2|component2(){}[0]
    final fun component3(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.component3|component3(){}[0]
    final fun component4(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.component4|component4(){}[0]
    final fun component5(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.component5|component5(){}[0]
    final fun component6(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.component6|component6(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.payment/ShippingAddress // eu.vendeli.tgbot.types.payment/ShippingAddress.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.payment/ShippingAddress.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.payment/ShippingAddress.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingAddress.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.payment/ShippingAddress> { // eu.vendeli.tgbot.types.payment/ShippingAddress.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.payment/ShippingAddress.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.payment/ShippingAddress.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.payment/ShippingAddress.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.payment/ShippingAddress // eu.vendeli.tgbot.types.payment/ShippingAddress.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.payment/ShippingAddress) // eu.vendeli.tgbot.types.payment/ShippingAddress.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.payment.ShippingAddress){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.payment/ShippingAddress.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.payment/ShippingAddress> // eu.vendeli.tgbot.types.payment/ShippingAddress.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.payment/ShippingOption { // eu.vendeli.tgbot.types.payment/ShippingOption|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice>) // eu.vendeli.tgbot.types.payment/ShippingOption.<init>|<init>(kotlin.String;kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.payment.LabeledPrice>){}[0]

    final val id // eu.vendeli.tgbot.types.payment/ShippingOption.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingOption.id.<get-id>|<get-id>(){}[0]
    final val prices // eu.vendeli.tgbot.types.payment/ShippingOption.prices|{}prices[0]
        final fun <get-prices>(): kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice> // eu.vendeli.tgbot.types.payment/ShippingOption.prices.<get-prices>|<get-prices>(){}[0]
    final val title // eu.vendeli.tgbot.types.payment/ShippingOption.title|{}title[0]
        final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingOption.title.<get-title>|<get-title>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingOption.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingOption.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice> // eu.vendeli.tgbot.types.payment/ShippingOption.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice> = ...): eu.vendeli.tgbot.types.payment/ShippingOption // eu.vendeli.tgbot.types.payment/ShippingOption.copy|copy(kotlin.String;kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.payment.LabeledPrice>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.payment/ShippingOption.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.payment/ShippingOption.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingOption.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.payment/ShippingOption> { // eu.vendeli.tgbot.types.payment/ShippingOption.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.payment/ShippingOption.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.payment/ShippingOption.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.payment/ShippingOption.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.payment/ShippingOption // eu.vendeli.tgbot.types.payment/ShippingOption.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.payment/ShippingOption) // eu.vendeli.tgbot.types.payment/ShippingOption.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.payment.ShippingOption){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.payment/ShippingOption.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.payment/ShippingOption.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.payment/ShippingOption> // eu.vendeli.tgbot.types.payment/ShippingOption.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.payment/ShippingQuery { // eu.vendeli.tgbot.types.payment/ShippingQuery|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types/User, kotlin/String, eu.vendeli.tgbot.types.payment/ShippingAddress) // eu.vendeli.tgbot.types.payment/ShippingQuery.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.User;kotlin.String;eu.vendeli.tgbot.types.payment.ShippingAddress){}[0]

    final val from // eu.vendeli.tgbot.types.payment/ShippingQuery.from|{}from[0]
        final fun <get-from>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.payment/ShippingQuery.from.<get-from>|<get-from>(){}[0]
    final val id // eu.vendeli.tgbot.types.payment/ShippingQuery.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingQuery.id.<get-id>|<get-id>(){}[0]
    final val invoicePayload // eu.vendeli.tgbot.types.payment/ShippingQuery.invoicePayload|{}invoicePayload[0]
        final fun <get-invoicePayload>(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingQuery.invoicePayload.<get-invoicePayload>|<get-invoicePayload>(){}[0]
    final val shippingAddress // eu.vendeli.tgbot.types.payment/ShippingQuery.shippingAddress|{}shippingAddress[0]
        final fun <get-shippingAddress>(): eu.vendeli.tgbot.types.payment/ShippingAddress // eu.vendeli.tgbot.types.payment/ShippingQuery.shippingAddress.<get-shippingAddress>|<get-shippingAddress>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingQuery.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.payment/ShippingQuery.component2|component2(){}[0]
    final fun component3(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingQuery.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types.payment/ShippingAddress // eu.vendeli.tgbot.types.payment/ShippingQuery.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types/User = ..., kotlin/String = ..., eu.vendeli.tgbot.types.payment/ShippingAddress = ...): eu.vendeli.tgbot.types.payment/ShippingQuery // eu.vendeli.tgbot.types.payment/ShippingQuery.copy|copy(kotlin.String;eu.vendeli.tgbot.types.User;kotlin.String;eu.vendeli.tgbot.types.payment.ShippingAddress){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.payment/ShippingQuery.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.payment/ShippingQuery.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.payment/ShippingQuery.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.payment/ShippingQuery> { // eu.vendeli.tgbot.types.payment/ShippingQuery.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.payment/ShippingQuery.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.payment/ShippingQuery.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.payment/ShippingQuery.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.payment/ShippingQuery // eu.vendeli.tgbot.types.payment/ShippingQuery.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.payment/ShippingQuery) // eu.vendeli.tgbot.types.payment/ShippingQuery.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.payment.ShippingQuery){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.payment/ShippingQuery.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.payment/ShippingQuery> // eu.vendeli.tgbot.types.payment/ShippingQuery.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.payment/SuccessfulPayment { // eu.vendeli.tgbot.types.payment/SuccessfulPayment|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal/Currency, kotlin/Int, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types.payment/OrderInfo? = ..., kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.payment/SuccessfulPayment.<init>|<init>(eu.vendeli.tgbot.types.internal.Currency;kotlin.Int;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.payment.OrderInfo?;kotlinx.datetime.Instant?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String;kotlin.String){}[0]

    final val currency // eu.vendeli.tgbot.types.payment/SuccessfulPayment.currency|{}currency[0]
        final fun <get-currency>(): eu.vendeli.tgbot.types.internal/Currency // eu.vendeli.tgbot.types.payment/SuccessfulPayment.currency.<get-currency>|<get-currency>(){}[0]
    final val invoicePayload // eu.vendeli.tgbot.types.payment/SuccessfulPayment.invoicePayload|{}invoicePayload[0]
        final fun <get-invoicePayload>(): kotlin/String // eu.vendeli.tgbot.types.payment/SuccessfulPayment.invoicePayload.<get-invoicePayload>|<get-invoicePayload>(){}[0]
    final val isFirstRecurring // eu.vendeli.tgbot.types.payment/SuccessfulPayment.isFirstRecurring|{}isFirstRecurring[0]
        final fun <get-isFirstRecurring>(): kotlin/Boolean? // eu.vendeli.tgbot.types.payment/SuccessfulPayment.isFirstRecurring.<get-isFirstRecurring>|<get-isFirstRecurring>(){}[0]
    final val isRecurring // eu.vendeli.tgbot.types.payment/SuccessfulPayment.isRecurring|{}isRecurring[0]
        final fun <get-isRecurring>(): kotlin/Boolean? // eu.vendeli.tgbot.types.payment/SuccessfulPayment.isRecurring.<get-isRecurring>|<get-isRecurring>(){}[0]
    final val orderInfo // eu.vendeli.tgbot.types.payment/SuccessfulPayment.orderInfo|{}orderInfo[0]
        final fun <get-orderInfo>(): eu.vendeli.tgbot.types.payment/OrderInfo? // eu.vendeli.tgbot.types.payment/SuccessfulPayment.orderInfo.<get-orderInfo>|<get-orderInfo>(){}[0]
    final val providerPaymentChargeId // eu.vendeli.tgbot.types.payment/SuccessfulPayment.providerPaymentChargeId|{}providerPaymentChargeId[0]
        final fun <get-providerPaymentChargeId>(): kotlin/String // eu.vendeli.tgbot.types.payment/SuccessfulPayment.providerPaymentChargeId.<get-providerPaymentChargeId>|<get-providerPaymentChargeId>(){}[0]
    final val shippingOptionId // eu.vendeli.tgbot.types.payment/SuccessfulPayment.shippingOptionId|{}shippingOptionId[0]
        final fun <get-shippingOptionId>(): kotlin/String? // eu.vendeli.tgbot.types.payment/SuccessfulPayment.shippingOptionId.<get-shippingOptionId>|<get-shippingOptionId>(){}[0]
    final val subscriptionExpirationDate // eu.vendeli.tgbot.types.payment/SuccessfulPayment.subscriptionExpirationDate|{}subscriptionExpirationDate[0]
        final fun <get-subscriptionExpirationDate>(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.payment/SuccessfulPayment.subscriptionExpirationDate.<get-subscriptionExpirationDate>|<get-subscriptionExpirationDate>(){}[0]
    final val telegramPaymentChargeId // eu.vendeli.tgbot.types.payment/SuccessfulPayment.telegramPaymentChargeId|{}telegramPaymentChargeId[0]
        final fun <get-telegramPaymentChargeId>(): kotlin/String // eu.vendeli.tgbot.types.payment/SuccessfulPayment.telegramPaymentChargeId.<get-telegramPaymentChargeId>|<get-telegramPaymentChargeId>(){}[0]
    final val totalAmount // eu.vendeli.tgbot.types.payment/SuccessfulPayment.totalAmount|{}totalAmount[0]
        final fun <get-totalAmount>(): kotlin/Int // eu.vendeli.tgbot.types.payment/SuccessfulPayment.totalAmount.<get-totalAmount>|<get-totalAmount>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.internal/Currency // eu.vendeli.tgbot.types.payment/SuccessfulPayment.component1|component1(){}[0]
    final fun component10(): kotlin/String // eu.vendeli.tgbot.types.payment/SuccessfulPayment.component10|component10(){}[0]
    final fun component2(): kotlin/Int // eu.vendeli.tgbot.types.payment/SuccessfulPayment.component2|component2(){}[0]
    final fun component3(): kotlin/String // eu.vendeli.tgbot.types.payment/SuccessfulPayment.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.payment/SuccessfulPayment.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types.payment/OrderInfo? // eu.vendeli.tgbot.types.payment/SuccessfulPayment.component5|component5(){}[0]
    final fun component6(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.payment/SuccessfulPayment.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types.payment/SuccessfulPayment.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.payment/SuccessfulPayment.component8|component8(){}[0]
    final fun component9(): kotlin/String // eu.vendeli.tgbot.types.payment/SuccessfulPayment.component9|component9(){}[0]
    final fun copy(eu.vendeli.tgbot.types.internal/Currency = ..., kotlin/Int = ..., kotlin/String = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.payment/OrderInfo? = ..., kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.payment/SuccessfulPayment // eu.vendeli.tgbot.types.payment/SuccessfulPayment.copy|copy(eu.vendeli.tgbot.types.internal.Currency;kotlin.Int;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.payment.OrderInfo?;kotlinx.datetime.Instant?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.payment/SuccessfulPayment.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.payment/SuccessfulPayment.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.payment/SuccessfulPayment.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.payment/SuccessfulPayment> { // eu.vendeli.tgbot.types.payment/SuccessfulPayment.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.payment/SuccessfulPayment.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.payment/SuccessfulPayment.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.payment/SuccessfulPayment.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.payment/SuccessfulPayment // eu.vendeli.tgbot.types.payment/SuccessfulPayment.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.payment/SuccessfulPayment) // eu.vendeli.tgbot.types.payment/SuccessfulPayment.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.payment.SuccessfulPayment){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.payment/SuccessfulPayment.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.payment/SuccessfulPayment.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.payment/SuccessfulPayment> // eu.vendeli.tgbot.types.payment/SuccessfulPayment.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.poll/InputPollOption { // eu.vendeli.tgbot.types.poll/InputPollOption|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ...) // eu.vendeli.tgbot.types.poll/InputPollOption.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?){}[0]

    final val text // eu.vendeli.tgbot.types.poll/InputPollOption.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.poll/InputPollOption.text.<get-text>|<get-text>(){}[0]
    final val textEntities // eu.vendeli.tgbot.types.poll/InputPollOption.textEntities|{}textEntities[0]
        final fun <get-textEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.poll/InputPollOption.textEntities.<get-textEntities>|<get-textEntities>(){}[0]
    final val textParseMode // eu.vendeli.tgbot.types.poll/InputPollOption.textParseMode|{}textParseMode[0]
        final fun <get-textParseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.poll/InputPollOption.textParseMode.<get-textParseMode>|<get-textParseMode>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.poll/InputPollOption.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.poll/InputPollOption.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.poll/InputPollOption.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ...): eu.vendeli.tgbot.types.poll/InputPollOption // eu.vendeli.tgbot.types.poll/InputPollOption.copy|copy(kotlin.String;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.poll/InputPollOption.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.poll/InputPollOption.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.poll/InputPollOption.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.poll/InputPollOption> { // eu.vendeli.tgbot.types.poll/InputPollOption.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.poll/InputPollOption.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.poll/InputPollOption.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.poll/InputPollOption.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.poll/InputPollOption // eu.vendeli.tgbot.types.poll/InputPollOption.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.poll/InputPollOption) // eu.vendeli.tgbot.types.poll/InputPollOption.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.poll.InputPollOption){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.poll/InputPollOption.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.poll/InputPollOption.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.poll/InputPollOption> // eu.vendeli.tgbot.types.poll/InputPollOption.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.poll/Poll { // eu.vendeli.tgbot.types.poll/Poll|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin.collections/List<eu.vendeli.tgbot.types.poll/PollOption>, kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int, kotlin/Boolean, kotlin/Boolean, eu.vendeli.tgbot.types.poll/PollType, kotlin/Boolean, kotlin/Int? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ..., kotlinx.datetime/Instant? = ...) // eu.vendeli.tgbot.types.poll/Poll.<init>|<init>(kotlin.String;kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.poll.PollOption>;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int;kotlin.Boolean;kotlin.Boolean;eu.vendeli.tgbot.types.poll.PollType;kotlin.Boolean;kotlin.Int?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?;kotlinx.datetime.Instant?){}[0]

    final val allowsMultipleAnswers // eu.vendeli.tgbot.types.poll/Poll.allowsMultipleAnswers|{}allowsMultipleAnswers[0]
        final fun <get-allowsMultipleAnswers>(): kotlin/Boolean // eu.vendeli.tgbot.types.poll/Poll.allowsMultipleAnswers.<get-allowsMultipleAnswers>|<get-allowsMultipleAnswers>(){}[0]
    final val closeDate // eu.vendeli.tgbot.types.poll/Poll.closeDate|{}closeDate[0]
        final fun <get-closeDate>(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.poll/Poll.closeDate.<get-closeDate>|<get-closeDate>(){}[0]
    final val correctOptionId // eu.vendeli.tgbot.types.poll/Poll.correctOptionId|{}correctOptionId[0]
        final fun <get-correctOptionId>(): kotlin/Int? // eu.vendeli.tgbot.types.poll/Poll.correctOptionId.<get-correctOptionId>|<get-correctOptionId>(){}[0]
    final val explanation // eu.vendeli.tgbot.types.poll/Poll.explanation|{}explanation[0]
        final fun <get-explanation>(): kotlin/String? // eu.vendeli.tgbot.types.poll/Poll.explanation.<get-explanation>|<get-explanation>(){}[0]
    final val explanationEntities // eu.vendeli.tgbot.types.poll/Poll.explanationEntities|{}explanationEntities[0]
        final fun <get-explanationEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.poll/Poll.explanationEntities.<get-explanationEntities>|<get-explanationEntities>(){}[0]
    final val id // eu.vendeli.tgbot.types.poll/Poll.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.poll/Poll.id.<get-id>|<get-id>(){}[0]
    final val isAnonymous // eu.vendeli.tgbot.types.poll/Poll.isAnonymous|{}isAnonymous[0]
        final fun <get-isAnonymous>(): kotlin/Boolean // eu.vendeli.tgbot.types.poll/Poll.isAnonymous.<get-isAnonymous>|<get-isAnonymous>(){}[0]
    final val isClosed // eu.vendeli.tgbot.types.poll/Poll.isClosed|{}isClosed[0]
        final fun <get-isClosed>(): kotlin/Boolean // eu.vendeli.tgbot.types.poll/Poll.isClosed.<get-isClosed>|<get-isClosed>(){}[0]
    final val openPeriod // eu.vendeli.tgbot.types.poll/Poll.openPeriod|{}openPeriod[0]
        final fun <get-openPeriod>(): kotlin/Int? // eu.vendeli.tgbot.types.poll/Poll.openPeriod.<get-openPeriod>|<get-openPeriod>(){}[0]
    final val options // eu.vendeli.tgbot.types.poll/Poll.options|{}options[0]
        final fun <get-options>(): kotlin.collections/List<eu.vendeli.tgbot.types.poll/PollOption> // eu.vendeli.tgbot.types.poll/Poll.options.<get-options>|<get-options>(){}[0]
    final val question // eu.vendeli.tgbot.types.poll/Poll.question|{}question[0]
        final fun <get-question>(): kotlin/String // eu.vendeli.tgbot.types.poll/Poll.question.<get-question>|<get-question>(){}[0]
    final val questionEntities // eu.vendeli.tgbot.types.poll/Poll.questionEntities|{}questionEntities[0]
        final fun <get-questionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.poll/Poll.questionEntities.<get-questionEntities>|<get-questionEntities>(){}[0]
    final val totalVoterCount // eu.vendeli.tgbot.types.poll/Poll.totalVoterCount|{}totalVoterCount[0]
        final fun <get-totalVoterCount>(): kotlin/Int // eu.vendeli.tgbot.types.poll/Poll.totalVoterCount.<get-totalVoterCount>|<get-totalVoterCount>(){}[0]
    final val type // eu.vendeli.tgbot.types.poll/Poll.type|{}type[0]
        final fun <get-type>(): eu.vendeli.tgbot.types.poll/PollType // eu.vendeli.tgbot.types.poll/Poll.type.<get-type>|<get-type>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.poll/Poll.component1|component1(){}[0]
    final fun component10(): kotlin/Int? // eu.vendeli.tgbot.types.poll/Poll.component10|component10(){}[0]
    final fun component11(): kotlin/String? // eu.vendeli.tgbot.types.poll/Poll.component11|component11(){}[0]
    final fun component12(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.poll/Poll.component12|component12(){}[0]
    final fun component13(): kotlin/Int? // eu.vendeli.tgbot.types.poll/Poll.component13|component13(){}[0]
    final fun component14(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.poll/Poll.component14|component14(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types.poll/Poll.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<eu.vendeli.tgbot.types.poll/PollOption> // eu.vendeli.tgbot.types.poll/Poll.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.poll/Poll.component4|component4(){}[0]
    final fun component5(): kotlin/Int // eu.vendeli.tgbot.types.poll/Poll.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean // eu.vendeli.tgbot.types.poll/Poll.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean // eu.vendeli.tgbot.types.poll/Poll.component7|component7(){}[0]
    final fun component8(): eu.vendeli.tgbot.types.poll/PollType // eu.vendeli.tgbot.types.poll/Poll.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean // eu.vendeli.tgbot.types.poll/Poll.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin.collections/List<eu.vendeli.tgbot.types.poll/PollOption> = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., eu.vendeli.tgbot.types.poll/PollType = ..., kotlin/Boolean = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ..., kotlinx.datetime/Instant? = ...): eu.vendeli.tgbot.types.poll/Poll // eu.vendeli.tgbot.types.poll/Poll.copy|copy(kotlin.String;kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.poll.PollOption>;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int;kotlin.Boolean;kotlin.Boolean;eu.vendeli.tgbot.types.poll.PollType;kotlin.Boolean;kotlin.Int?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?;kotlinx.datetime.Instant?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.poll/Poll.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.poll/Poll.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.poll/Poll.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.poll/Poll> { // eu.vendeli.tgbot.types.poll/Poll.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.poll/Poll.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.poll/Poll.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.poll/Poll.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.poll/Poll // eu.vendeli.tgbot.types.poll/Poll.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.poll/Poll) // eu.vendeli.tgbot.types.poll/Poll.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.poll.Poll){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.poll/Poll.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.poll/Poll.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.poll/Poll> // eu.vendeli.tgbot.types.poll/Poll.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.poll/PollOption { // eu.vendeli.tgbot.types.poll/PollOption|null[0]
    constructor <init>(kotlin/String, kotlin/Int, kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ...) // eu.vendeli.tgbot.types.poll/PollOption.<init>|<init>(kotlin.String;kotlin.Int;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?){}[0]

    final val text // eu.vendeli.tgbot.types.poll/PollOption.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.poll/PollOption.text.<get-text>|<get-text>(){}[0]
    final val textEntities // eu.vendeli.tgbot.types.poll/PollOption.textEntities|{}textEntities[0]
        final fun <get-textEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.poll/PollOption.textEntities.<get-textEntities>|<get-textEntities>(){}[0]
    final val voterCount // eu.vendeli.tgbot.types.poll/PollOption.voterCount|{}voterCount[0]
        final fun <get-voterCount>(): kotlin/Int // eu.vendeli.tgbot.types.poll/PollOption.voterCount.<get-voterCount>|<get-voterCount>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.poll/PollOption.component1|component1(){}[0]
    final fun component2(): kotlin/Int // eu.vendeli.tgbot.types.poll/PollOption.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.poll/PollOption.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Int = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ...): eu.vendeli.tgbot.types.poll/PollOption // eu.vendeli.tgbot.types.poll/PollOption.copy|copy(kotlin.String;kotlin.Int;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.poll/PollOption.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.poll/PollOption.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.poll/PollOption.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.poll/PollOption> { // eu.vendeli.tgbot.types.poll/PollOption.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.poll/PollOption.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.poll/PollOption.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.poll/PollOption.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.poll/PollOption // eu.vendeli.tgbot.types.poll/PollOption.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.poll/PollOption) // eu.vendeli.tgbot.types.poll/PollOption.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.poll.PollOption){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.poll/PollOption.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.poll/PollOption.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.poll/PollOption> // eu.vendeli.tgbot.types.poll/PollOption.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.stars/AffiliateInfo { // eu.vendeli.tgbot.types.stars/AffiliateInfo|null[0]
    constructor <init>(eu.vendeli.tgbot.types/User? = ..., eu.vendeli.tgbot.types.chat/Chat? = ..., kotlin/Int, kotlin/Int, kotlin/Int? = ...) // eu.vendeli.tgbot.types.stars/AffiliateInfo.<init>|<init>(eu.vendeli.tgbot.types.User?;eu.vendeli.tgbot.types.chat.Chat?;kotlin.Int;kotlin.Int;kotlin.Int?){}[0]

    final val affiliateChat // eu.vendeli.tgbot.types.stars/AffiliateInfo.affiliateChat|{}affiliateChat[0]
        final fun <get-affiliateChat>(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types.stars/AffiliateInfo.affiliateChat.<get-affiliateChat>|<get-affiliateChat>(){}[0]
    final val affiliateUser // eu.vendeli.tgbot.types.stars/AffiliateInfo.affiliateUser|{}affiliateUser[0]
        final fun <get-affiliateUser>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.stars/AffiliateInfo.affiliateUser.<get-affiliateUser>|<get-affiliateUser>(){}[0]
    final val amount // eu.vendeli.tgbot.types.stars/AffiliateInfo.amount|{}amount[0]
        final fun <get-amount>(): kotlin/Int // eu.vendeli.tgbot.types.stars/AffiliateInfo.amount.<get-amount>|<get-amount>(){}[0]
    final val commissionPerMille // eu.vendeli.tgbot.types.stars/AffiliateInfo.commissionPerMille|{}commissionPerMille[0]
        final fun <get-commissionPerMille>(): kotlin/Int // eu.vendeli.tgbot.types.stars/AffiliateInfo.commissionPerMille.<get-commissionPerMille>|<get-commissionPerMille>(){}[0]
    final val nanostarAmount // eu.vendeli.tgbot.types.stars/AffiliateInfo.nanostarAmount|{}nanostarAmount[0]
        final fun <get-nanostarAmount>(): kotlin/Int? // eu.vendeli.tgbot.types.stars/AffiliateInfo.nanostarAmount.<get-nanostarAmount>|<get-nanostarAmount>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.stars/AffiliateInfo.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types.stars/AffiliateInfo.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types.stars/AffiliateInfo.component3|component3(){}[0]
    final fun component4(): kotlin/Int // eu.vendeli.tgbot.types.stars/AffiliateInfo.component4|component4(){}[0]
    final fun component5(): kotlin/Int? // eu.vendeli.tgbot.types.stars/AffiliateInfo.component5|component5(){}[0]
    final fun copy(eu.vendeli.tgbot.types/User? = ..., eu.vendeli.tgbot.types.chat/Chat? = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.stars/AffiliateInfo // eu.vendeli.tgbot.types.stars/AffiliateInfo.copy|copy(eu.vendeli.tgbot.types.User?;eu.vendeli.tgbot.types.chat.Chat?;kotlin.Int;kotlin.Int;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/AffiliateInfo.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/AffiliateInfo.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/AffiliateInfo.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.stars/AffiliateInfo> { // eu.vendeli.tgbot.types.stars/AffiliateInfo.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.stars/AffiliateInfo.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.stars/AffiliateInfo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.stars/AffiliateInfo.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.stars/AffiliateInfo // eu.vendeli.tgbot.types.stars/AffiliateInfo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.stars/AffiliateInfo) // eu.vendeli.tgbot.types.stars/AffiliateInfo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.stars.AffiliateInfo){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.stars/AffiliateInfo.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/AffiliateInfo> // eu.vendeli.tgbot.types.stars/AffiliateInfo.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.stars/StarTransaction { // eu.vendeli.tgbot.types.stars/StarTransaction|null[0]
    constructor <init>(kotlin/String, kotlin/Int, kotlin/Int? = ..., kotlinx.datetime/Instant, eu.vendeli.tgbot.types.stars/TransactionPartner? = ..., eu.vendeli.tgbot.types.stars/TransactionPartner? = ...) // eu.vendeli.tgbot.types.stars/StarTransaction.<init>|<init>(kotlin.String;kotlin.Int;kotlin.Int?;kotlinx.datetime.Instant;eu.vendeli.tgbot.types.stars.TransactionPartner?;eu.vendeli.tgbot.types.stars.TransactionPartner?){}[0]

    final val amount // eu.vendeli.tgbot.types.stars/StarTransaction.amount|{}amount[0]
        final fun <get-amount>(): kotlin/Int // eu.vendeli.tgbot.types.stars/StarTransaction.amount.<get-amount>|<get-amount>(){}[0]
    final val date // eu.vendeli.tgbot.types.stars/StarTransaction.date|{}date[0]
        final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.stars/StarTransaction.date.<get-date>|<get-date>(){}[0]
    final val id // eu.vendeli.tgbot.types.stars/StarTransaction.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.stars/StarTransaction.id.<get-id>|<get-id>(){}[0]
    final val nanostarAmount // eu.vendeli.tgbot.types.stars/StarTransaction.nanostarAmount|{}nanostarAmount[0]
        final fun <get-nanostarAmount>(): kotlin/Int? // eu.vendeli.tgbot.types.stars/StarTransaction.nanostarAmount.<get-nanostarAmount>|<get-nanostarAmount>(){}[0]
    final val receiver // eu.vendeli.tgbot.types.stars/StarTransaction.receiver|{}receiver[0]
        final fun <get-receiver>(): eu.vendeli.tgbot.types.stars/TransactionPartner? // eu.vendeli.tgbot.types.stars/StarTransaction.receiver.<get-receiver>|<get-receiver>(){}[0]
    final val source // eu.vendeli.tgbot.types.stars/StarTransaction.source|{}source[0]
        final fun <get-source>(): eu.vendeli.tgbot.types.stars/TransactionPartner? // eu.vendeli.tgbot.types.stars/StarTransaction.source.<get-source>|<get-source>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.stars/StarTransaction.component1|component1(){}[0]
    final fun component2(): kotlin/Int // eu.vendeli.tgbot.types.stars/StarTransaction.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.stars/StarTransaction.component3|component3(){}[0]
    final fun component4(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.stars/StarTransaction.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types.stars/TransactionPartner? // eu.vendeli.tgbot.types.stars/StarTransaction.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types.stars/TransactionPartner? // eu.vendeli.tgbot.types.stars/StarTransaction.component6|component6(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Int = ..., kotlin/Int? = ..., kotlinx.datetime/Instant = ..., eu.vendeli.tgbot.types.stars/TransactionPartner? = ..., eu.vendeli.tgbot.types.stars/TransactionPartner? = ...): eu.vendeli.tgbot.types.stars/StarTransaction // eu.vendeli.tgbot.types.stars/StarTransaction.copy|copy(kotlin.String;kotlin.Int;kotlin.Int?;kotlinx.datetime.Instant;eu.vendeli.tgbot.types.stars.TransactionPartner?;eu.vendeli.tgbot.types.stars.TransactionPartner?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/StarTransaction.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/StarTransaction.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/StarTransaction.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.stars/StarTransaction> { // eu.vendeli.tgbot.types.stars/StarTransaction.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.stars/StarTransaction.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.stars/StarTransaction.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.stars/StarTransaction.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.stars/StarTransaction // eu.vendeli.tgbot.types.stars/StarTransaction.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.stars/StarTransaction) // eu.vendeli.tgbot.types.stars/StarTransaction.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.stars.StarTransaction){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.stars/StarTransaction.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.stars/StarTransaction.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/StarTransaction> // eu.vendeli.tgbot.types.stars/StarTransaction.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.stars/StarTransactions { // eu.vendeli.tgbot.types.stars/StarTransactions|null[0]
    constructor <init>(kotlin.collections/List<eu.vendeli.tgbot.types.stars/StarTransaction>) // eu.vendeli.tgbot.types.stars/StarTransactions.<init>|<init>(kotlin.collections.List<eu.vendeli.tgbot.types.stars.StarTransaction>){}[0]

    final val transactions // eu.vendeli.tgbot.types.stars/StarTransactions.transactions|{}transactions[0]
        final fun <get-transactions>(): kotlin.collections/List<eu.vendeli.tgbot.types.stars/StarTransaction> // eu.vendeli.tgbot.types.stars/StarTransactions.transactions.<get-transactions>|<get-transactions>(){}[0]

    final fun component1(): kotlin.collections/List<eu.vendeli.tgbot.types.stars/StarTransaction> // eu.vendeli.tgbot.types.stars/StarTransactions.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<eu.vendeli.tgbot.types.stars/StarTransaction> = ...): eu.vendeli.tgbot.types.stars/StarTransactions // eu.vendeli.tgbot.types.stars/StarTransactions.copy|copy(kotlin.collections.List<eu.vendeli.tgbot.types.stars.StarTransaction>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/StarTransactions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/StarTransactions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/StarTransactions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.stars/StarTransactions> { // eu.vendeli.tgbot.types.stars/StarTransactions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.stars/StarTransactions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.stars/StarTransactions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.stars/StarTransactions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.stars/StarTransactions // eu.vendeli.tgbot.types.stars/StarTransactions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.stars/StarTransactions) // eu.vendeli.tgbot.types.stars/StarTransactions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.stars.StarTransactions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.stars/StarTransactions.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.stars/StarTransactions.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/StarTransactions> // eu.vendeli.tgbot.types.stars/StarTransactions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.user/Gift { // eu.vendeli.tgbot.types.user/Gift|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types.media/Sticker, kotlin/Int, kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.user/Gift.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.media.Sticker;kotlin.Int;kotlin.Int?;kotlin.Int?;kotlin.Int?){}[0]

    final val id // eu.vendeli.tgbot.types.user/Gift.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.user/Gift.id.<get-id>|<get-id>(){}[0]
    final val remainingCount // eu.vendeli.tgbot.types.user/Gift.remainingCount|{}remainingCount[0]
        final fun <get-remainingCount>(): kotlin/Int? // eu.vendeli.tgbot.types.user/Gift.remainingCount.<get-remainingCount>|<get-remainingCount>(){}[0]
    final val starCount // eu.vendeli.tgbot.types.user/Gift.starCount|{}starCount[0]
        final fun <get-starCount>(): kotlin/Int // eu.vendeli.tgbot.types.user/Gift.starCount.<get-starCount>|<get-starCount>(){}[0]
    final val sticker // eu.vendeli.tgbot.types.user/Gift.sticker|{}sticker[0]
        final fun <get-sticker>(): eu.vendeli.tgbot.types.media/Sticker // eu.vendeli.tgbot.types.user/Gift.sticker.<get-sticker>|<get-sticker>(){}[0]
    final val totalCount // eu.vendeli.tgbot.types.user/Gift.totalCount|{}totalCount[0]
        final fun <get-totalCount>(): kotlin/Int? // eu.vendeli.tgbot.types.user/Gift.totalCount.<get-totalCount>|<get-totalCount>(){}[0]
    final val upgradeStarCount // eu.vendeli.tgbot.types.user/Gift.upgradeStarCount|{}upgradeStarCount[0]
        final fun <get-upgradeStarCount>(): kotlin/Int? // eu.vendeli.tgbot.types.user/Gift.upgradeStarCount.<get-upgradeStarCount>|<get-upgradeStarCount>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types.user/Gift.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.media/Sticker // eu.vendeli.tgbot.types.user/Gift.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types.user/Gift.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.user/Gift.component4|component4(){}[0]
    final fun component5(): kotlin/Int? // eu.vendeli.tgbot.types.user/Gift.component5|component5(){}[0]
    final fun component6(): kotlin/Int? // eu.vendeli.tgbot.types.user/Gift.component6|component6(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types.media/Sticker = ..., kotlin/Int = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.user/Gift // eu.vendeli.tgbot.types.user/Gift.copy|copy(kotlin.String;eu.vendeli.tgbot.types.media.Sticker;kotlin.Int;kotlin.Int?;kotlin.Int?;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.user/Gift.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.user/Gift.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.user/Gift.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.user/Gift> { // eu.vendeli.tgbot.types.user/Gift.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.user/Gift.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.user/Gift.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.user/Gift.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.user/Gift // eu.vendeli.tgbot.types.user/Gift.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.user/Gift) // eu.vendeli.tgbot.types.user/Gift.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.user.Gift){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.user/Gift.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.user/Gift> // eu.vendeli.tgbot.types.user/Gift.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types.user/Gifts { // eu.vendeli.tgbot.types.user/Gifts|null[0]
    constructor <init>(kotlin.collections/List<eu.vendeli.tgbot.types.user/Gift>) // eu.vendeli.tgbot.types.user/Gifts.<init>|<init>(kotlin.collections.List<eu.vendeli.tgbot.types.user.Gift>){}[0]

    final val gifts // eu.vendeli.tgbot.types.user/Gifts.gifts|{}gifts[0]
        final fun <get-gifts>(): kotlin.collections/List<eu.vendeli.tgbot.types.user/Gift> // eu.vendeli.tgbot.types.user/Gifts.gifts.<get-gifts>|<get-gifts>(){}[0]

    final fun component1(): kotlin.collections/List<eu.vendeli.tgbot.types.user/Gift> // eu.vendeli.tgbot.types.user/Gifts.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<eu.vendeli.tgbot.types.user/Gift> = ...): eu.vendeli.tgbot.types.user/Gifts // eu.vendeli.tgbot.types.user/Gifts.copy|copy(kotlin.collections.List<eu.vendeli.tgbot.types.user.Gift>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.user/Gifts.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.user/Gifts.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.user/Gifts.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.user/Gifts> { // eu.vendeli.tgbot.types.user/Gifts.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types.user/Gifts.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.user/Gifts.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.user/Gifts.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.user/Gifts // eu.vendeli.tgbot.types.user/Gifts.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.user/Gifts) // eu.vendeli.tgbot.types.user/Gifts.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.user.Gifts){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.user/Gifts.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types.user/Gifts.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.user/Gifts> // eu.vendeli.tgbot.types.user/Gifts.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/Birthdate { // eu.vendeli.tgbot.types/Birthdate|null[0]
    constructor <init>(kotlin/Int, kotlin/Int, kotlin/Int? = ...) // eu.vendeli.tgbot.types/Birthdate.<init>|<init>(kotlin.Int;kotlin.Int;kotlin.Int?){}[0]

    final val day // eu.vendeli.tgbot.types/Birthdate.day|{}day[0]
        final fun <get-day>(): kotlin/Int // eu.vendeli.tgbot.types/Birthdate.day.<get-day>|<get-day>(){}[0]
    final val month // eu.vendeli.tgbot.types/Birthdate.month|{}month[0]
        final fun <get-month>(): kotlin/Int // eu.vendeli.tgbot.types/Birthdate.month.<get-month>|<get-month>(){}[0]
    final val year // eu.vendeli.tgbot.types/Birthdate.year|{}year[0]
        final fun <get-year>(): kotlin/Int? // eu.vendeli.tgbot.types/Birthdate.year.<get-year>|<get-year>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types/Birthdate.component1|component1(){}[0]
    final fun component2(): kotlin/Int // eu.vendeli.tgbot.types/Birthdate.component2|component2(){}[0]
    final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types/Birthdate.component3|component3(){}[0]
    final fun copy(kotlin/Int = ..., kotlin/Int = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types/Birthdate // eu.vendeli.tgbot.types/Birthdate.copy|copy(kotlin.Int;kotlin.Int;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/Birthdate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/Birthdate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/Birthdate.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/Birthdate> { // eu.vendeli.tgbot.types/Birthdate.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/Birthdate.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/Birthdate.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/Birthdate.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/Birthdate // eu.vendeli.tgbot.types/Birthdate.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/Birthdate) // eu.vendeli.tgbot.types/Birthdate.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.Birthdate){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/Birthdate.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/Birthdate> // eu.vendeli.tgbot.types/Birthdate.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/CallbackQuery { // eu.vendeli.tgbot.types/CallbackQuery|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types/User, eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage? = ..., kotlin/String? = ..., kotlin/String, kotlin/String? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types/CallbackQuery.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.msg.MaybeInaccessibleMessage?;kotlin.String?;kotlin.String;kotlin.String?;kotlin.String?){}[0]

    final val chatInstance // eu.vendeli.tgbot.types/CallbackQuery.chatInstance|{}chatInstance[0]
        final fun <get-chatInstance>(): kotlin/String // eu.vendeli.tgbot.types/CallbackQuery.chatInstance.<get-chatInstance>|<get-chatInstance>(){}[0]
    final val data // eu.vendeli.tgbot.types/CallbackQuery.data|{}data[0]
        final fun <get-data>(): kotlin/String? // eu.vendeli.tgbot.types/CallbackQuery.data.<get-data>|<get-data>(){}[0]
    final val from // eu.vendeli.tgbot.types/CallbackQuery.from|{}from[0]
        final fun <get-from>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types/CallbackQuery.from.<get-from>|<get-from>(){}[0]
    final val gameShortName // eu.vendeli.tgbot.types/CallbackQuery.gameShortName|{}gameShortName[0]
        final fun <get-gameShortName>(): kotlin/String? // eu.vendeli.tgbot.types/CallbackQuery.gameShortName.<get-gameShortName>|<get-gameShortName>(){}[0]
    final val id // eu.vendeli.tgbot.types/CallbackQuery.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types/CallbackQuery.id.<get-id>|<get-id>(){}[0]
    final val inlineMessageId // eu.vendeli.tgbot.types/CallbackQuery.inlineMessageId|{}inlineMessageId[0]
        final fun <get-inlineMessageId>(): kotlin/String? // eu.vendeli.tgbot.types/CallbackQuery.inlineMessageId.<get-inlineMessageId>|<get-inlineMessageId>(){}[0]
    final val message // eu.vendeli.tgbot.types/CallbackQuery.message|{}message[0]
        final fun <get-message>(): eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage? // eu.vendeli.tgbot.types/CallbackQuery.message.<get-message>|<get-message>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types/CallbackQuery.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types/CallbackQuery.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage? // eu.vendeli.tgbot.types/CallbackQuery.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types/CallbackQuery.component4|component4(){}[0]
    final fun component5(): kotlin/String // eu.vendeli.tgbot.types/CallbackQuery.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types/CallbackQuery.component6|component6(){}[0]
    final fun component7(): kotlin/String? // eu.vendeli.tgbot.types/CallbackQuery.component7|component7(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types/User = ..., eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage? = ..., kotlin/String? = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types/CallbackQuery // eu.vendeli.tgbot.types/CallbackQuery.copy|copy(kotlin.String;eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.msg.MaybeInaccessibleMessage?;kotlin.String?;kotlin.String;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/CallbackQuery.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/CallbackQuery.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/CallbackQuery.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/CallbackQuery> { // eu.vendeli.tgbot.types/CallbackQuery.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/CallbackQuery.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/CallbackQuery.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/CallbackQuery.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/CallbackQuery // eu.vendeli.tgbot.types/CallbackQuery.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/CallbackQuery) // eu.vendeli.tgbot.types/CallbackQuery.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.CallbackQuery){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/CallbackQuery.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/CallbackQuery> // eu.vendeli.tgbot.types/CallbackQuery.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/Contact { // eu.vendeli.tgbot.types/Contact|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/Long? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types/Contact.<init>|<init>(kotlin.String;kotlin.String;kotlin.String?;kotlin.Long?;kotlin.String?){}[0]

    final val firstName // eu.vendeli.tgbot.types/Contact.firstName|{}firstName[0]
        final fun <get-firstName>(): kotlin/String // eu.vendeli.tgbot.types/Contact.firstName.<get-firstName>|<get-firstName>(){}[0]
    final val lastName // eu.vendeli.tgbot.types/Contact.lastName|{}lastName[0]
        final fun <get-lastName>(): kotlin/String? // eu.vendeli.tgbot.types/Contact.lastName.<get-lastName>|<get-lastName>(){}[0]
    final val phoneNumber // eu.vendeli.tgbot.types/Contact.phoneNumber|{}phoneNumber[0]
        final fun <get-phoneNumber>(): kotlin/String // eu.vendeli.tgbot.types/Contact.phoneNumber.<get-phoneNumber>|<get-phoneNumber>(){}[0]
    final val userId // eu.vendeli.tgbot.types/Contact.userId|{}userId[0]
        final fun <get-userId>(): kotlin/Long? // eu.vendeli.tgbot.types/Contact.userId.<get-userId>|<get-userId>(){}[0]
    final val vcard // eu.vendeli.tgbot.types/Contact.vcard|{}vcard[0]
        final fun <get-vcard>(): kotlin/String? // eu.vendeli.tgbot.types/Contact.vcard.<get-vcard>|<get-vcard>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types/Contact.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types/Contact.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types/Contact.component3|component3(){}[0]
    final fun component4(): kotlin/Long? // eu.vendeli.tgbot.types/Contact.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types/Contact.component5|component5(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/Long? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types/Contact // eu.vendeli.tgbot.types/Contact.copy|copy(kotlin.String;kotlin.String;kotlin.String?;kotlin.Long?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/Contact.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/Contact.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/Contact.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/Contact> { // eu.vendeli.tgbot.types/Contact.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/Contact.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/Contact.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/Contact.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/Contact // eu.vendeli.tgbot.types/Contact.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/Contact) // eu.vendeli.tgbot.types/Contact.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.Contact){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/Contact.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/Contact> // eu.vendeli.tgbot.types/Contact.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/ExternalReplyInfo { // eu.vendeli.tgbot.types/ExternalReplyInfo|null[0]
    constructor <init>(eu.vendeli.tgbot.types.msg/MessageOrigin, eu.vendeli.tgbot.types.chat/Chat? = ..., kotlin/Long? = ..., eu.vendeli.tgbot.types/LinkPreviewOptions? = ..., eu.vendeli.tgbot.types.media/Animation? = ..., eu.vendeli.tgbot.types.media/Audio? = ..., eu.vendeli.tgbot.types.media/Document? = ..., eu.vendeli.tgbot.types.media/PaidMediaInfo? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? = ..., eu.vendeli.tgbot.types.media/Sticker? = ..., eu.vendeli.tgbot.types.media/Story? = ..., eu.vendeli.tgbot.types.media/Video? = ..., eu.vendeli.tgbot.types.media/VideoNote? = ..., eu.vendeli.tgbot.types.media/Voice? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/Contact? = ..., eu.vendeli.tgbot.types.game/Dice? = ..., eu.vendeli.tgbot.types.game/Game? = ..., eu.vendeli.tgbot.types.giveaway/Giveaway? = ..., eu.vendeli.tgbot.types.giveaway/GiveawayWinners? = ..., eu.vendeli.tgbot.types.payment/Invoice? = ..., eu.vendeli.tgbot.types/Location? = ..., eu.vendeli.tgbot.types.poll/Poll? = ..., eu.vendeli.tgbot.types/Venue? = ...) // eu.vendeli.tgbot.types/ExternalReplyInfo.<init>|<init>(eu.vendeli.tgbot.types.msg.MessageOrigin;eu.vendeli.tgbot.types.chat.Chat?;kotlin.Long?;eu.vendeli.tgbot.types.LinkPreviewOptions?;eu.vendeli.tgbot.types.media.Animation?;eu.vendeli.tgbot.types.media.Audio?;eu.vendeli.tgbot.types.media.Document?;eu.vendeli.tgbot.types.media.PaidMediaInfo?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>?;eu.vendeli.tgbot.types.media.Sticker?;eu.vendeli.tgbot.types.media.Story?;eu.vendeli.tgbot.types.media.Video?;eu.vendeli.tgbot.types.media.VideoNote?;eu.vendeli.tgbot.types.media.Voice?;kotlin.Boolean?;eu.vendeli.tgbot.types.Contact?;eu.vendeli.tgbot.types.game.Dice?;eu.vendeli.tgbot.types.game.Game?;eu.vendeli.tgbot.types.giveaway.Giveaway?;eu.vendeli.tgbot.types.giveaway.GiveawayWinners?;eu.vendeli.tgbot.types.payment.Invoice?;eu.vendeli.tgbot.types.Location?;eu.vendeli.tgbot.types.poll.Poll?;eu.vendeli.tgbot.types.Venue?){}[0]

    final val animation // eu.vendeli.tgbot.types/ExternalReplyInfo.animation|{}animation[0]
        final fun <get-animation>(): eu.vendeli.tgbot.types.media/Animation? // eu.vendeli.tgbot.types/ExternalReplyInfo.animation.<get-animation>|<get-animation>(){}[0]
    final val audio // eu.vendeli.tgbot.types/ExternalReplyInfo.audio|{}audio[0]
        final fun <get-audio>(): eu.vendeli.tgbot.types.media/Audio? // eu.vendeli.tgbot.types/ExternalReplyInfo.audio.<get-audio>|<get-audio>(){}[0]
    final val chat // eu.vendeli.tgbot.types/ExternalReplyInfo.chat|{}chat[0]
        final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types/ExternalReplyInfo.chat.<get-chat>|<get-chat>(){}[0]
    final val contact // eu.vendeli.tgbot.types/ExternalReplyInfo.contact|{}contact[0]
        final fun <get-contact>(): eu.vendeli.tgbot.types/Contact? // eu.vendeli.tgbot.types/ExternalReplyInfo.contact.<get-contact>|<get-contact>(){}[0]
    final val dice // eu.vendeli.tgbot.types/ExternalReplyInfo.dice|{}dice[0]
        final fun <get-dice>(): eu.vendeli.tgbot.types.game/Dice? // eu.vendeli.tgbot.types/ExternalReplyInfo.dice.<get-dice>|<get-dice>(){}[0]
    final val document // eu.vendeli.tgbot.types/ExternalReplyInfo.document|{}document[0]
        final fun <get-document>(): eu.vendeli.tgbot.types.media/Document? // eu.vendeli.tgbot.types/ExternalReplyInfo.document.<get-document>|<get-document>(){}[0]
    final val game // eu.vendeli.tgbot.types/ExternalReplyInfo.game|{}game[0]
        final fun <get-game>(): eu.vendeli.tgbot.types.game/Game? // eu.vendeli.tgbot.types/ExternalReplyInfo.game.<get-game>|<get-game>(){}[0]
    final val giveaway // eu.vendeli.tgbot.types/ExternalReplyInfo.giveaway|{}giveaway[0]
        final fun <get-giveaway>(): eu.vendeli.tgbot.types.giveaway/Giveaway? // eu.vendeli.tgbot.types/ExternalReplyInfo.giveaway.<get-giveaway>|<get-giveaway>(){}[0]
    final val giveawayWinners // eu.vendeli.tgbot.types/ExternalReplyInfo.giveawayWinners|{}giveawayWinners[0]
        final fun <get-giveawayWinners>(): eu.vendeli.tgbot.types.giveaway/GiveawayWinners? // eu.vendeli.tgbot.types/ExternalReplyInfo.giveawayWinners.<get-giveawayWinners>|<get-giveawayWinners>(){}[0]
    final val hasMediaSpoiler // eu.vendeli.tgbot.types/ExternalReplyInfo.hasMediaSpoiler|{}hasMediaSpoiler[0]
        final fun <get-hasMediaSpoiler>(): kotlin/Boolean? // eu.vendeli.tgbot.types/ExternalReplyInfo.hasMediaSpoiler.<get-hasMediaSpoiler>|<get-hasMediaSpoiler>(){}[0]
    final val invoice // eu.vendeli.tgbot.types/ExternalReplyInfo.invoice|{}invoice[0]
        final fun <get-invoice>(): eu.vendeli.tgbot.types.payment/Invoice? // eu.vendeli.tgbot.types/ExternalReplyInfo.invoice.<get-invoice>|<get-invoice>(){}[0]
    final val linkPreviewOptions // eu.vendeli.tgbot.types/ExternalReplyInfo.linkPreviewOptions|{}linkPreviewOptions[0]
        final fun <get-linkPreviewOptions>(): eu.vendeli.tgbot.types/LinkPreviewOptions? // eu.vendeli.tgbot.types/ExternalReplyInfo.linkPreviewOptions.<get-linkPreviewOptions>|<get-linkPreviewOptions>(){}[0]
    final val location // eu.vendeli.tgbot.types/ExternalReplyInfo.location|{}location[0]
        final fun <get-location>(): eu.vendeli.tgbot.types/Location? // eu.vendeli.tgbot.types/ExternalReplyInfo.location.<get-location>|<get-location>(){}[0]
    final val messageId // eu.vendeli.tgbot.types/ExternalReplyInfo.messageId|{}messageId[0]
        final fun <get-messageId>(): kotlin/Long? // eu.vendeli.tgbot.types/ExternalReplyInfo.messageId.<get-messageId>|<get-messageId>(){}[0]
    final val origin // eu.vendeli.tgbot.types/ExternalReplyInfo.origin|{}origin[0]
        final fun <get-origin>(): eu.vendeli.tgbot.types.msg/MessageOrigin // eu.vendeli.tgbot.types/ExternalReplyInfo.origin.<get-origin>|<get-origin>(){}[0]
    final val paidMedia // eu.vendeli.tgbot.types/ExternalReplyInfo.paidMedia|{}paidMedia[0]
        final fun <get-paidMedia>(): eu.vendeli.tgbot.types.media/PaidMediaInfo? // eu.vendeli.tgbot.types/ExternalReplyInfo.paidMedia.<get-paidMedia>|<get-paidMedia>(){}[0]
    final val photo // eu.vendeli.tgbot.types/ExternalReplyInfo.photo|{}photo[0]
        final fun <get-photo>(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? // eu.vendeli.tgbot.types/ExternalReplyInfo.photo.<get-photo>|<get-photo>(){}[0]
    final val poll // eu.vendeli.tgbot.types/ExternalReplyInfo.poll|{}poll[0]
        final fun <get-poll>(): eu.vendeli.tgbot.types.poll/Poll? // eu.vendeli.tgbot.types/ExternalReplyInfo.poll.<get-poll>|<get-poll>(){}[0]
    final val sticker // eu.vendeli.tgbot.types/ExternalReplyInfo.sticker|{}sticker[0]
        final fun <get-sticker>(): eu.vendeli.tgbot.types.media/Sticker? // eu.vendeli.tgbot.types/ExternalReplyInfo.sticker.<get-sticker>|<get-sticker>(){}[0]
    final val story // eu.vendeli.tgbot.types/ExternalReplyInfo.story|{}story[0]
        final fun <get-story>(): eu.vendeli.tgbot.types.media/Story? // eu.vendeli.tgbot.types/ExternalReplyInfo.story.<get-story>|<get-story>(){}[0]
    final val venue // eu.vendeli.tgbot.types/ExternalReplyInfo.venue|{}venue[0]
        final fun <get-venue>(): eu.vendeli.tgbot.types/Venue? // eu.vendeli.tgbot.types/ExternalReplyInfo.venue.<get-venue>|<get-venue>(){}[0]
    final val video // eu.vendeli.tgbot.types/ExternalReplyInfo.video|{}video[0]
        final fun <get-video>(): eu.vendeli.tgbot.types.media/Video? // eu.vendeli.tgbot.types/ExternalReplyInfo.video.<get-video>|<get-video>(){}[0]
    final val videoNote // eu.vendeli.tgbot.types/ExternalReplyInfo.videoNote|{}videoNote[0]
        final fun <get-videoNote>(): eu.vendeli.tgbot.types.media/VideoNote? // eu.vendeli.tgbot.types/ExternalReplyInfo.videoNote.<get-videoNote>|<get-videoNote>(){}[0]
    final val voice // eu.vendeli.tgbot.types/ExternalReplyInfo.voice|{}voice[0]
        final fun <get-voice>(): eu.vendeli.tgbot.types.media/Voice? // eu.vendeli.tgbot.types/ExternalReplyInfo.voice.<get-voice>|<get-voice>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types.msg/MessageOrigin // eu.vendeli.tgbot.types/ExternalReplyInfo.component1|component1(){}[0]
    final fun component10(): eu.vendeli.tgbot.types.media/Sticker? // eu.vendeli.tgbot.types/ExternalReplyInfo.component10|component10(){}[0]
    final fun component11(): eu.vendeli.tgbot.types.media/Story? // eu.vendeli.tgbot.types/ExternalReplyInfo.component11|component11(){}[0]
    final fun component12(): eu.vendeli.tgbot.types.media/Video? // eu.vendeli.tgbot.types/ExternalReplyInfo.component12|component12(){}[0]
    final fun component13(): eu.vendeli.tgbot.types.media/VideoNote? // eu.vendeli.tgbot.types/ExternalReplyInfo.component13|component13(){}[0]
    final fun component14(): eu.vendeli.tgbot.types.media/Voice? // eu.vendeli.tgbot.types/ExternalReplyInfo.component14|component14(){}[0]
    final fun component15(): kotlin/Boolean? // eu.vendeli.tgbot.types/ExternalReplyInfo.component15|component15(){}[0]
    final fun component16(): eu.vendeli.tgbot.types/Contact? // eu.vendeli.tgbot.types/ExternalReplyInfo.component16|component16(){}[0]
    final fun component17(): eu.vendeli.tgbot.types.game/Dice? // eu.vendeli.tgbot.types/ExternalReplyInfo.component17|component17(){}[0]
    final fun component18(): eu.vendeli.tgbot.types.game/Game? // eu.vendeli.tgbot.types/ExternalReplyInfo.component18|component18(){}[0]
    final fun component19(): eu.vendeli.tgbot.types.giveaway/Giveaway? // eu.vendeli.tgbot.types/ExternalReplyInfo.component19|component19(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types/ExternalReplyInfo.component2|component2(){}[0]
    final fun component20(): eu.vendeli.tgbot.types.giveaway/GiveawayWinners? // eu.vendeli.tgbot.types/ExternalReplyInfo.component20|component20(){}[0]
    final fun component21(): eu.vendeli.tgbot.types.payment/Invoice? // eu.vendeli.tgbot.types/ExternalReplyInfo.component21|component21(){}[0]
    final fun component22(): eu.vendeli.tgbot.types/Location? // eu.vendeli.tgbot.types/ExternalReplyInfo.component22|component22(){}[0]
    final fun component23(): eu.vendeli.tgbot.types.poll/Poll? // eu.vendeli.tgbot.types/ExternalReplyInfo.component23|component23(){}[0]
    final fun component24(): eu.vendeli.tgbot.types/Venue? // eu.vendeli.tgbot.types/ExternalReplyInfo.component24|component24(){}[0]
    final fun component3(): kotlin/Long? // eu.vendeli.tgbot.types/ExternalReplyInfo.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types/LinkPreviewOptions? // eu.vendeli.tgbot.types/ExternalReplyInfo.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types.media/Animation? // eu.vendeli.tgbot.types/ExternalReplyInfo.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types.media/Audio? // eu.vendeli.tgbot.types/ExternalReplyInfo.component6|component6(){}[0]
    final fun component7(): eu.vendeli.tgbot.types.media/Document? // eu.vendeli.tgbot.types/ExternalReplyInfo.component7|component7(){}[0]
    final fun component8(): eu.vendeli.tgbot.types.media/PaidMediaInfo? // eu.vendeli.tgbot.types/ExternalReplyInfo.component8|component8(){}[0]
    final fun component9(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? // eu.vendeli.tgbot.types/ExternalReplyInfo.component9|component9(){}[0]
    final fun copy(eu.vendeli.tgbot.types.msg/MessageOrigin = ..., eu.vendeli.tgbot.types.chat/Chat? = ..., kotlin/Long? = ..., eu.vendeli.tgbot.types/LinkPreviewOptions? = ..., eu.vendeli.tgbot.types.media/Animation? = ..., eu.vendeli.tgbot.types.media/Audio? = ..., eu.vendeli.tgbot.types.media/Document? = ..., eu.vendeli.tgbot.types.media/PaidMediaInfo? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? = ..., eu.vendeli.tgbot.types.media/Sticker? = ..., eu.vendeli.tgbot.types.media/Story? = ..., eu.vendeli.tgbot.types.media/Video? = ..., eu.vendeli.tgbot.types.media/VideoNote? = ..., eu.vendeli.tgbot.types.media/Voice? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/Contact? = ..., eu.vendeli.tgbot.types.game/Dice? = ..., eu.vendeli.tgbot.types.game/Game? = ..., eu.vendeli.tgbot.types.giveaway/Giveaway? = ..., eu.vendeli.tgbot.types.giveaway/GiveawayWinners? = ..., eu.vendeli.tgbot.types.payment/Invoice? = ..., eu.vendeli.tgbot.types/Location? = ..., eu.vendeli.tgbot.types.poll/Poll? = ..., eu.vendeli.tgbot.types/Venue? = ...): eu.vendeli.tgbot.types/ExternalReplyInfo // eu.vendeli.tgbot.types/ExternalReplyInfo.copy|copy(eu.vendeli.tgbot.types.msg.MessageOrigin;eu.vendeli.tgbot.types.chat.Chat?;kotlin.Long?;eu.vendeli.tgbot.types.LinkPreviewOptions?;eu.vendeli.tgbot.types.media.Animation?;eu.vendeli.tgbot.types.media.Audio?;eu.vendeli.tgbot.types.media.Document?;eu.vendeli.tgbot.types.media.PaidMediaInfo?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>?;eu.vendeli.tgbot.types.media.Sticker?;eu.vendeli.tgbot.types.media.Story?;eu.vendeli.tgbot.types.media.Video?;eu.vendeli.tgbot.types.media.VideoNote?;eu.vendeli.tgbot.types.media.Voice?;kotlin.Boolean?;eu.vendeli.tgbot.types.Contact?;eu.vendeli.tgbot.types.game.Dice?;eu.vendeli.tgbot.types.game.Game?;eu.vendeli.tgbot.types.giveaway.Giveaway?;eu.vendeli.tgbot.types.giveaway.GiveawayWinners?;eu.vendeli.tgbot.types.payment.Invoice?;eu.vendeli.tgbot.types.Location?;eu.vendeli.tgbot.types.poll.Poll?;eu.vendeli.tgbot.types.Venue?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/ExternalReplyInfo.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/ExternalReplyInfo.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/ExternalReplyInfo.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/ExternalReplyInfo> { // eu.vendeli.tgbot.types/ExternalReplyInfo.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/ExternalReplyInfo.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/ExternalReplyInfo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/ExternalReplyInfo.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/ExternalReplyInfo // eu.vendeli.tgbot.types/ExternalReplyInfo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/ExternalReplyInfo) // eu.vendeli.tgbot.types/ExternalReplyInfo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.ExternalReplyInfo){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/ExternalReplyInfo.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types/ExternalReplyInfo.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/ExternalReplyInfo> // eu.vendeli.tgbot.types/ExternalReplyInfo.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/LinkPreviewOptions { // eu.vendeli.tgbot.types/LinkPreviewOptions|null[0]
    constructor <init>(kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types/LinkPreviewOptions.<init>|<init>(kotlin.Boolean?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final var isDisabled // eu.vendeli.tgbot.types/LinkPreviewOptions.isDisabled|{}isDisabled[0]
        final fun <get-isDisabled>(): kotlin/Boolean? // eu.vendeli.tgbot.types/LinkPreviewOptions.isDisabled.<get-isDisabled>|<get-isDisabled>(){}[0]
        final fun <set-isDisabled>(kotlin/Boolean?) // eu.vendeli.tgbot.types/LinkPreviewOptions.isDisabled.<set-isDisabled>|<set-isDisabled>(kotlin.Boolean?){}[0]
    final var preferLargeMedia // eu.vendeli.tgbot.types/LinkPreviewOptions.preferLargeMedia|{}preferLargeMedia[0]
        final fun <get-preferLargeMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types/LinkPreviewOptions.preferLargeMedia.<get-preferLargeMedia>|<get-preferLargeMedia>(){}[0]
        final fun <set-preferLargeMedia>(kotlin/Boolean?) // eu.vendeli.tgbot.types/LinkPreviewOptions.preferLargeMedia.<set-preferLargeMedia>|<set-preferLargeMedia>(kotlin.Boolean?){}[0]
    final var preferSmallMedia // eu.vendeli.tgbot.types/LinkPreviewOptions.preferSmallMedia|{}preferSmallMedia[0]
        final fun <get-preferSmallMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types/LinkPreviewOptions.preferSmallMedia.<get-preferSmallMedia>|<get-preferSmallMedia>(){}[0]
        final fun <set-preferSmallMedia>(kotlin/Boolean?) // eu.vendeli.tgbot.types/LinkPreviewOptions.preferSmallMedia.<set-preferSmallMedia>|<set-preferSmallMedia>(kotlin.Boolean?){}[0]
    final var showAboveText // eu.vendeli.tgbot.types/LinkPreviewOptions.showAboveText|{}showAboveText[0]
        final fun <get-showAboveText>(): kotlin/Boolean? // eu.vendeli.tgbot.types/LinkPreviewOptions.showAboveText.<get-showAboveText>|<get-showAboveText>(){}[0]
        final fun <set-showAboveText>(kotlin/Boolean?) // eu.vendeli.tgbot.types/LinkPreviewOptions.showAboveText.<set-showAboveText>|<set-showAboveText>(kotlin.Boolean?){}[0]
    final var url // eu.vendeli.tgbot.types/LinkPreviewOptions.url|{}url[0]
        final fun <get-url>(): kotlin/String? // eu.vendeli.tgbot.types/LinkPreviewOptions.url.<get-url>|<get-url>(){}[0]
        final fun <set-url>(kotlin/String?) // eu.vendeli.tgbot.types/LinkPreviewOptions.url.<set-url>|<set-url>(kotlin.String?){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types/LinkPreviewOptions.component1|component1(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.tgbot.types/LinkPreviewOptions.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types/LinkPreviewOptions.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types/LinkPreviewOptions.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types/LinkPreviewOptions.component5|component5(){}[0]
    final fun copy(kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types/LinkPreviewOptions // eu.vendeli.tgbot.types/LinkPreviewOptions.copy|copy(kotlin.Boolean?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/LinkPreviewOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/LinkPreviewOptions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/LinkPreviewOptions.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/LinkPreviewOptions> { // eu.vendeli.tgbot.types/LinkPreviewOptions.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/LinkPreviewOptions.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/LinkPreviewOptions.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/LinkPreviewOptions.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/LinkPreviewOptions // eu.vendeli.tgbot.types/LinkPreviewOptions.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/LinkPreviewOptions) // eu.vendeli.tgbot.types/LinkPreviewOptions.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.LinkPreviewOptions){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/LinkPreviewOptions.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/LinkPreviewOptions> // eu.vendeli.tgbot.types/LinkPreviewOptions.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/Location { // eu.vendeli.tgbot.types/Location|null[0]
    constructor <init>(kotlin/Float, kotlin/Float, kotlin/Float? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types/Location.<init>|<init>(kotlin.Float;kotlin.Float;kotlin.Float?;kotlin.Int?;kotlin.Int?;kotlin.Int?){}[0]

    final val heading // eu.vendeli.tgbot.types/Location.heading|{}heading[0]
        final fun <get-heading>(): kotlin/Int? // eu.vendeli.tgbot.types/Location.heading.<get-heading>|<get-heading>(){}[0]
    final val horizontalAccuracy // eu.vendeli.tgbot.types/Location.horizontalAccuracy|{}horizontalAccuracy[0]
        final fun <get-horizontalAccuracy>(): kotlin/Float? // eu.vendeli.tgbot.types/Location.horizontalAccuracy.<get-horizontalAccuracy>|<get-horizontalAccuracy>(){}[0]
    final val latitude // eu.vendeli.tgbot.types/Location.latitude|{}latitude[0]
        final fun <get-latitude>(): kotlin/Float // eu.vendeli.tgbot.types/Location.latitude.<get-latitude>|<get-latitude>(){}[0]
    final val livePeriod // eu.vendeli.tgbot.types/Location.livePeriod|{}livePeriod[0]
        final fun <get-livePeriod>(): kotlin/Int? // eu.vendeli.tgbot.types/Location.livePeriod.<get-livePeriod>|<get-livePeriod>(){}[0]
    final val longitude // eu.vendeli.tgbot.types/Location.longitude|{}longitude[0]
        final fun <get-longitude>(): kotlin/Float // eu.vendeli.tgbot.types/Location.longitude.<get-longitude>|<get-longitude>(){}[0]
    final val proximityAlertRadius // eu.vendeli.tgbot.types/Location.proximityAlertRadius|{}proximityAlertRadius[0]
        final fun <get-proximityAlertRadius>(): kotlin/Int? // eu.vendeli.tgbot.types/Location.proximityAlertRadius.<get-proximityAlertRadius>|<get-proximityAlertRadius>(){}[0]

    final fun component1(): kotlin/Float // eu.vendeli.tgbot.types/Location.component1|component1(){}[0]
    final fun component2(): kotlin/Float // eu.vendeli.tgbot.types/Location.component2|component2(){}[0]
    final fun component3(): kotlin/Float? // eu.vendeli.tgbot.types/Location.component3|component3(){}[0]
    final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types/Location.component4|component4(){}[0]
    final fun component5(): kotlin/Int? // eu.vendeli.tgbot.types/Location.component5|component5(){}[0]
    final fun component6(): kotlin/Int? // eu.vendeli.tgbot.types/Location.component6|component6(){}[0]
    final fun copy(kotlin/Float = ..., kotlin/Float = ..., kotlin/Float? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types/Location // eu.vendeli.tgbot.types/Location.copy|copy(kotlin.Float;kotlin.Float;kotlin.Float?;kotlin.Int?;kotlin.Int?;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/Location.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/Location.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/Location.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/Location> { // eu.vendeli.tgbot.types/Location.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/Location.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/Location.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/Location.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/Location // eu.vendeli.tgbot.types/Location.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/Location) // eu.vendeli.tgbot.types/Location.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.Location){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/Location.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/Location> // eu.vendeli.tgbot.types/Location.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/PollAnswer { // eu.vendeli.tgbot.types/PollAnswer|null[0]
    constructor <init>(kotlin/String, eu.vendeli.tgbot.types.chat/Chat? = ..., eu.vendeli.tgbot.types/User? = ..., kotlin.collections/List<kotlin/Int>) // eu.vendeli.tgbot.types/PollAnswer.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.chat.Chat?;eu.vendeli.tgbot.types.User?;kotlin.collections.List<kotlin.Int>){}[0]

    final val optionIds // eu.vendeli.tgbot.types/PollAnswer.optionIds|{}optionIds[0]
        final fun <get-optionIds>(): kotlin.collections/List<kotlin/Int> // eu.vendeli.tgbot.types/PollAnswer.optionIds.<get-optionIds>|<get-optionIds>(){}[0]
    final val pollId // eu.vendeli.tgbot.types/PollAnswer.pollId|{}pollId[0]
        final fun <get-pollId>(): kotlin/String // eu.vendeli.tgbot.types/PollAnswer.pollId.<get-pollId>|<get-pollId>(){}[0]
    final val user // eu.vendeli.tgbot.types/PollAnswer.user|{}user[0]
        final fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types/PollAnswer.user.<get-user>|<get-user>(){}[0]
    final val voterChat // eu.vendeli.tgbot.types/PollAnswer.voterChat|{}voterChat[0]
        final fun <get-voterChat>(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types/PollAnswer.voterChat.<get-voterChat>|<get-voterChat>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types/PollAnswer.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types/PollAnswer.component2|component2(){}[0]
    final fun component3(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types/PollAnswer.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<kotlin/Int> // eu.vendeli.tgbot.types/PollAnswer.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types.chat/Chat? = ..., eu.vendeli.tgbot.types/User? = ..., kotlin.collections/List<kotlin/Int> = ...): eu.vendeli.tgbot.types/PollAnswer // eu.vendeli.tgbot.types/PollAnswer.copy|copy(kotlin.String;eu.vendeli.tgbot.types.chat.Chat?;eu.vendeli.tgbot.types.User?;kotlin.collections.List<kotlin.Int>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/PollAnswer.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/PollAnswer.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/PollAnswer.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/PollAnswer> { // eu.vendeli.tgbot.types/PollAnswer.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/PollAnswer.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/PollAnswer.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/PollAnswer.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/PollAnswer // eu.vendeli.tgbot.types/PollAnswer.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/PollAnswer) // eu.vendeli.tgbot.types/PollAnswer.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.PollAnswer){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/PollAnswer.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types/PollAnswer.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/PollAnswer> // eu.vendeli.tgbot.types/PollAnswer.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/ProximityAlertTriggered { // eu.vendeli.tgbot.types/ProximityAlertTriggered|null[0]
    constructor <init>(eu.vendeli.tgbot.types/User, eu.vendeli.tgbot.types/User, kotlin/Int) // eu.vendeli.tgbot.types/ProximityAlertTriggered.<init>|<init>(eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.User;kotlin.Int){}[0]

    final val distance // eu.vendeli.tgbot.types/ProximityAlertTriggered.distance|{}distance[0]
        final fun <get-distance>(): kotlin/Int // eu.vendeli.tgbot.types/ProximityAlertTriggered.distance.<get-distance>|<get-distance>(){}[0]
    final val traveler // eu.vendeli.tgbot.types/ProximityAlertTriggered.traveler|{}traveler[0]
        final fun <get-traveler>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types/ProximityAlertTriggered.traveler.<get-traveler>|<get-traveler>(){}[0]
    final val watcher // eu.vendeli.tgbot.types/ProximityAlertTriggered.watcher|{}watcher[0]
        final fun <get-watcher>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types/ProximityAlertTriggered.watcher.<get-watcher>|<get-watcher>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types/ProximityAlertTriggered.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types/ProximityAlertTriggered.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types/ProximityAlertTriggered.component3|component3(){}[0]
    final fun copy(eu.vendeli.tgbot.types/User = ..., eu.vendeli.tgbot.types/User = ..., kotlin/Int = ...): eu.vendeli.tgbot.types/ProximityAlertTriggered // eu.vendeli.tgbot.types/ProximityAlertTriggered.copy|copy(eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.User;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/ProximityAlertTriggered.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/ProximityAlertTriggered.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/ProximityAlertTriggered.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/ProximityAlertTriggered> { // eu.vendeli.tgbot.types/ProximityAlertTriggered.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/ProximityAlertTriggered.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/ProximityAlertTriggered.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/ProximityAlertTriggered.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/ProximityAlertTriggered // eu.vendeli.tgbot.types/ProximityAlertTriggered.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/ProximityAlertTriggered) // eu.vendeli.tgbot.types/ProximityAlertTriggered.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.ProximityAlertTriggered){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/ProximityAlertTriggered.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/ProximityAlertTriggered> // eu.vendeli.tgbot.types/ProximityAlertTriggered.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/ReactionCount { // eu.vendeli.tgbot.types/ReactionCount|null[0]
    constructor <init>(eu.vendeli.tgbot.types/ReactionType, kotlin/Int) // eu.vendeli.tgbot.types/ReactionCount.<init>|<init>(eu.vendeli.tgbot.types.ReactionType;kotlin.Int){}[0]

    final val totalCount // eu.vendeli.tgbot.types/ReactionCount.totalCount|{}totalCount[0]
        final fun <get-totalCount>(): kotlin/Int // eu.vendeli.tgbot.types/ReactionCount.totalCount.<get-totalCount>|<get-totalCount>(){}[0]
    final val type // eu.vendeli.tgbot.types/ReactionCount.type|{}type[0]
        final fun <get-type>(): eu.vendeli.tgbot.types/ReactionType // eu.vendeli.tgbot.types/ReactionCount.type.<get-type>|<get-type>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types/ReactionType // eu.vendeli.tgbot.types/ReactionCount.component1|component1(){}[0]
    final fun component2(): kotlin/Int // eu.vendeli.tgbot.types/ReactionCount.component2|component2(){}[0]
    final fun copy(eu.vendeli.tgbot.types/ReactionType = ..., kotlin/Int = ...): eu.vendeli.tgbot.types/ReactionCount // eu.vendeli.tgbot.types/ReactionCount.copy|copy(eu.vendeli.tgbot.types.ReactionType;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/ReactionCount.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/ReactionCount.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/ReactionCount.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/ReactionCount> { // eu.vendeli.tgbot.types/ReactionCount.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/ReactionCount.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/ReactionCount.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/ReactionCount.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/ReactionCount // eu.vendeli.tgbot.types/ReactionCount.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/ReactionCount) // eu.vendeli.tgbot.types/ReactionCount.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.ReactionCount){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/ReactionCount.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types/ReactionCount.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/ReactionCount> // eu.vendeli.tgbot.types/ReactionCount.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/ReplyParameters { // eu.vendeli.tgbot.types/ReplyParameters|null[0]
    constructor <init>(kotlin/Long, eu.vendeli.tgbot.types.internal/Identifier? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types/ReplyParameters.<init>|<init>(kotlin.Long;eu.vendeli.tgbot.types.internal.Identifier?;kotlin.Boolean?;kotlin.String?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?){}[0]

    final var allowSendingWithoutReply // eu.vendeli.tgbot.types/ReplyParameters.allowSendingWithoutReply|{}allowSendingWithoutReply[0]
        final fun <get-allowSendingWithoutReply>(): kotlin/Boolean? // eu.vendeli.tgbot.types/ReplyParameters.allowSendingWithoutReply.<get-allowSendingWithoutReply>|<get-allowSendingWithoutReply>(){}[0]
        final fun <set-allowSendingWithoutReply>(kotlin/Boolean?) // eu.vendeli.tgbot.types/ReplyParameters.allowSendingWithoutReply.<set-allowSendingWithoutReply>|<set-allowSendingWithoutReply>(kotlin.Boolean?){}[0]
    final var chatId // eu.vendeli.tgbot.types/ReplyParameters.chatId|{}chatId[0]
        final fun <get-chatId>(): eu.vendeli.tgbot.types.internal/Identifier? // eu.vendeli.tgbot.types/ReplyParameters.chatId.<get-chatId>|<get-chatId>(){}[0]
        final fun <set-chatId>(eu.vendeli.tgbot.types.internal/Identifier?) // eu.vendeli.tgbot.types/ReplyParameters.chatId.<set-chatId>|<set-chatId>(eu.vendeli.tgbot.types.internal.Identifier?){}[0]
    final var messageId // eu.vendeli.tgbot.types/ReplyParameters.messageId|{}messageId[0]
        final fun <get-messageId>(): kotlin/Long // eu.vendeli.tgbot.types/ReplyParameters.messageId.<get-messageId>|<get-messageId>(){}[0]
        final fun <set-messageId>(kotlin/Long) // eu.vendeli.tgbot.types/ReplyParameters.messageId.<set-messageId>|<set-messageId>(kotlin.Long){}[0]
    final var quote // eu.vendeli.tgbot.types/ReplyParameters.quote|{}quote[0]
        final fun <get-quote>(): kotlin/String? // eu.vendeli.tgbot.types/ReplyParameters.quote.<get-quote>|<get-quote>(){}[0]
        final fun <set-quote>(kotlin/String?) // eu.vendeli.tgbot.types/ReplyParameters.quote.<set-quote>|<set-quote>(kotlin.String?){}[0]
    final var quoteEntities // eu.vendeli.tgbot.types/ReplyParameters.quoteEntities|{}quoteEntities[0]
        final fun <get-quoteEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types/ReplyParameters.quoteEntities.<get-quoteEntities>|<get-quoteEntities>(){}[0]
        final fun <set-quoteEntities>(kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>?) // eu.vendeli.tgbot.types/ReplyParameters.quoteEntities.<set-quoteEntities>|<set-quoteEntities>(kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?){}[0]
    final var quoteParseMode // eu.vendeli.tgbot.types/ReplyParameters.quoteParseMode|{}quoteParseMode[0]
        final fun <get-quoteParseMode>(): kotlin/String? // eu.vendeli.tgbot.types/ReplyParameters.quoteParseMode.<get-quoteParseMode>|<get-quoteParseMode>(){}[0]
        final fun <set-quoteParseMode>(kotlin/String?) // eu.vendeli.tgbot.types/ReplyParameters.quoteParseMode.<set-quoteParseMode>|<set-quoteParseMode>(kotlin.String?){}[0]
    final var quotePosition // eu.vendeli.tgbot.types/ReplyParameters.quotePosition|{}quotePosition[0]
        final fun <get-quotePosition>(): kotlin/Int? // eu.vendeli.tgbot.types/ReplyParameters.quotePosition.<get-quotePosition>|<get-quotePosition>(){}[0]
        final fun <set-quotePosition>(kotlin/Int?) // eu.vendeli.tgbot.types/ReplyParameters.quotePosition.<set-quotePosition>|<set-quotePosition>(kotlin.Int?){}[0]

    final fun component1(): kotlin/Long // eu.vendeli.tgbot.types/ReplyParameters.component1|component1(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.internal/Identifier? // eu.vendeli.tgbot.types/ReplyParameters.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types/ReplyParameters.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types/ReplyParameters.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types/ReplyParameters.component5|component5(){}[0]
    final fun component6(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types/ReplyParameters.component6|component6(){}[0]
    final fun component7(): kotlin/Int? // eu.vendeli.tgbot.types/ReplyParameters.component7|component7(){}[0]
    final fun copy(kotlin/Long = ..., eu.vendeli.tgbot.types.internal/Identifier? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types/ReplyParameters // eu.vendeli.tgbot.types/ReplyParameters.copy|copy(kotlin.Long;eu.vendeli.tgbot.types.internal.Identifier?;kotlin.Boolean?;kotlin.String?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/ReplyParameters.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/ReplyParameters.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/ReplyParameters.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/ReplyParameters> { // eu.vendeli.tgbot.types/ReplyParameters.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/ReplyParameters.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/ReplyParameters.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/ReplyParameters.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/ReplyParameters // eu.vendeli.tgbot.types/ReplyParameters.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/ReplyParameters) // eu.vendeli.tgbot.types/ReplyParameters.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.ReplyParameters){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/ReplyParameters.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types/ReplyParameters.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/ReplyParameters> // eu.vendeli.tgbot.types/ReplyParameters.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/ResponseParameters { // eu.vendeli.tgbot.types/ResponseParameters|null[0]
    constructor <init>(kotlin/Long? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types/ResponseParameters.<init>|<init>(kotlin.Long?;kotlin.Int?){}[0]

    final val migrateToChatId // eu.vendeli.tgbot.types/ResponseParameters.migrateToChatId|{}migrateToChatId[0]
        final fun <get-migrateToChatId>(): kotlin/Long? // eu.vendeli.tgbot.types/ResponseParameters.migrateToChatId.<get-migrateToChatId>|<get-migrateToChatId>(){}[0]
    final val retryAfter // eu.vendeli.tgbot.types/ResponseParameters.retryAfter|{}retryAfter[0]
        final fun <get-retryAfter>(): kotlin/Int? // eu.vendeli.tgbot.types/ResponseParameters.retryAfter.<get-retryAfter>|<get-retryAfter>(){}[0]

    final fun component1(): kotlin/Long? // eu.vendeli.tgbot.types/ResponseParameters.component1|component1(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types/ResponseParameters.component2|component2(){}[0]
    final fun copy(kotlin/Long? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types/ResponseParameters // eu.vendeli.tgbot.types/ResponseParameters.copy|copy(kotlin.Long?;kotlin.Int?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/ResponseParameters.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/ResponseParameters.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/ResponseParameters.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/ResponseParameters> { // eu.vendeli.tgbot.types/ResponseParameters.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/ResponseParameters.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/ResponseParameters.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/ResponseParameters.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/ResponseParameters // eu.vendeli.tgbot.types/ResponseParameters.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/ResponseParameters) // eu.vendeli.tgbot.types/ResponseParameters.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.ResponseParameters){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/ResponseParameters.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/ResponseParameters> // eu.vendeli.tgbot.types/ResponseParameters.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/SentWebAppMessage { // eu.vendeli.tgbot.types/SentWebAppMessage|null[0]
    constructor <init>(kotlin/String? = ...) // eu.vendeli.tgbot.types/SentWebAppMessage.<init>|<init>(kotlin.String?){}[0]

    final val inlineMessageId // eu.vendeli.tgbot.types/SentWebAppMessage.inlineMessageId|{}inlineMessageId[0]
        final fun <get-inlineMessageId>(): kotlin/String? // eu.vendeli.tgbot.types/SentWebAppMessage.inlineMessageId.<get-inlineMessageId>|<get-inlineMessageId>(){}[0]

    final fun component1(): kotlin/String? // eu.vendeli.tgbot.types/SentWebAppMessage.component1|component1(){}[0]
    final fun copy(kotlin/String? = ...): eu.vendeli.tgbot.types/SentWebAppMessage // eu.vendeli.tgbot.types/SentWebAppMessage.copy|copy(kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/SentWebAppMessage.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/SentWebAppMessage.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/SentWebAppMessage.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/SentWebAppMessage> { // eu.vendeli.tgbot.types/SentWebAppMessage.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/SentWebAppMessage.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/SentWebAppMessage.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/SentWebAppMessage.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/SentWebAppMessage // eu.vendeli.tgbot.types/SentWebAppMessage.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/SentWebAppMessage) // eu.vendeli.tgbot.types/SentWebAppMessage.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.SentWebAppMessage){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/SentWebAppMessage.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/SentWebAppMessage> // eu.vendeli.tgbot.types/SentWebAppMessage.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/SharedUser { // eu.vendeli.tgbot.types/SharedUser|null[0]
    constructor <init>(kotlin/Long, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? = ...) // eu.vendeli.tgbot.types/SharedUser.<init>|<init>(kotlin.Long;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>?){}[0]

    final val firstName // eu.vendeli.tgbot.types/SharedUser.firstName|{}firstName[0]
        final fun <get-firstName>(): kotlin/String? // eu.vendeli.tgbot.types/SharedUser.firstName.<get-firstName>|<get-firstName>(){}[0]
    final val lastName // eu.vendeli.tgbot.types/SharedUser.lastName|{}lastName[0]
        final fun <get-lastName>(): kotlin/String? // eu.vendeli.tgbot.types/SharedUser.lastName.<get-lastName>|<get-lastName>(){}[0]
    final val photo // eu.vendeli.tgbot.types/SharedUser.photo|{}photo[0]
        final fun <get-photo>(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? // eu.vendeli.tgbot.types/SharedUser.photo.<get-photo>|<get-photo>(){}[0]
    final val userId // eu.vendeli.tgbot.types/SharedUser.userId|{}userId[0]
        final fun <get-userId>(): kotlin/Long // eu.vendeli.tgbot.types/SharedUser.userId.<get-userId>|<get-userId>(){}[0]
    final val username // eu.vendeli.tgbot.types/SharedUser.username|{}username[0]
        final fun <get-username>(): kotlin/String? // eu.vendeli.tgbot.types/SharedUser.username.<get-username>|<get-username>(){}[0]

    final fun component1(): kotlin/Long // eu.vendeli.tgbot.types/SharedUser.component1|component1(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.tgbot.types/SharedUser.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types/SharedUser.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types/SharedUser.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? // eu.vendeli.tgbot.types/SharedUser.component5|component5(){}[0]
    final fun copy(kotlin/Long = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>? = ...): eu.vendeli.tgbot.types/SharedUser // eu.vendeli.tgbot.types/SharedUser.copy|copy(kotlin.Long;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/SharedUser.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/SharedUser.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/SharedUser.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/SharedUser> { // eu.vendeli.tgbot.types/SharedUser.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/SharedUser.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/SharedUser.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/SharedUser.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/SharedUser // eu.vendeli.tgbot.types/SharedUser.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/SharedUser) // eu.vendeli.tgbot.types/SharedUser.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.SharedUser){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/SharedUser.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types/SharedUser.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/SharedUser> // eu.vendeli.tgbot.types/SharedUser.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/TextQuote { // eu.vendeli.tgbot.types/TextQuote|null[0]
    constructor <init>(kotlin/String, kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int, kotlin/Boolean? = ...) // eu.vendeli.tgbot.types/TextQuote.<init>|<init>(kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int;kotlin.Boolean?){}[0]

    final val entities // eu.vendeli.tgbot.types/TextQuote.entities|{}entities[0]
        final fun <get-entities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types/TextQuote.entities.<get-entities>|<get-entities>(){}[0]
    final val isManual // eu.vendeli.tgbot.types/TextQuote.isManual|{}isManual[0]
        final fun <get-isManual>(): kotlin/Boolean? // eu.vendeli.tgbot.types/TextQuote.isManual.<get-isManual>|<get-isManual>(){}[0]
    final val position // eu.vendeli.tgbot.types/TextQuote.position|{}position[0]
        final fun <get-position>(): kotlin/Int // eu.vendeli.tgbot.types/TextQuote.position.<get-position>|<get-position>(){}[0]
    final val text // eu.vendeli.tgbot.types/TextQuote.text|{}text[0]
        final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types/TextQuote.text.<get-text>|<get-text>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types/TextQuote.component1|component1(){}[0]
    final fun component2(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types/TextQuote.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types/TextQuote.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types/TextQuote.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types/TextQuote // eu.vendeli.tgbot.types/TextQuote.copy|copy(kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/TextQuote.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/TextQuote.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/TextQuote.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/TextQuote> { // eu.vendeli.tgbot.types/TextQuote.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/TextQuote.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/TextQuote.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/TextQuote.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/TextQuote // eu.vendeli.tgbot.types/TextQuote.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/TextQuote) // eu.vendeli.tgbot.types/TextQuote.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.TextQuote){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/TextQuote.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types/TextQuote.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/TextQuote> // eu.vendeli.tgbot.types/TextQuote.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/Update : eu.vendeli.tgbot.interfaces.marker/MultipleResponse { // eu.vendeli.tgbot.types/Update|null[0]
    constructor <init>(kotlin/Int, eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.business/BusinessConnection? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.business/BusinessMessagesDeleted? = ..., eu.vendeli.tgbot.types.msg/MessageReactionUpdated? = ..., eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated? = ..., eu.vendeli.tgbot.types.inline/InlineQuery? = ..., eu.vendeli.tgbot.types.inline/ChosenInlineResult? = ..., eu.vendeli.tgbot.types/CallbackQuery? = ..., eu.vendeli.tgbot.types.payment/ShippingQuery? = ..., eu.vendeli.tgbot.types.payment/PreCheckoutQuery? = ..., eu.vendeli.tgbot.types.media/PaidMediaPurchased? = ..., eu.vendeli.tgbot.types.poll/Poll? = ..., eu.vendeli.tgbot.types/PollAnswer? = ..., eu.vendeli.tgbot.types.chat/ChatMemberUpdated? = ..., eu.vendeli.tgbot.types.chat/ChatMemberUpdated? = ..., eu.vendeli.tgbot.types.chat/ChatJoinRequest? = ..., eu.vendeli.tgbot.types.boost/ChatBoostUpdated? = ..., eu.vendeli.tgbot.types.boost/ChatBoostRemoved? = ...) // eu.vendeli.tgbot.types/Update.<init>|<init>(kotlin.Int;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.business.BusinessConnection?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.business.BusinessMessagesDeleted?;eu.vendeli.tgbot.types.msg.MessageReactionUpdated?;eu.vendeli.tgbot.types.msg.MessageReactionCountUpdated?;eu.vendeli.tgbot.types.inline.InlineQuery?;eu.vendeli.tgbot.types.inline.ChosenInlineResult?;eu.vendeli.tgbot.types.CallbackQuery?;eu.vendeli.tgbot.types.payment.ShippingQuery?;eu.vendeli.tgbot.types.payment.PreCheckoutQuery?;eu.vendeli.tgbot.types.media.PaidMediaPurchased?;eu.vendeli.tgbot.types.poll.Poll?;eu.vendeli.tgbot.types.PollAnswer?;eu.vendeli.tgbot.types.chat.ChatMemberUpdated?;eu.vendeli.tgbot.types.chat.ChatMemberUpdated?;eu.vendeli.tgbot.types.chat.ChatJoinRequest?;eu.vendeli.tgbot.types.boost.ChatBoostUpdated?;eu.vendeli.tgbot.types.boost.ChatBoostRemoved?){}[0]

    final val businessConnection // eu.vendeli.tgbot.types/Update.businessConnection|{}businessConnection[0]
        final fun <get-businessConnection>(): eu.vendeli.tgbot.types.business/BusinessConnection? // eu.vendeli.tgbot.types/Update.businessConnection.<get-businessConnection>|<get-businessConnection>(){}[0]
    final val businessMessage // eu.vendeli.tgbot.types/Update.businessMessage|{}businessMessage[0]
        final fun <get-businessMessage>(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types/Update.businessMessage.<get-businessMessage>|<get-businessMessage>(){}[0]
    final val callbackQuery // eu.vendeli.tgbot.types/Update.callbackQuery|{}callbackQuery[0]
        final fun <get-callbackQuery>(): eu.vendeli.tgbot.types/CallbackQuery? // eu.vendeli.tgbot.types/Update.callbackQuery.<get-callbackQuery>|<get-callbackQuery>(){}[0]
    final val channelPost // eu.vendeli.tgbot.types/Update.channelPost|{}channelPost[0]
        final fun <get-channelPost>(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types/Update.channelPost.<get-channelPost>|<get-channelPost>(){}[0]
    final val chatBoost // eu.vendeli.tgbot.types/Update.chatBoost|{}chatBoost[0]
        final fun <get-chatBoost>(): eu.vendeli.tgbot.types.boost/ChatBoostUpdated? // eu.vendeli.tgbot.types/Update.chatBoost.<get-chatBoost>|<get-chatBoost>(){}[0]
    final val chatJoinRequest // eu.vendeli.tgbot.types/Update.chatJoinRequest|{}chatJoinRequest[0]
        final fun <get-chatJoinRequest>(): eu.vendeli.tgbot.types.chat/ChatJoinRequest? // eu.vendeli.tgbot.types/Update.chatJoinRequest.<get-chatJoinRequest>|<get-chatJoinRequest>(){}[0]
    final val chatMember // eu.vendeli.tgbot.types/Update.chatMember|{}chatMember[0]
        final fun <get-chatMember>(): eu.vendeli.tgbot.types.chat/ChatMemberUpdated? // eu.vendeli.tgbot.types/Update.chatMember.<get-chatMember>|<get-chatMember>(){}[0]
    final val chosenInlineResult // eu.vendeli.tgbot.types/Update.chosenInlineResult|{}chosenInlineResult[0]
        final fun <get-chosenInlineResult>(): eu.vendeli.tgbot.types.inline/ChosenInlineResult? // eu.vendeli.tgbot.types/Update.chosenInlineResult.<get-chosenInlineResult>|<get-chosenInlineResult>(){}[0]
    final val deletedBusinessMessages // eu.vendeli.tgbot.types/Update.deletedBusinessMessages|{}deletedBusinessMessages[0]
        final fun <get-deletedBusinessMessages>(): eu.vendeli.tgbot.types.business/BusinessMessagesDeleted? // eu.vendeli.tgbot.types/Update.deletedBusinessMessages.<get-deletedBusinessMessages>|<get-deletedBusinessMessages>(){}[0]
    final val editedBusinessMessage // eu.vendeli.tgbot.types/Update.editedBusinessMessage|{}editedBusinessMessage[0]
        final fun <get-editedBusinessMessage>(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types/Update.editedBusinessMessage.<get-editedBusinessMessage>|<get-editedBusinessMessage>(){}[0]
    final val editedChannelPost // eu.vendeli.tgbot.types/Update.editedChannelPost|{}editedChannelPost[0]
        final fun <get-editedChannelPost>(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types/Update.editedChannelPost.<get-editedChannelPost>|<get-editedChannelPost>(){}[0]
    final val editedMessage // eu.vendeli.tgbot.types/Update.editedMessage|{}editedMessage[0]
        final fun <get-editedMessage>(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types/Update.editedMessage.<get-editedMessage>|<get-editedMessage>(){}[0]
    final val inlineQuery // eu.vendeli.tgbot.types/Update.inlineQuery|{}inlineQuery[0]
        final fun <get-inlineQuery>(): eu.vendeli.tgbot.types.inline/InlineQuery? // eu.vendeli.tgbot.types/Update.inlineQuery.<get-inlineQuery>|<get-inlineQuery>(){}[0]
    final val message // eu.vendeli.tgbot.types/Update.message|{}message[0]
        final fun <get-message>(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types/Update.message.<get-message>|<get-message>(){}[0]
    final val messageReaction // eu.vendeli.tgbot.types/Update.messageReaction|{}messageReaction[0]
        final fun <get-messageReaction>(): eu.vendeli.tgbot.types.msg/MessageReactionUpdated? // eu.vendeli.tgbot.types/Update.messageReaction.<get-messageReaction>|<get-messageReaction>(){}[0]
    final val messageReactionCount // eu.vendeli.tgbot.types/Update.messageReactionCount|{}messageReactionCount[0]
        final fun <get-messageReactionCount>(): eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated? // eu.vendeli.tgbot.types/Update.messageReactionCount.<get-messageReactionCount>|<get-messageReactionCount>(){}[0]
    final val myChatMember // eu.vendeli.tgbot.types/Update.myChatMember|{}myChatMember[0]
        final fun <get-myChatMember>(): eu.vendeli.tgbot.types.chat/ChatMemberUpdated? // eu.vendeli.tgbot.types/Update.myChatMember.<get-myChatMember>|<get-myChatMember>(){}[0]
    final val poll // eu.vendeli.tgbot.types/Update.poll|{}poll[0]
        final fun <get-poll>(): eu.vendeli.tgbot.types.poll/Poll? // eu.vendeli.tgbot.types/Update.poll.<get-poll>|<get-poll>(){}[0]
    final val pollAnswer // eu.vendeli.tgbot.types/Update.pollAnswer|{}pollAnswer[0]
        final fun <get-pollAnswer>(): eu.vendeli.tgbot.types/PollAnswer? // eu.vendeli.tgbot.types/Update.pollAnswer.<get-pollAnswer>|<get-pollAnswer>(){}[0]
    final val preCheckoutQuery // eu.vendeli.tgbot.types/Update.preCheckoutQuery|{}preCheckoutQuery[0]
        final fun <get-preCheckoutQuery>(): eu.vendeli.tgbot.types.payment/PreCheckoutQuery? // eu.vendeli.tgbot.types/Update.preCheckoutQuery.<get-preCheckoutQuery>|<get-preCheckoutQuery>(){}[0]
    final val purchasedPaidMedia // eu.vendeli.tgbot.types/Update.purchasedPaidMedia|{}purchasedPaidMedia[0]
        final fun <get-purchasedPaidMedia>(): eu.vendeli.tgbot.types.media/PaidMediaPurchased? // eu.vendeli.tgbot.types/Update.purchasedPaidMedia.<get-purchasedPaidMedia>|<get-purchasedPaidMedia>(){}[0]
    final val removedChatBoost // eu.vendeli.tgbot.types/Update.removedChatBoost|{}removedChatBoost[0]
        final fun <get-removedChatBoost>(): eu.vendeli.tgbot.types.boost/ChatBoostRemoved? // eu.vendeli.tgbot.types/Update.removedChatBoost.<get-removedChatBoost>|<get-removedChatBoost>(){}[0]
    final val shippingQuery // eu.vendeli.tgbot.types/Update.shippingQuery|{}shippingQuery[0]
        final fun <get-shippingQuery>(): eu.vendeli.tgbot.types.payment/ShippingQuery? // eu.vendeli.tgbot.types/Update.shippingQuery.<get-shippingQuery>|<get-shippingQuery>(){}[0]
    final val updateId // eu.vendeli.tgbot.types/Update.updateId|{}updateId[0]
        final fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types/Update.updateId.<get-updateId>|<get-updateId>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types/Update.component1|component1(){}[0]
    final fun component10(): eu.vendeli.tgbot.types.msg/MessageReactionUpdated? // eu.vendeli.tgbot.types/Update.component10|component10(){}[0]
    final fun component11(): eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated? // eu.vendeli.tgbot.types/Update.component11|component11(){}[0]
    final fun component12(): eu.vendeli.tgbot.types.inline/InlineQuery? // eu.vendeli.tgbot.types/Update.component12|component12(){}[0]
    final fun component13(): eu.vendeli.tgbot.types.inline/ChosenInlineResult? // eu.vendeli.tgbot.types/Update.component13|component13(){}[0]
    final fun component14(): eu.vendeli.tgbot.types/CallbackQuery? // eu.vendeli.tgbot.types/Update.component14|component14(){}[0]
    final fun component15(): eu.vendeli.tgbot.types.payment/ShippingQuery? // eu.vendeli.tgbot.types/Update.component15|component15(){}[0]
    final fun component16(): eu.vendeli.tgbot.types.payment/PreCheckoutQuery? // eu.vendeli.tgbot.types/Update.component16|component16(){}[0]
    final fun component17(): eu.vendeli.tgbot.types.media/PaidMediaPurchased? // eu.vendeli.tgbot.types/Update.component17|component17(){}[0]
    final fun component18(): eu.vendeli.tgbot.types.poll/Poll? // eu.vendeli.tgbot.types/Update.component18|component18(){}[0]
    final fun component19(): eu.vendeli.tgbot.types/PollAnswer? // eu.vendeli.tgbot.types/Update.component19|component19(){}[0]
    final fun component2(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types/Update.component2|component2(){}[0]
    final fun component20(): eu.vendeli.tgbot.types.chat/ChatMemberUpdated? // eu.vendeli.tgbot.types/Update.component20|component20(){}[0]
    final fun component21(): eu.vendeli.tgbot.types.chat/ChatMemberUpdated? // eu.vendeli.tgbot.types/Update.component21|component21(){}[0]
    final fun component22(): eu.vendeli.tgbot.types.chat/ChatJoinRequest? // eu.vendeli.tgbot.types/Update.component22|component22(){}[0]
    final fun component23(): eu.vendeli.tgbot.types.boost/ChatBoostUpdated? // eu.vendeli.tgbot.types/Update.component23|component23(){}[0]
    final fun component24(): eu.vendeli.tgbot.types.boost/ChatBoostRemoved? // eu.vendeli.tgbot.types/Update.component24|component24(){}[0]
    final fun component3(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types/Update.component3|component3(){}[0]
    final fun component4(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types/Update.component4|component4(){}[0]
    final fun component5(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types/Update.component5|component5(){}[0]
    final fun component6(): eu.vendeli.tgbot.types.business/BusinessConnection? // eu.vendeli.tgbot.types/Update.component6|component6(){}[0]
    final fun component7(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types/Update.component7|component7(){}[0]
    final fun component8(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types/Update.component8|component8(){}[0]
    final fun component9(): eu.vendeli.tgbot.types.business/BusinessMessagesDeleted? // eu.vendeli.tgbot.types/Update.component9|component9(){}[0]
    final fun copy(kotlin/Int = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.business/BusinessConnection? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.msg/Message? = ..., eu.vendeli.tgbot.types.business/BusinessMessagesDeleted? = ..., eu.vendeli.tgbot.types.msg/MessageReactionUpdated? = ..., eu.vendeli.tgbot.types.msg/MessageReactionCountUpdated? = ..., eu.vendeli.tgbot.types.inline/InlineQuery? = ..., eu.vendeli.tgbot.types.inline/ChosenInlineResult? = ..., eu.vendeli.tgbot.types/CallbackQuery? = ..., eu.vendeli.tgbot.types.payment/ShippingQuery? = ..., eu.vendeli.tgbot.types.payment/PreCheckoutQuery? = ..., eu.vendeli.tgbot.types.media/PaidMediaPurchased? = ..., eu.vendeli.tgbot.types.poll/Poll? = ..., eu.vendeli.tgbot.types/PollAnswer? = ..., eu.vendeli.tgbot.types.chat/ChatMemberUpdated? = ..., eu.vendeli.tgbot.types.chat/ChatMemberUpdated? = ..., eu.vendeli.tgbot.types.chat/ChatJoinRequest? = ..., eu.vendeli.tgbot.types.boost/ChatBoostUpdated? = ..., eu.vendeli.tgbot.types.boost/ChatBoostRemoved? = ...): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types/Update.copy|copy(kotlin.Int;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.business.BusinessConnection?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.msg.Message?;eu.vendeli.tgbot.types.business.BusinessMessagesDeleted?;eu.vendeli.tgbot.types.msg.MessageReactionUpdated?;eu.vendeli.tgbot.types.msg.MessageReactionCountUpdated?;eu.vendeli.tgbot.types.inline.InlineQuery?;eu.vendeli.tgbot.types.inline.ChosenInlineResult?;eu.vendeli.tgbot.types.CallbackQuery?;eu.vendeli.tgbot.types.payment.ShippingQuery?;eu.vendeli.tgbot.types.payment.PreCheckoutQuery?;eu.vendeli.tgbot.types.media.PaidMediaPurchased?;eu.vendeli.tgbot.types.poll.Poll?;eu.vendeli.tgbot.types.PollAnswer?;eu.vendeli.tgbot.types.chat.ChatMemberUpdated?;eu.vendeli.tgbot.types.chat.ChatMemberUpdated?;eu.vendeli.tgbot.types.chat.ChatJoinRequest?;eu.vendeli.tgbot.types.boost.ChatBoostUpdated?;eu.vendeli.tgbot.types.boost.ChatBoostRemoved?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/Update.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/Update.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/Update.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/Update> { // eu.vendeli.tgbot.types/Update.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/Update.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/Update.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/Update.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types/Update.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/Update) // eu.vendeli.tgbot.types/Update.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.Update){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/Update.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/Update> // eu.vendeli.tgbot.types/Update.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/User : eu.vendeli.tgbot.types.internal/IdLong { // eu.vendeli.tgbot.types/User|null[0]
    constructor <init>(kotlin/Long, kotlin/Boolean, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types/User.<init>|<init>(kotlin.Long;kotlin.Boolean;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]

    final val addedToAttachmentMenu // eu.vendeli.tgbot.types/User.addedToAttachmentMenu|{}addedToAttachmentMenu[0]
        final fun <get-addedToAttachmentMenu>(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.addedToAttachmentMenu.<get-addedToAttachmentMenu>|<get-addedToAttachmentMenu>(){}[0]
    final val canConnectToBusiness // eu.vendeli.tgbot.types/User.canConnectToBusiness|{}canConnectToBusiness[0]
        final fun <get-canConnectToBusiness>(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.canConnectToBusiness.<get-canConnectToBusiness>|<get-canConnectToBusiness>(){}[0]
    final val canJoinGroups // eu.vendeli.tgbot.types/User.canJoinGroups|{}canJoinGroups[0]
        final fun <get-canJoinGroups>(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.canJoinGroups.<get-canJoinGroups>|<get-canJoinGroups>(){}[0]
    final val canReadAllGroupMessages // eu.vendeli.tgbot.types/User.canReadAllGroupMessages|{}canReadAllGroupMessages[0]
        final fun <get-canReadAllGroupMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.canReadAllGroupMessages.<get-canReadAllGroupMessages>|<get-canReadAllGroupMessages>(){}[0]
    final val firstName // eu.vendeli.tgbot.types/User.firstName|{}firstName[0]
        final fun <get-firstName>(): kotlin/String // eu.vendeli.tgbot.types/User.firstName.<get-firstName>|<get-firstName>(){}[0]
    final val hasMainWebApp // eu.vendeli.tgbot.types/User.hasMainWebApp|{}hasMainWebApp[0]
        final fun <get-hasMainWebApp>(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.hasMainWebApp.<get-hasMainWebApp>|<get-hasMainWebApp>(){}[0]
    final val id // eu.vendeli.tgbot.types/User.id|{}id[0]
        final fun <get-id>(): kotlin/Long // eu.vendeli.tgbot.types/User.id.<get-id>|<get-id>(){}[0]
    final val isBot // eu.vendeli.tgbot.types/User.isBot|{}isBot[0]
        final fun <get-isBot>(): kotlin/Boolean // eu.vendeli.tgbot.types/User.isBot.<get-isBot>|<get-isBot>(){}[0]
    final val isPremium // eu.vendeli.tgbot.types/User.isPremium|{}isPremium[0]
        final fun <get-isPremium>(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.isPremium.<get-isPremium>|<get-isPremium>(){}[0]
    final val languageCode // eu.vendeli.tgbot.types/User.languageCode|{}languageCode[0]
        final fun <get-languageCode>(): kotlin/String? // eu.vendeli.tgbot.types/User.languageCode.<get-languageCode>|<get-languageCode>(){}[0]
    final val lastName // eu.vendeli.tgbot.types/User.lastName|{}lastName[0]
        final fun <get-lastName>(): kotlin/String? // eu.vendeli.tgbot.types/User.lastName.<get-lastName>|<get-lastName>(){}[0]
    final val supportsInlineQueries // eu.vendeli.tgbot.types/User.supportsInlineQueries|{}supportsInlineQueries[0]
        final fun <get-supportsInlineQueries>(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.supportsInlineQueries.<get-supportsInlineQueries>|<get-supportsInlineQueries>(){}[0]
    final val username // eu.vendeli.tgbot.types/User.username|{}username[0]
        final fun <get-username>(): kotlin/String? // eu.vendeli.tgbot.types/User.username.<get-username>|<get-username>(){}[0]

    final fun component1(): kotlin/Long // eu.vendeli.tgbot.types/User.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.component10|component10(){}[0]
    final fun component11(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.component11|component11(){}[0]
    final fun component12(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.component12|component12(){}[0]
    final fun component13(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.component13|component13(){}[0]
    final fun component2(): kotlin/Boolean // eu.vendeli.tgbot.types/User.component2|component2(){}[0]
    final fun component3(): kotlin/String // eu.vendeli.tgbot.types/User.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types/User.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types/User.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types/User.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.component7|component7(){}[0]
    final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.component8|component8(){}[0]
    final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types/User.component9|component9(){}[0]
    final fun copy(kotlin/Long = ..., kotlin/Boolean = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types/User.copy|copy(kotlin.Long;kotlin.Boolean;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/User.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/User.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/User.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/User> { // eu.vendeli.tgbot.types/User.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/User.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/User.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/User.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types/User.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/User) // eu.vendeli.tgbot.types/User.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.User){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/User.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/User> // eu.vendeli.tgbot.types/User.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/UserProfilePhotos { // eu.vendeli.tgbot.types/UserProfilePhotos|null[0]
    constructor <init>(kotlin/Int, kotlin.collections/List<kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>>) // eu.vendeli.tgbot.types/UserProfilePhotos.<init>|<init>(kotlin.Int;kotlin.collections.List<kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>>){}[0]

    final val photos // eu.vendeli.tgbot.types/UserProfilePhotos.photos|{}photos[0]
        final fun <get-photos>(): kotlin.collections/List<kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>> // eu.vendeli.tgbot.types/UserProfilePhotos.photos.<get-photos>|<get-photos>(){}[0]
    final val totalCount // eu.vendeli.tgbot.types/UserProfilePhotos.totalCount|{}totalCount[0]
        final fun <get-totalCount>(): kotlin/Int // eu.vendeli.tgbot.types/UserProfilePhotos.totalCount.<get-totalCount>|<get-totalCount>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types/UserProfilePhotos.component1|component1(){}[0]
    final fun component2(): kotlin.collections/List<kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>> // eu.vendeli.tgbot.types/UserProfilePhotos.component2|component2(){}[0]
    final fun copy(kotlin/Int = ..., kotlin.collections/List<kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>> = ...): eu.vendeli.tgbot.types/UserProfilePhotos // eu.vendeli.tgbot.types/UserProfilePhotos.copy|copy(kotlin.Int;kotlin.collections.List<kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/UserProfilePhotos.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/UserProfilePhotos.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/UserProfilePhotos.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/UserProfilePhotos> { // eu.vendeli.tgbot.types/UserProfilePhotos.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/UserProfilePhotos.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/UserProfilePhotos.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/UserProfilePhotos.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/UserProfilePhotos // eu.vendeli.tgbot.types/UserProfilePhotos.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/UserProfilePhotos) // eu.vendeli.tgbot.types/UserProfilePhotos.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.UserProfilePhotos){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/UserProfilePhotos.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types/UserProfilePhotos.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/UserProfilePhotos> // eu.vendeli.tgbot.types/UserProfilePhotos.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/UsersShared { // eu.vendeli.tgbot.types/UsersShared|null[0]
    constructor <init>(kotlin/Int, kotlin.collections/List<eu.vendeli.tgbot.types/SharedUser>) // eu.vendeli.tgbot.types/UsersShared.<init>|<init>(kotlin.Int;kotlin.collections.List<eu.vendeli.tgbot.types.SharedUser>){}[0]

    final val requestId // eu.vendeli.tgbot.types/UsersShared.requestId|{}requestId[0]
        final fun <get-requestId>(): kotlin/Int // eu.vendeli.tgbot.types/UsersShared.requestId.<get-requestId>|<get-requestId>(){}[0]
    final val users // eu.vendeli.tgbot.types/UsersShared.users|{}users[0]
        final fun <get-users>(): kotlin.collections/List<eu.vendeli.tgbot.types/SharedUser> // eu.vendeli.tgbot.types/UsersShared.users.<get-users>|<get-users>(){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.tgbot.types/UsersShared.component1|component1(){}[0]
    final fun component2(): kotlin.collections/List<eu.vendeli.tgbot.types/SharedUser> // eu.vendeli.tgbot.types/UsersShared.component2|component2(){}[0]
    final fun copy(kotlin/Int = ..., kotlin.collections/List<eu.vendeli.tgbot.types/SharedUser> = ...): eu.vendeli.tgbot.types/UsersShared // eu.vendeli.tgbot.types/UsersShared.copy|copy(kotlin.Int;kotlin.collections.List<eu.vendeli.tgbot.types.SharedUser>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/UsersShared.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/UsersShared.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/UsersShared.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/UsersShared> { // eu.vendeli.tgbot.types/UsersShared.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/UsersShared.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/UsersShared.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/UsersShared.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/UsersShared // eu.vendeli.tgbot.types/UsersShared.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/UsersShared) // eu.vendeli.tgbot.types/UsersShared.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.UsersShared){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/UsersShared.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types/UsersShared.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/UsersShared> // eu.vendeli.tgbot.types/UsersShared.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/Venue { // eu.vendeli.tgbot.types/Venue|null[0]
    constructor <init>(eu.vendeli.tgbot.types/Location, kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types/Venue.<init>|<init>(eu.vendeli.tgbot.types.Location;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?){}[0]

    final val address // eu.vendeli.tgbot.types/Venue.address|{}address[0]
        final fun <get-address>(): kotlin/String // eu.vendeli.tgbot.types/Venue.address.<get-address>|<get-address>(){}[0]
    final val foursquareId // eu.vendeli.tgbot.types/Venue.foursquareId|{}foursquareId[0]
        final fun <get-foursquareId>(): kotlin/String? // eu.vendeli.tgbot.types/Venue.foursquareId.<get-foursquareId>|<get-foursquareId>(){}[0]
    final val foursquareType // eu.vendeli.tgbot.types/Venue.foursquareType|{}foursquareType[0]
        final fun <get-foursquareType>(): kotlin/String? // eu.vendeli.tgbot.types/Venue.foursquareType.<get-foursquareType>|<get-foursquareType>(){}[0]
    final val googlePlaceId // eu.vendeli.tgbot.types/Venue.googlePlaceId|{}googlePlaceId[0]
        final fun <get-googlePlaceId>(): kotlin/String? // eu.vendeli.tgbot.types/Venue.googlePlaceId.<get-googlePlaceId>|<get-googlePlaceId>(){}[0]
    final val googlePlaceType // eu.vendeli.tgbot.types/Venue.googlePlaceType|{}googlePlaceType[0]
        final fun <get-googlePlaceType>(): kotlin/String? // eu.vendeli.tgbot.types/Venue.googlePlaceType.<get-googlePlaceType>|<get-googlePlaceType>(){}[0]
    final val location // eu.vendeli.tgbot.types/Venue.location|{}location[0]
        final fun <get-location>(): eu.vendeli.tgbot.types/Location // eu.vendeli.tgbot.types/Venue.location.<get-location>|<get-location>(){}[0]
    final val title // eu.vendeli.tgbot.types/Venue.title|{}title[0]
        final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types/Venue.title.<get-title>|<get-title>(){}[0]

    final fun component1(): eu.vendeli.tgbot.types/Location // eu.vendeli.tgbot.types/Venue.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.tgbot.types/Venue.component2|component2(){}[0]
    final fun component3(): kotlin/String // eu.vendeli.tgbot.types/Venue.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types/Venue.component4|component4(){}[0]
    final fun component5(): kotlin/String? // eu.vendeli.tgbot.types/Venue.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types/Venue.component6|component6(){}[0]
    final fun component7(): kotlin/String? // eu.vendeli.tgbot.types/Venue.component7|component7(){}[0]
    final fun copy(eu.vendeli.tgbot.types/Location = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types/Venue // eu.vendeli.tgbot.types/Venue.copy|copy(eu.vendeli.tgbot.types.Location;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/Venue.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/Venue.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/Venue.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/Venue> { // eu.vendeli.tgbot.types/Venue.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/Venue.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/Venue.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/Venue.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/Venue // eu.vendeli.tgbot.types/Venue.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/Venue) // eu.vendeli.tgbot.types/Venue.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.Venue){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/Venue.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/Venue> // eu.vendeli.tgbot.types/Venue.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/WebhookInfo { // eu.vendeli.tgbot.types/WebhookInfo|null[0]
    constructor <init>(kotlin/String, kotlin/Boolean, kotlin/Int, kotlin/String? = ..., kotlinx.datetime/Instant? = ..., kotlin/String? = ..., kotlinx.datetime/Instant? = ..., kotlin/Int? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? = ...) // eu.vendeli.tgbot.types/WebhookInfo.<init>|<init>(kotlin.String;kotlin.Boolean;kotlin.Int;kotlin.String?;kotlinx.datetime.Instant?;kotlin.String?;kotlinx.datetime.Instant?;kotlin.Int?;kotlin.collections.List<eu.vendeli.tgbot.types.internal.UpdateType>?){}[0]

    final val allowedUpdates // eu.vendeli.tgbot.types/WebhookInfo.allowedUpdates|{}allowedUpdates[0]
        final fun <get-allowedUpdates>(): kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? // eu.vendeli.tgbot.types/WebhookInfo.allowedUpdates.<get-allowedUpdates>|<get-allowedUpdates>(){}[0]
    final val hasCustomCertificate // eu.vendeli.tgbot.types/WebhookInfo.hasCustomCertificate|{}hasCustomCertificate[0]
        final fun <get-hasCustomCertificate>(): kotlin/Boolean // eu.vendeli.tgbot.types/WebhookInfo.hasCustomCertificate.<get-hasCustomCertificate>|<get-hasCustomCertificate>(){}[0]
    final val ipAddress // eu.vendeli.tgbot.types/WebhookInfo.ipAddress|{}ipAddress[0]
        final fun <get-ipAddress>(): kotlin/String? // eu.vendeli.tgbot.types/WebhookInfo.ipAddress.<get-ipAddress>|<get-ipAddress>(){}[0]
    final val lastErrorDate // eu.vendeli.tgbot.types/WebhookInfo.lastErrorDate|{}lastErrorDate[0]
        final fun <get-lastErrorDate>(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types/WebhookInfo.lastErrorDate.<get-lastErrorDate>|<get-lastErrorDate>(){}[0]
    final val lastErrorMessage // eu.vendeli.tgbot.types/WebhookInfo.lastErrorMessage|{}lastErrorMessage[0]
        final fun <get-lastErrorMessage>(): kotlin/String? // eu.vendeli.tgbot.types/WebhookInfo.lastErrorMessage.<get-lastErrorMessage>|<get-lastErrorMessage>(){}[0]
    final val lastSynchronizationErrorDate // eu.vendeli.tgbot.types/WebhookInfo.lastSynchronizationErrorDate|{}lastSynchronizationErrorDate[0]
        final fun <get-lastSynchronizationErrorDate>(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types/WebhookInfo.lastSynchronizationErrorDate.<get-lastSynchronizationErrorDate>|<get-lastSynchronizationErrorDate>(){}[0]
    final val maxConnections // eu.vendeli.tgbot.types/WebhookInfo.maxConnections|{}maxConnections[0]
        final fun <get-maxConnections>(): kotlin/Int? // eu.vendeli.tgbot.types/WebhookInfo.maxConnections.<get-maxConnections>|<get-maxConnections>(){}[0]
    final val pendingUpdateCount // eu.vendeli.tgbot.types/WebhookInfo.pendingUpdateCount|{}pendingUpdateCount[0]
        final fun <get-pendingUpdateCount>(): kotlin/Int // eu.vendeli.tgbot.types/WebhookInfo.pendingUpdateCount.<get-pendingUpdateCount>|<get-pendingUpdateCount>(){}[0]
    final val url // eu.vendeli.tgbot.types/WebhookInfo.url|{}url[0]
        final fun <get-url>(): kotlin/String // eu.vendeli.tgbot.types/WebhookInfo.url.<get-url>|<get-url>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.tgbot.types/WebhookInfo.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean // eu.vendeli.tgbot.types/WebhookInfo.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.tgbot.types/WebhookInfo.component3|component3(){}[0]
    final fun component4(): kotlin/String? // eu.vendeli.tgbot.types/WebhookInfo.component4|component4(){}[0]
    final fun component5(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types/WebhookInfo.component5|component5(){}[0]
    final fun component6(): kotlin/String? // eu.vendeli.tgbot.types/WebhookInfo.component6|component6(){}[0]
    final fun component7(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types/WebhookInfo.component7|component7(){}[0]
    final fun component8(): kotlin/Int? // eu.vendeli.tgbot.types/WebhookInfo.component8|component8(){}[0]
    final fun component9(): kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? // eu.vendeli.tgbot.types/WebhookInfo.component9|component9(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Boolean = ..., kotlin/Int = ..., kotlin/String? = ..., kotlinx.datetime/Instant? = ..., kotlin/String? = ..., kotlinx.datetime/Instant? = ..., kotlin/Int? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? = ...): eu.vendeli.tgbot.types/WebhookInfo // eu.vendeli.tgbot.types/WebhookInfo.copy|copy(kotlin.String;kotlin.Boolean;kotlin.Int;kotlin.String?;kotlinx.datetime.Instant?;kotlin.String?;kotlinx.datetime.Instant?;kotlin.Int?;kotlin.collections.List<eu.vendeli.tgbot.types.internal.UpdateType>?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/WebhookInfo.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/WebhookInfo.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/WebhookInfo.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/WebhookInfo> { // eu.vendeli.tgbot.types/WebhookInfo.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/WebhookInfo.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/WebhookInfo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/WebhookInfo.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/WebhookInfo // eu.vendeli.tgbot.types/WebhookInfo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/WebhookInfo) // eu.vendeli.tgbot.types/WebhookInfo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.WebhookInfo){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/WebhookInfo.Companion|null[0]
        final val $childSerializers // eu.vendeli.tgbot.types/WebhookInfo.Companion.$childSerializers|{}$childSerializers[0]

        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/WebhookInfo> // eu.vendeli.tgbot.types/WebhookInfo.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.types/WriteAccessAllowed { // eu.vendeli.tgbot.types/WriteAccessAllowed|null[0]
    constructor <init>(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types/WriteAccessAllowed.<init>|<init>(kotlin.Boolean?;kotlin.Boolean?;kotlin.String?){}[0]

    final val fromAttachmentMenu // eu.vendeli.tgbot.types/WriteAccessAllowed.fromAttachmentMenu|{}fromAttachmentMenu[0]
        final fun <get-fromAttachmentMenu>(): kotlin/Boolean? // eu.vendeli.tgbot.types/WriteAccessAllowed.fromAttachmentMenu.<get-fromAttachmentMenu>|<get-fromAttachmentMenu>(){}[0]
    final val fromRequest // eu.vendeli.tgbot.types/WriteAccessAllowed.fromRequest|{}fromRequest[0]
        final fun <get-fromRequest>(): kotlin/Boolean? // eu.vendeli.tgbot.types/WriteAccessAllowed.fromRequest.<get-fromRequest>|<get-fromRequest>(){}[0]
    final val webAppName // eu.vendeli.tgbot.types/WriteAccessAllowed.webAppName|{}webAppName[0]
        final fun <get-webAppName>(): kotlin/String? // eu.vendeli.tgbot.types/WriteAccessAllowed.webAppName.<get-webAppName>|<get-webAppName>(){}[0]

    final fun component1(): kotlin/Boolean? // eu.vendeli.tgbot.types/WriteAccessAllowed.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean? // eu.vendeli.tgbot.types/WriteAccessAllowed.component2|component2(){}[0]
    final fun component3(): kotlin/String? // eu.vendeli.tgbot.types/WriteAccessAllowed.component3|component3(){}[0]
    final fun copy(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types/WriteAccessAllowed // eu.vendeli.tgbot.types/WriteAccessAllowed.copy|copy(kotlin.Boolean?;kotlin.Boolean?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/WriteAccessAllowed.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/WriteAccessAllowed.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types/WriteAccessAllowed.toString|toString(){}[0]

    final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/WriteAccessAllowed> { // eu.vendeli.tgbot.types/WriteAccessAllowed.$serializer|null[0]
        final val descriptor // eu.vendeli.tgbot.types/WriteAccessAllowed.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/WriteAccessAllowed.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/WriteAccessAllowed.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/WriteAccessAllowed // eu.vendeli.tgbot.types/WriteAccessAllowed.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/WriteAccessAllowed) // eu.vendeli.tgbot.types/WriteAccessAllowed.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.WriteAccessAllowed){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types/WriteAccessAllowed.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/WriteAccessAllowed> // eu.vendeli.tgbot.types/WriteAccessAllowed.Companion.serializer|serializer(){}[0]
    }
}

final class eu.vendeli.tgbot.utils.builders/BotCommandsBuilder { // eu.vendeli.tgbot.utils.builders/BotCommandsBuilder|null[0]
    constructor <init>() // eu.vendeli.tgbot.utils.builders/BotCommandsBuilder.<init>|<init>(){}[0]

    final fun (kotlin/String).description(kotlin/String) // eu.vendeli.tgbot.utils.builders/BotCommandsBuilder.description|description@kotlin.String(kotlin.String){}[0]
    final fun botCommand(kotlin/String, kotlin/String) // eu.vendeli.tgbot.utils.builders/BotCommandsBuilder.botCommand|botCommand(kotlin.String;kotlin.String){}[0]
}

final class eu.vendeli.tgbot.utils.builders/EntitiesBuilder { // eu.vendeli.tgbot.utils.builders/EntitiesBuilder|null[0]
    constructor <init>() // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.<init>|<init>(){}[0]

    final fun (kotlin/Pair<kotlin/Int, kotlin/Int>).customEmoji(kotlin/String) // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.customEmoji|customEmoji@kotlin.Pair<kotlin.Int,kotlin.Int>(kotlin.String){}[0]
    final fun (kotlin/Pair<kotlin/Int, kotlin/Int>).language(kotlin/String) // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.language|language@kotlin.Pair<kotlin.Int,kotlin.Int>(kotlin.String){}[0]
    final fun (kotlin/Pair<kotlin/Int, kotlin/Int>).url(kotlin/String) // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.url|url@kotlin.Pair<kotlin.Int,kotlin.Int>(kotlin.String){}[0]
    final fun (kotlin/Pair<kotlin/Int, kotlin/Int>).user(eu.vendeli.tgbot.types/User) // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.user|user@kotlin.Pair<kotlin.Int,kotlin.Int>(eu.vendeli.tgbot.types.User){}[0]
    final fun entity(eu.vendeli.tgbot.types.msg/EntityType, kotlin/Int, kotlin/Int, kotlin/Function1<eu.vendeli.tgbot.utils.builders/EntitiesBuilder.EntityData, kotlin/Unit> = ...) // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.entity|entity(eu.vendeli.tgbot.types.msg.EntityType;kotlin.Int;kotlin.Int;kotlin.Function1<eu.vendeli.tgbot.utils.builders.EntitiesBuilder.EntityData,kotlin.Unit>){}[0]

    final class EntityData { // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.EntityData|null[0]
        final var language // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.EntityData.language|{}language[0]
            final fun <get-language>(): kotlin/String? // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.EntityData.language.<get-language>|<get-language>(){}[0]
            final fun <set-language>(kotlin/String?) // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.EntityData.language.<set-language>|<set-language>(kotlin.String?){}[0]
        final var url // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.EntityData.url|{}url[0]
            final fun <get-url>(): kotlin/String? // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.EntityData.url.<get-url>|<get-url>(){}[0]
            final fun <set-url>(kotlin/String?) // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.EntityData.url.<set-url>|<set-url>(kotlin.String?){}[0]
        final var user // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.EntityData.user|{}user[0]
            final fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.EntityData.user.<get-user>|<get-user>(){}[0]
            final fun <set-user>(eu.vendeli.tgbot.types/User?) // eu.vendeli.tgbot.utils.builders/EntitiesBuilder.EntityData.user.<set-user>|<set-user>(eu.vendeli.tgbot.types.User?){}[0]
    }
}

final class eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder : eu.vendeli.tgbot.utils.builders/KeyboardBuilder<eu.vendeli.tgbot.types.keyboard/InlineKeyboardButton> { // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder|null[0]
    constructor <init>() // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.<init>|<init>(){}[0]

    final fun callbackData(kotlin/String, kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.callbackData|callbackData(kotlin.String;kotlin.Function0<kotlin.String>){}[0]
    final fun callbackGame(kotlin/String): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.callbackGame|callbackGame(kotlin.String){}[0]
    final fun copyText(kotlin/String, kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.copyText|copyText(kotlin.String;kotlin.Function0<kotlin.String>){}[0]
    final fun loginUrl(kotlin/String, kotlin/Function0<eu.vendeli.tgbot.types.keyboard/LoginUrl>): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.loginUrl|loginUrl(kotlin.String;kotlin.Function0<eu.vendeli.tgbot.types.keyboard.LoginUrl>){}[0]
    final fun pay(kotlin/String): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.pay|pay(kotlin.String){}[0]
    final fun switchInlineQuery(kotlin/String, kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.switchInlineQuery|switchInlineQuery(kotlin.String;kotlin.Function0<kotlin.String>){}[0]
    final fun switchInlineQueryChosenChat(kotlin/String, kotlin/Function0<eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat>): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.switchInlineQueryChosenChat|switchInlineQueryChosenChat(kotlin.String;kotlin.Function0<eu.vendeli.tgbot.types.inline.SwitchInlineQueryChosenChat>){}[0]
    final fun switchInlineQueryCurrentChat(kotlin/String, kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.switchInlineQueryCurrentChat|switchInlineQueryCurrentChat(kotlin.String;kotlin.Function0<kotlin.String>){}[0]
    final fun url(kotlin/String, kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.url|url(kotlin.String;kotlin.Function0<kotlin.String>){}[0]
    final fun webAppInfo(kotlin/String, kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.webAppInfo|webAppInfo(kotlin.String;kotlin.Function0<kotlin.String>){}[0]
    final inline fun (kotlin/String).callback(kotlin/String): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.callback|callback@kotlin.String(kotlin.String){}[0]
    final inline fun (kotlin/String).copyText(kotlin/String): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.copyText|copyText@kotlin.String(kotlin.String){}[0]
    final inline fun (kotlin/String).loginUrl(eu.vendeli.tgbot.types.keyboard/LoginUrl): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.loginUrl|loginUrl@kotlin.String(eu.vendeli.tgbot.types.keyboard.LoginUrl){}[0]
    final inline fun (kotlin/String).pay(): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.pay|pay@kotlin.String(){}[0]
    final inline fun (kotlin/String).switchInlineQuery(kotlin/String): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.switchInlineQuery|switchInlineQuery@kotlin.String(kotlin.String){}[0]
    final inline fun (kotlin/String).switchInlineQueryChosenChat(eu.vendeli.tgbot.types.inline/SwitchInlineQueryChosenChat): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.switchInlineQueryChosenChat|switchInlineQueryChosenChat@kotlin.String(eu.vendeli.tgbot.types.inline.SwitchInlineQueryChosenChat){}[0]
    final inline fun (kotlin/String).switchInlineQueryCurrentChat(kotlin/String): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.switchInlineQueryCurrentChat|switchInlineQueryCurrentChat@kotlin.String(kotlin.String){}[0]
    final inline fun (kotlin/String).url(kotlin/String): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.url|url@kotlin.String(kotlin.String){}[0]
    final inline fun (kotlin/String).webAppInfo(kotlin/String): eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder // eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder.webAppInfo|webAppInfo@kotlin.String(kotlin.String){}[0]
}

final class eu.vendeli.tgbot.utils.builders/PollOptionsBuilder { // eu.vendeli.tgbot.utils.builders/PollOptionsBuilder|null[0]
    constructor <init>() // eu.vendeli.tgbot.utils.builders/PollOptionsBuilder.<init>|<init>(){}[0]

    final fun (kotlin/String).customEmoji(kotlin/String, kotlin/Int = ...): kotlin/String // eu.vendeli.tgbot.utils.builders/PollOptionsBuilder.customEmoji|customEmoji@kotlin.String(kotlin.String;kotlin.Int){}[0]
    final fun option(eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Function0<kotlin/String>) // eu.vendeli.tgbot.utils.builders/PollOptionsBuilder.option|option(eu.vendeli.tgbot.types.ParseMode?;kotlin.Function0<kotlin.String>){}[0]
}

final class eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder : eu.vendeli.tgbot.utils.builders/KeyboardBuilder<eu.vendeli.tgbot.types.keyboard/KeyboardButton> { // eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder|null[0]
    constructor <init>() // eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder.<init>|<init>(){}[0]

    final fun (kotlin/String).requestChat(eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestChat) // eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder.requestChat|requestChat@kotlin.String(eu.vendeli.tgbot.types.keyboard.KeyboardButtonRequestChat){}[0]
    final fun (kotlin/String).requestContact(kotlin/Boolean) // eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder.requestContact|requestContact@kotlin.String(kotlin.Boolean){}[0]
    final fun (kotlin/String).requestLocation(kotlin/Boolean) // eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder.requestLocation|requestLocation@kotlin.String(kotlin.Boolean){}[0]
    final fun (kotlin/String).requestPoll(eu.vendeli.tgbot.types.keyboard/KeyboardButtonPollType) // eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder.requestPoll|requestPoll@kotlin.String(eu.vendeli.tgbot.types.keyboard.KeyboardButtonPollType){}[0]
    final fun (kotlin/String).requestUser(eu.vendeli.tgbot.types.keyboard/KeyboardButtonRequestUsers) // eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder.requestUser|requestUser@kotlin.String(eu.vendeli.tgbot.types.keyboard.KeyboardButtonRequestUsers){}[0]
    final fun (kotlin/String).unaryPlus() // eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder.unaryPlus|unaryPlus@kotlin.String(){}[0]
    final fun (kotlin/String).webApp(kotlin/String) // eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder.webApp|webApp@kotlin.String(kotlin.String){}[0]
    final fun options(kotlin/Function1<eu.vendeli.tgbot.types.internal.options/ReplyKeyboardMarkupOptions, kotlin/Unit>) // eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder.options|options(kotlin.Function1<eu.vendeli.tgbot.types.internal.options.ReplyKeyboardMarkupOptions,kotlin.Unit>){}[0]
}

final class eu.vendeli.tgbot.utils/TgFailureException : eu.vendeli.tgbot.utils/TgException { // eu.vendeli.tgbot.utils/TgFailureException|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.tgbot.utils/TgFailureException.<init>|<init>(kotlin.String){}[0]

    final val response // eu.vendeli.tgbot.utils/TgFailureException.response|{}response[0]
        final fun <get-response>(): kotlin/String // eu.vendeli.tgbot.utils/TgFailureException.response.<get-response>|<get-response>(){}[0]
}

final class eu.vendeli.tgbot/TelegramBot { // eu.vendeli.tgbot/TelegramBot|null[0]
    constructor <init>(eu.vendeli.tgbot.interfaces.helper/ConfigLoader) // eu.vendeli.tgbot/TelegramBot.<init>|<init>(eu.vendeli.tgbot.interfaces.helper.ConfigLoader){}[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., io.ktor.client/HttpClient? = ..., kotlin/Function1<eu.vendeli.tgbot.types.internal.configuration/BotConfiguration, kotlin/Unit> = ...) // eu.vendeli.tgbot/TelegramBot.<init>|<init>(kotlin.String;kotlin.String?;io.ktor.client.HttpClient?;kotlin.Function1<eu.vendeli.tgbot.types.internal.configuration.BotConfiguration,kotlin.Unit>){}[0]
    constructor <init>(kotlin/String, kotlin/String? = ..., kotlin/Function1<eu.vendeli.tgbot.types.internal.configuration/BotConfiguration, kotlin/Unit> = ...) // eu.vendeli.tgbot/TelegramBot.<init>|<init>(kotlin.String;kotlin.String?;kotlin.Function1<eu.vendeli.tgbot.types.internal.configuration.BotConfiguration,kotlin.Unit>){}[0]

    final val identifier // eu.vendeli.tgbot/TelegramBot.identifier|{}identifier[0]
        final fun <get-identifier>(): kotlin/String // eu.vendeli.tgbot/TelegramBot.identifier.<get-identifier>|<get-identifier>(){}[0]
    final val inputListener // eu.vendeli.tgbot/TelegramBot.inputListener|{}inputListener[0]
        final fun <get-inputListener>(): eu.vendeli.tgbot.interfaces.ctx/InputListener // eu.vendeli.tgbot/TelegramBot.inputListener.<get-inputListener>|<get-inputListener>(){}[0]
    final val update // eu.vendeli.tgbot/TelegramBot.update|{}update[0]
        final fun <get-update>(): eu.vendeli.tgbot.core/TgUpdateHandler // eu.vendeli.tgbot/TelegramBot.update.<get-update>|<get-update>(){}[0]

    final fun getFileDirectUrl(eu.vendeli.tgbot.types.media/File): kotlin/String? // eu.vendeli.tgbot/TelegramBot.getFileDirectUrl|getFileDirectUrl(eu.vendeli.tgbot.types.media.File){}[0]
    final suspend fun getFileContent(eu.vendeli.tgbot.types.media/File): kotlin/ByteArray? // eu.vendeli.tgbot/TelegramBot.getFileContent|getFileContent(eu.vendeli.tgbot.types.media.File){}[0]
    final suspend fun handleUpdates(kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? = ...) // eu.vendeli.tgbot/TelegramBot.handleUpdates|handleUpdates(kotlin.collections.List<eu.vendeli.tgbot.types.internal.UpdateType>?){}[0]
    final suspend fun handleUpdates(kotlin.collections/List<eu.vendeli.tgbot.types.internal/UpdateType>? = ..., kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.core/FunctionalHandlingDsl, kotlin/Unit>) // eu.vendeli.tgbot/TelegramBot.handleUpdates|handleUpdates(kotlin.collections.List<eu.vendeli.tgbot.types.internal.UpdateType>?;kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.core.FunctionalHandlingDsl,kotlin.Unit>){}[0]

    final object Companion // eu.vendeli.tgbot/TelegramBot.Companion|null[0]
}

open class <#A: kotlin/Any?> eu.vendeli.tgbot.types.internal.chain/BaseLinkStateManager : eu.vendeli.tgbot.types.internal.chain/LinkStateManager<eu.vendeli.tgbot.types.internal/IdLong, #A> { // eu.vendeli.tgbot.types.internal.chain/BaseLinkStateManager|null[0]
    constructor <init>(eu.vendeli.tgbot.types.internal.chain/KeySelector<eu.vendeli.tgbot.types.internal/IdLong> = ...) // eu.vendeli.tgbot.types.internal.chain/BaseLinkStateManager.<init>|<init>(eu.vendeli.tgbot.types.internal.chain.KeySelector<eu.vendeli.tgbot.types.internal.IdLong>){}[0]

    final val data // eu.vendeli.tgbot.types.internal.chain/BaseLinkStateManager.data|{}data[0]
        final fun <get-data>(): co.touchlab.stately.collections/ConcurrentMutableMap<kotlin/Long, #A> // eu.vendeli.tgbot.types.internal.chain/BaseLinkStateManager.data.<get-data>|<get-data>(){}[0]
    open val stateKey // eu.vendeli.tgbot.types.internal.chain/BaseLinkStateManager.stateKey|{}stateKey[0]
        open fun <get-stateKey>(): eu.vendeli.tgbot.types.internal.chain/KeySelector<eu.vendeli.tgbot.types.internal/IdLong> // eu.vendeli.tgbot.types.internal.chain/BaseLinkStateManager.stateKey.<get-stateKey>|<get-stateKey>(){}[0]

    open suspend fun del(eu.vendeli.tgbot.types.internal/IdLong) // eu.vendeli.tgbot.types.internal.chain/BaseLinkStateManager.del|del(eu.vendeli.tgbot.types.internal.IdLong){}[0]
    open suspend fun get(eu.vendeli.tgbot.types.internal/IdLong): #A? // eu.vendeli.tgbot.types.internal.chain/BaseLinkStateManager.get|get(eu.vendeli.tgbot.types.internal.IdLong){}[0]
    open suspend fun set(eu.vendeli.tgbot.types.internal/IdLong, #A) // eu.vendeli.tgbot.types.internal.chain/BaseLinkStateManager.set|set(eu.vendeli.tgbot.types.internal.IdLong;1:0){}[0]
}

open class eu.vendeli.tgbot.utils/TgException : kotlin/RuntimeException { // eu.vendeli.tgbot.utils/TgException|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Throwable? = ...) // eu.vendeli.tgbot.utils/TgException.<init>|<init>(kotlin.String?;kotlin.Throwable?){}[0]

    open val cause // eu.vendeli.tgbot.utils/TgException.cause|{}cause[0]
        open fun <get-cause>(): kotlin/Throwable? // eu.vendeli.tgbot.utils/TgException.cause.<get-cause>|<get-cause>(){}[0]
    open val message // eu.vendeli.tgbot.utils/TgException.message|{}message[0]
        open fun <get-message>(): kotlin/String? // eu.vendeli.tgbot.utils/TgException.message.<get-message>|<get-message>(){}[0]
}

sealed class <#A: kotlin/Any?> eu.vendeli.tgbot.types.internal/Response { // eu.vendeli.tgbot.types.internal/Response|null[0]
    final val ok // eu.vendeli.tgbot.types.internal/Response.ok|{}ok[0]
        final fun <get-ok>(): kotlin/Boolean // eu.vendeli.tgbot.types.internal/Response.ok.<get-ok>|<get-ok>(){}[0]

    final class <#A1: kotlin/Any?> Success : eu.vendeli.tgbot.types.internal/Response<#A1> { // eu.vendeli.tgbot.types.internal/Response.Success|null[0]
        constructor <init>(#A1) // eu.vendeli.tgbot.types.internal/Response.Success.<init>|<init>(1:0){}[0]

        final val result // eu.vendeli.tgbot.types.internal/Response.Success.result|{}result[0]
            final fun <get-result>(): #A1 // eu.vendeli.tgbot.types.internal/Response.Success.result.<get-result>|<get-result>(){}[0]

        final fun component1(): #A1 // eu.vendeli.tgbot.types.internal/Response.Success.component1|component1(){}[0]
        final fun copy(#A1 = ...): eu.vendeli.tgbot.types.internal/Response.Success<#A1> // eu.vendeli.tgbot.types.internal/Response.Success.copy|copy(1:0){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/Response.Success.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/Response.Success.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/Response.Success.toString|toString(){}[0]

        final class <#A2: kotlin/Any?> $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal/Response.Success<#A2>> { // eu.vendeli.tgbot.types.internal/Response.Success.$serializer|null[0]
            constructor <init>(kotlinx.serialization/KSerializer<#A2>) // eu.vendeli.tgbot.types.internal/Response.Success.$serializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>){}[0]

            final val descriptor // eu.vendeli.tgbot.types.internal/Response.Success.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal/Response.Success.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val typeSerial0 // eu.vendeli.tgbot.types.internal/Response.Success.$serializer.typeSerial0|{}typeSerial0[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal/Response.Success.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal/Response.Success<#A2> // eu.vendeli.tgbot.types.internal/Response.Success.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal/Response.Success<#A2>) // eu.vendeli.tgbot.types.internal/Response.Success.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.Response.Success<1:0>){}[0]
            final fun typeParametersSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal/Response.Success.$serializer.typeParametersSerializers|typeParametersSerializers(){}[0]
        }

        final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.internal/Response.Success.Companion|null[0]
            final val $cachedDescriptor // eu.vendeli.tgbot.types.internal/Response.Success.Companion.$cachedDescriptor|{}$cachedDescriptor[0]
                final fun <get-$cachedDescriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal/Response.Success.Companion.$cachedDescriptor.<get-$cachedDescriptor>|<get-$cachedDescriptor>(){}[0]

            final fun <#A3: kotlin/Any?> serializer(kotlinx.serialization/KSerializer<#A3>): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal/Response.Success<#A3>> // eu.vendeli.tgbot.types.internal/Response.Success.Companion.serializer|serializer(kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any?>}[0]
            final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.internal/Response.Success.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
        }
    }

    final class Failure : eu.vendeli.tgbot.types.internal/Response<kotlin/Nothing> { // eu.vendeli.tgbot.types.internal/Response.Failure|null[0]
        constructor <init>(kotlin/Int, kotlin/String? = ..., eu.vendeli.tgbot.types/ResponseParameters? = ...) // eu.vendeli.tgbot.types.internal/Response.Failure.<init>|<init>(kotlin.Int;kotlin.String?;eu.vendeli.tgbot.types.ResponseParameters?){}[0]

        final val description // eu.vendeli.tgbot.types.internal/Response.Failure.description|{}description[0]
            final fun <get-description>(): kotlin/String? // eu.vendeli.tgbot.types.internal/Response.Failure.description.<get-description>|<get-description>(){}[0]
        final val errorCode // eu.vendeli.tgbot.types.internal/Response.Failure.errorCode|{}errorCode[0]
            final fun <get-errorCode>(): kotlin/Int // eu.vendeli.tgbot.types.internal/Response.Failure.errorCode.<get-errorCode>|<get-errorCode>(){}[0]
        final val parameters // eu.vendeli.tgbot.types.internal/Response.Failure.parameters|{}parameters[0]
            final fun <get-parameters>(): eu.vendeli.tgbot.types/ResponseParameters? // eu.vendeli.tgbot.types.internal/Response.Failure.parameters.<get-parameters>|<get-parameters>(){}[0]

        final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.internal/Response.Failure.component1|component1(){}[0]
        final fun component2(): kotlin/String? // eu.vendeli.tgbot.types.internal/Response.Failure.component2|component2(){}[0]
        final fun component3(): eu.vendeli.tgbot.types/ResponseParameters? // eu.vendeli.tgbot.types.internal/Response.Failure.component3|component3(){}[0]
        final fun copy(kotlin/Int = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ResponseParameters? = ...): eu.vendeli.tgbot.types.internal/Response.Failure // eu.vendeli.tgbot.types.internal/Response.Failure.copy|copy(kotlin.Int;kotlin.String?;eu.vendeli.tgbot.types.ResponseParameters?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/Response.Failure.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/Response.Failure.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/Response.Failure.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal/Response.Failure> { // eu.vendeli.tgbot.types.internal/Response.Failure.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.internal/Response.Failure.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal/Response.Failure.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal/Response.Failure.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal/Response.Failure // eu.vendeli.tgbot.types.internal/Response.Failure.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal/Response.Failure) // eu.vendeli.tgbot.types.internal/Response.Failure.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.Response.Failure){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.internal/Response.Failure.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal/Response.Failure> // eu.vendeli.tgbot.types.internal/Response.Failure.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.internal/Response.Companion|null[0]
        final fun <#A2: kotlin/Any?> serializer(kotlinx.serialization/KSerializer<#A2>): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal/Response<#A2>> // eu.vendeli.tgbot.types.internal/Response.Companion.serializer|serializer(kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any?>}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.internal/Response.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.boost/ChatBoostSource { // eu.vendeli.tgbot.types.boost/ChatBoostSource|null[0]
    abstract val user // eu.vendeli.tgbot.types.boost/ChatBoostSource.user|{}user[0]
        abstract fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.boost/ChatBoostSource.user.<get-user>|<get-user>(){}[0]
    final val source // eu.vendeli.tgbot.types.boost/ChatBoostSource.source|{}source[0]
        final fun <get-source>(): kotlin/String // eu.vendeli.tgbot.types.boost/ChatBoostSource.source.<get-source>|<get-source>(){}[0]

    final class GiftCode : eu.vendeli.tgbot.types.boost/ChatBoostSource { // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode|null[0]
        constructor <init>(eu.vendeli.tgbot.types/User) // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.<init>|<init>(eu.vendeli.tgbot.types.User){}[0]

        final val user // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.user|{}user[0]
            final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.user.<get-user>|<get-user>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.component1|component1(){}[0]
        final fun copy(eu.vendeli.tgbot.types/User = ...): eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.copy|copy(eu.vendeli.tgbot.types.User){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode> { // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode) // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.boost.ChatBoostSource.GiftCode){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode> // eu.vendeli.tgbot.types.boost/ChatBoostSource.GiftCode.Companion.serializer|serializer(){}[0]
        }
    }

    final class Giveaway : eu.vendeli.tgbot.types.boost/ChatBoostSource { // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway|null[0]
        constructor <init>(kotlin/Long, eu.vendeli.tgbot.types/User? = ..., kotlin/Boolean? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.<init>|<init>(kotlin.Long;eu.vendeli.tgbot.types.User?;kotlin.Boolean?;kotlin.Int?){}[0]

        final val giveawayMessageId // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.giveawayMessageId|{}giveawayMessageId[0]
            final fun <get-giveawayMessageId>(): kotlin/Long // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.giveawayMessageId.<get-giveawayMessageId>|<get-giveawayMessageId>(){}[0]
        final val isUnclaimed // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.isUnclaimed|{}isUnclaimed[0]
            final fun <get-isUnclaimed>(): kotlin/Boolean? // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.isUnclaimed.<get-isUnclaimed>|<get-isUnclaimed>(){}[0]
        final val prizeStarCount // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.prizeStarCount|{}prizeStarCount[0]
            final fun <get-prizeStarCount>(): kotlin/Int? // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.prizeStarCount.<get-prizeStarCount>|<get-prizeStarCount>(){}[0]
        final val user // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.user|{}user[0]
            final fun <get-user>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.user.<get-user>|<get-user>(){}[0]

        final fun component1(): kotlin/Long // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.component1|component1(){}[0]
        final fun component2(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.component2|component2(){}[0]
        final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.component3|component3(){}[0]
        final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.component4|component4(){}[0]
        final fun copy(kotlin/Long = ..., eu.vendeli.tgbot.types/User? = ..., kotlin/Boolean? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.copy|copy(kotlin.Long;eu.vendeli.tgbot.types.User?;kotlin.Boolean?;kotlin.Int?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway> { // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway) // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.boost.ChatBoostSource.Giveaway){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway> // eu.vendeli.tgbot.types.boost/ChatBoostSource.Giveaway.Companion.serializer|serializer(){}[0]
        }
    }

    final class Premium : eu.vendeli.tgbot.types.boost/ChatBoostSource { // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium|null[0]
        constructor <init>(eu.vendeli.tgbot.types/User) // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.<init>|<init>(eu.vendeli.tgbot.types.User){}[0]

        final val user // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.user|{}user[0]
            final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.user.<get-user>|<get-user>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.component1|component1(){}[0]
        final fun copy(eu.vendeli.tgbot.types/User = ...): eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.copy|copy(eu.vendeli.tgbot.types.User){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium> { // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium) // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.boost.ChatBoostSource.Premium){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium> // eu.vendeli.tgbot.types.boost/ChatBoostSource.Premium.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.boost/ChatBoostSource.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.boost/ChatBoostSource> // eu.vendeli.tgbot.types.boost/ChatBoostSource.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.boost/ChatBoostSource.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.bot/BotCommandScope { // eu.vendeli.tgbot.types.bot/BotCommandScope|null[0]
    final val type // eu.vendeli.tgbot.types.bot/BotCommandScope.type|{}type[0]
        final fun <get-type>(): kotlin/String // eu.vendeli.tgbot.types.bot/BotCommandScope.type.<get-type>|<get-type>(){}[0]

    final class AllChatAdministrators : eu.vendeli.tgbot.types.bot/BotCommandScope { // eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators|null[0]
        constructor <init>() // eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators.<init>|<init>(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators> { // eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators // eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators) // eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.bot.BotCommandScope.AllChatAdministrators){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators> // eu.vendeli.tgbot.types.bot/BotCommandScope.AllChatAdministrators.Companion.serializer|serializer(){}[0]
        }
    }

    final class AllGroupChats : eu.vendeli.tgbot.types.bot/BotCommandScope { // eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats|null[0]
        constructor <init>() // eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats.<init>|<init>(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats> { // eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats // eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats) // eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.bot.BotCommandScope.AllGroupChats){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats> // eu.vendeli.tgbot.types.bot/BotCommandScope.AllGroupChats.Companion.serializer|serializer(){}[0]
        }
    }

    final class AllPrivateChats : eu.vendeli.tgbot.types.bot/BotCommandScope { // eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats|null[0]
        constructor <init>() // eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats.<init>|<init>(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats> { // eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats // eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats) // eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.bot.BotCommandScope.AllPrivateChats){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats> // eu.vendeli.tgbot.types.bot/BotCommandScope.AllPrivateChats.Companion.serializer|serializer(){}[0]
        }
    }

    final class ChatAdministrators : eu.vendeli.tgbot.types.bot/BotCommandScope { // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.<init>|<init>(kotlin.Long){}[0]

        final val chatId // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.chatId|{}chatId[0]
            final fun <get-chatId>(): kotlin/Long // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.chatId.<get-chatId>|<get-chatId>(){}[0]

        final fun component1(): kotlin/Long // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.component1|component1(){}[0]
        final fun copy(kotlin/Long = ...): eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.copy|copy(kotlin.Long){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators> { // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators) // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.bot.BotCommandScope.ChatAdministrators){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators> // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatAdministrators.Companion.serializer|serializer(){}[0]
        }
    }

    final class ChatMember : eu.vendeli.tgbot.types.bot/BotCommandScope { // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember|null[0]
        constructor <init>(kotlin/Long, kotlin/Long) // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.<init>|<init>(kotlin.Long;kotlin.Long){}[0]

        final val chatId // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.chatId|{}chatId[0]
            final fun <get-chatId>(): kotlin/Long // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.chatId.<get-chatId>|<get-chatId>(){}[0]
        final val userId // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.userId|{}userId[0]
            final fun <get-userId>(): kotlin/Long // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.userId.<get-userId>|<get-userId>(){}[0]

        final fun component1(): kotlin/Long // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.component1|component1(){}[0]
        final fun component2(): kotlin/Long // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.component2|component2(){}[0]
        final fun copy(kotlin/Long = ..., kotlin/Long = ...): eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.copy|copy(kotlin.Long;kotlin.Long){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember> { // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember) // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.bot.BotCommandScope.ChatMember){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember> // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatMember.Companion.serializer|serializer(){}[0]
        }
    }

    final class ChatScope : eu.vendeli.tgbot.types.bot/BotCommandScope { // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.<init>|<init>(kotlin.Long){}[0]

        final val chatId // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.chatId|{}chatId[0]
            final fun <get-chatId>(): kotlin/Long // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.chatId.<get-chatId>|<get-chatId>(){}[0]

        final fun component1(): kotlin/Long // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.component1|component1(){}[0]
        final fun copy(kotlin/Long = ...): eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.copy|copy(kotlin.Long){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope> { // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope) // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.bot.BotCommandScope.ChatScope){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope> // eu.vendeli.tgbot.types.bot/BotCommandScope.ChatScope.Companion.serializer|serializer(){}[0]
        }
    }

    final class Default : eu.vendeli.tgbot.types.bot/BotCommandScope { // eu.vendeli.tgbot.types.bot/BotCommandScope.Default|null[0]
        constructor <init>() // eu.vendeli.tgbot.types.bot/BotCommandScope.Default.<init>|<init>(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.Default> { // eu.vendeli.tgbot.types.bot/BotCommandScope.Default.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.Default.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.bot/BotCommandScope.Default.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.bot/BotCommandScope.Default.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.bot/BotCommandScope.Default // eu.vendeli.tgbot.types.bot/BotCommandScope.Default.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.bot/BotCommandScope.Default) // eu.vendeli.tgbot.types.bot/BotCommandScope.Default.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.bot.BotCommandScope.Default){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.bot/BotCommandScope.Default.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope.Default> // eu.vendeli.tgbot.types.bot/BotCommandScope.Default.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.bot/BotCommandScope.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.bot/BotCommandScope> // eu.vendeli.tgbot.types.bot/BotCommandScope.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.bot/BotCommandScope.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.chat/ChatMember : eu.vendeli.tgbot.interfaces.marker/MultipleResponse { // eu.vendeli.tgbot.types.chat/ChatMember|null[0]
    abstract val user // eu.vendeli.tgbot.types.chat/ChatMember.user|{}user[0]
        abstract fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.user.<get-user>|<get-user>(){}[0]
    final val status // eu.vendeli.tgbot.types.chat/ChatMember.status|{}status[0]
        final fun <get-status>(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatMember.status.<get-status>|<get-status>(){}[0]

    final class Administrator : eu.vendeli.tgbot.types.chat/ChatMember { // eu.vendeli.tgbot.types.chat/ChatMember.Administrator|null[0]
        constructor <init>(eu.vendeli.tgbot.types/User, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean, kotlin/Boolean? = ..., kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/String? = ...) // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.<init>|<init>(eu.vendeli.tgbot.types.User;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean;kotlin.Boolean?;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.String?){}[0]

        final val canBeEdited // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canBeEdited|{}canBeEdited[0]
            final fun <get-canBeEdited>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canBeEdited.<get-canBeEdited>|<get-canBeEdited>(){}[0]
        final val canChangeInfo // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canChangeInfo|{}canChangeInfo[0]
            final fun <get-canChangeInfo>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canChangeInfo.<get-canChangeInfo>|<get-canChangeInfo>(){}[0]
        final val canDeleteMessages // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canDeleteMessages|{}canDeleteMessages[0]
            final fun <get-canDeleteMessages>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canDeleteMessages.<get-canDeleteMessages>|<get-canDeleteMessages>(){}[0]
        final val canDeleteStories // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canDeleteStories|{}canDeleteStories[0]
            final fun <get-canDeleteStories>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canDeleteStories.<get-canDeleteStories>|<get-canDeleteStories>(){}[0]
        final val canEditMessages // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canEditMessages|{}canEditMessages[0]
            final fun <get-canEditMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canEditMessages.<get-canEditMessages>|<get-canEditMessages>(){}[0]
        final val canEditStories // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canEditStories|{}canEditStories[0]
            final fun <get-canEditStories>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canEditStories.<get-canEditStories>|<get-canEditStories>(){}[0]
        final val canInviteUsers // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canInviteUsers|{}canInviteUsers[0]
            final fun <get-canInviteUsers>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canInviteUsers.<get-canInviteUsers>|<get-canInviteUsers>(){}[0]
        final val canManageChat // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canManageChat|{}canManageChat[0]
            final fun <get-canManageChat>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canManageChat.<get-canManageChat>|<get-canManageChat>(){}[0]
        final val canManageTopics // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canManageTopics|{}canManageTopics[0]
            final fun <get-canManageTopics>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canManageTopics.<get-canManageTopics>|<get-canManageTopics>(){}[0]
        final val canManageVideoChats // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canManageVideoChats|{}canManageVideoChats[0]
            final fun <get-canManageVideoChats>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canManageVideoChats.<get-canManageVideoChats>|<get-canManageVideoChats>(){}[0]
        final val canPinMessages // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canPinMessages|{}canPinMessages[0]
            final fun <get-canPinMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canPinMessages.<get-canPinMessages>|<get-canPinMessages>(){}[0]
        final val canPostMessages // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canPostMessages|{}canPostMessages[0]
            final fun <get-canPostMessages>(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canPostMessages.<get-canPostMessages>|<get-canPostMessages>(){}[0]
        final val canPostStories // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canPostStories|{}canPostStories[0]
            final fun <get-canPostStories>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canPostStories.<get-canPostStories>|<get-canPostStories>(){}[0]
        final val canPromoteMembers // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canPromoteMembers|{}canPromoteMembers[0]
            final fun <get-canPromoteMembers>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canPromoteMembers.<get-canPromoteMembers>|<get-canPromoteMembers>(){}[0]
        final val canRestrictMembers // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canRestrictMembers|{}canRestrictMembers[0]
            final fun <get-canRestrictMembers>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.canRestrictMembers.<get-canRestrictMembers>|<get-canRestrictMembers>(){}[0]
        final val customTitle // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.customTitle|{}customTitle[0]
            final fun <get-customTitle>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.customTitle.<get-customTitle>|<get-customTitle>(){}[0]
        final val isAnonymous // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.isAnonymous|{}isAnonymous[0]
            final fun <get-isAnonymous>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.isAnonymous.<get-isAnonymous>|<get-isAnonymous>(){}[0]
        final val user // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.user|{}user[0]
            final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.user.<get-user>|<get-user>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component1|component1(){}[0]
        final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component10|component10(){}[0]
        final fun component11(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component11|component11(){}[0]
        final fun component12(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component12|component12(){}[0]
        final fun component13(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component13|component13(){}[0]
        final fun component14(): kotlin/Boolean? // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component14|component14(){}[0]
        final fun component15(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component15|component15(){}[0]
        final fun component16(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component16|component16(){}[0]
        final fun component17(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component17|component17(){}[0]
        final fun component18(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component18|component18(){}[0]
        final fun component2(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component2|component2(){}[0]
        final fun component3(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component3|component3(){}[0]
        final fun component4(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component4|component4(){}[0]
        final fun component5(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component5|component5(){}[0]
        final fun component6(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component6|component6(){}[0]
        final fun component7(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component7|component7(){}[0]
        final fun component8(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component8|component8(){}[0]
        final fun component9(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.component9|component9(){}[0]
        final fun copy(eu.vendeli.tgbot.types/User = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean = ..., kotlin/Boolean? = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.chat/ChatMember.Administrator // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.copy|copy(eu.vendeli.tgbot.types.User;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean;kotlin.Boolean?;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.String?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatMember.Administrator> { // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatMember.Administrator // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatMember.Administrator) // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatMember.Administrator){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatMember.Administrator> // eu.vendeli.tgbot.types.chat/ChatMember.Administrator.Companion.serializer|serializer(){}[0]
        }
    }

    final class Banned : eu.vendeli.tgbot.types.chat/ChatMember { // eu.vendeli.tgbot.types.chat/ChatMember.Banned|null[0]
        constructor <init>(eu.vendeli.tgbot.types/User, kotlinx.datetime/Instant) // eu.vendeli.tgbot.types.chat/ChatMember.Banned.<init>|<init>(eu.vendeli.tgbot.types.User;kotlinx.datetime.Instant){}[0]

        final val untilDate // eu.vendeli.tgbot.types.chat/ChatMember.Banned.untilDate|{}untilDate[0]
            final fun <get-untilDate>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.chat/ChatMember.Banned.untilDate.<get-untilDate>|<get-untilDate>(){}[0]
        final val user // eu.vendeli.tgbot.types.chat/ChatMember.Banned.user|{}user[0]
            final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.Banned.user.<get-user>|<get-user>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.Banned.component1|component1(){}[0]
        final fun component2(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.chat/ChatMember.Banned.component2|component2(){}[0]
        final fun copy(eu.vendeli.tgbot.types/User = ..., kotlinx.datetime/Instant = ...): eu.vendeli.tgbot.types.chat/ChatMember.Banned // eu.vendeli.tgbot.types.chat/ChatMember.Banned.copy|copy(eu.vendeli.tgbot.types.User;kotlinx.datetime.Instant){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Banned.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatMember.Banned.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatMember.Banned.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatMember.Banned> { // eu.vendeli.tgbot.types.chat/ChatMember.Banned.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.chat/ChatMember.Banned.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatMember.Banned.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatMember.Banned.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatMember.Banned // eu.vendeli.tgbot.types.chat/ChatMember.Banned.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatMember.Banned) // eu.vendeli.tgbot.types.chat/ChatMember.Banned.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatMember.Banned){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.chat/ChatMember.Banned.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatMember.Banned> // eu.vendeli.tgbot.types.chat/ChatMember.Banned.Companion.serializer|serializer(){}[0]
        }
    }

    final class Left : eu.vendeli.tgbot.types.chat/ChatMember { // eu.vendeli.tgbot.types.chat/ChatMember.Left|null[0]
        constructor <init>(eu.vendeli.tgbot.types/User) // eu.vendeli.tgbot.types.chat/ChatMember.Left.<init>|<init>(eu.vendeli.tgbot.types.User){}[0]

        final val user // eu.vendeli.tgbot.types.chat/ChatMember.Left.user|{}user[0]
            final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.Left.user.<get-user>|<get-user>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.Left.component1|component1(){}[0]
        final fun copy(eu.vendeli.tgbot.types/User = ...): eu.vendeli.tgbot.types.chat/ChatMember.Left // eu.vendeli.tgbot.types.chat/ChatMember.Left.copy|copy(eu.vendeli.tgbot.types.User){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Left.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatMember.Left.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatMember.Left.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatMember.Left> { // eu.vendeli.tgbot.types.chat/ChatMember.Left.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.chat/ChatMember.Left.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatMember.Left.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatMember.Left.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatMember.Left // eu.vendeli.tgbot.types.chat/ChatMember.Left.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatMember.Left) // eu.vendeli.tgbot.types.chat/ChatMember.Left.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatMember.Left){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.chat/ChatMember.Left.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatMember.Left> // eu.vendeli.tgbot.types.chat/ChatMember.Left.Companion.serializer|serializer(){}[0]
        }
    }

    final class Member : eu.vendeli.tgbot.types.chat/ChatMember { // eu.vendeli.tgbot.types.chat/ChatMember.Member|null[0]
        constructor <init>(eu.vendeli.tgbot.types/User, kotlinx.datetime/Instant? = ...) // eu.vendeli.tgbot.types.chat/ChatMember.Member.<init>|<init>(eu.vendeli.tgbot.types.User;kotlinx.datetime.Instant?){}[0]

        final val untilDate // eu.vendeli.tgbot.types.chat/ChatMember.Member.untilDate|{}untilDate[0]
            final fun <get-untilDate>(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.chat/ChatMember.Member.untilDate.<get-untilDate>|<get-untilDate>(){}[0]
        final val user // eu.vendeli.tgbot.types.chat/ChatMember.Member.user|{}user[0]
            final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.Member.user.<get-user>|<get-user>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.Member.component1|component1(){}[0]
        final fun component2(): kotlinx.datetime/Instant? // eu.vendeli.tgbot.types.chat/ChatMember.Member.component2|component2(){}[0]
        final fun copy(eu.vendeli.tgbot.types/User = ..., kotlinx.datetime/Instant? = ...): eu.vendeli.tgbot.types.chat/ChatMember.Member // eu.vendeli.tgbot.types.chat/ChatMember.Member.copy|copy(eu.vendeli.tgbot.types.User;kotlinx.datetime.Instant?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Member.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatMember.Member.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatMember.Member.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatMember.Member> { // eu.vendeli.tgbot.types.chat/ChatMember.Member.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.chat/ChatMember.Member.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatMember.Member.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatMember.Member.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatMember.Member // eu.vendeli.tgbot.types.chat/ChatMember.Member.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatMember.Member) // eu.vendeli.tgbot.types.chat/ChatMember.Member.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatMember.Member){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.chat/ChatMember.Member.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatMember.Member> // eu.vendeli.tgbot.types.chat/ChatMember.Member.Companion.serializer|serializer(){}[0]
        }
    }

    final class Owner : eu.vendeli.tgbot.types.chat/ChatMember { // eu.vendeli.tgbot.types.chat/ChatMember.Owner|null[0]
        constructor <init>(eu.vendeli.tgbot.types/User, kotlin/Boolean, kotlin/String? = ...) // eu.vendeli.tgbot.types.chat/ChatMember.Owner.<init>|<init>(eu.vendeli.tgbot.types.User;kotlin.Boolean;kotlin.String?){}[0]

        final val customTitle // eu.vendeli.tgbot.types.chat/ChatMember.Owner.customTitle|{}customTitle[0]
            final fun <get-customTitle>(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatMember.Owner.customTitle.<get-customTitle>|<get-customTitle>(){}[0]
        final val isAnonymous // eu.vendeli.tgbot.types.chat/ChatMember.Owner.isAnonymous|{}isAnonymous[0]
            final fun <get-isAnonymous>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Owner.isAnonymous.<get-isAnonymous>|<get-isAnonymous>(){}[0]
        final val user // eu.vendeli.tgbot.types.chat/ChatMember.Owner.user|{}user[0]
            final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.Owner.user.<get-user>|<get-user>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.Owner.component1|component1(){}[0]
        final fun component2(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Owner.component2|component2(){}[0]
        final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.chat/ChatMember.Owner.component3|component3(){}[0]
        final fun copy(eu.vendeli.tgbot.types/User = ..., kotlin/Boolean = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.chat/ChatMember.Owner // eu.vendeli.tgbot.types.chat/ChatMember.Owner.copy|copy(eu.vendeli.tgbot.types.User;kotlin.Boolean;kotlin.String?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Owner.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatMember.Owner.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatMember.Owner.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatMember.Owner> { // eu.vendeli.tgbot.types.chat/ChatMember.Owner.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.chat/ChatMember.Owner.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatMember.Owner.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatMember.Owner.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatMember.Owner // eu.vendeli.tgbot.types.chat/ChatMember.Owner.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatMember.Owner) // eu.vendeli.tgbot.types.chat/ChatMember.Owner.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatMember.Owner){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.chat/ChatMember.Owner.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatMember.Owner> // eu.vendeli.tgbot.types.chat/ChatMember.Owner.Companion.serializer|serializer(){}[0]
        }
    }

    final class Restricted : eu.vendeli.tgbot.types.chat/ChatMember { // eu.vendeli.tgbot.types.chat/ChatMember.Restricted|null[0]
        constructor <init>(eu.vendeli.tgbot.types/User, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlin/Boolean, kotlinx.datetime/Instant) // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.<init>|<init>(eu.vendeli.tgbot.types.User;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlinx.datetime.Instant){}[0]

        final val canAddWebPagePreviews // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canAddWebPagePreviews|{}canAddWebPagePreviews[0]
            final fun <get-canAddWebPagePreviews>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canAddWebPagePreviews.<get-canAddWebPagePreviews>|<get-canAddWebPagePreviews>(){}[0]
        final val canChangeInfo // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canChangeInfo|{}canChangeInfo[0]
            final fun <get-canChangeInfo>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canChangeInfo.<get-canChangeInfo>|<get-canChangeInfo>(){}[0]
        final val canInviteUsers // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canInviteUsers|{}canInviteUsers[0]
            final fun <get-canInviteUsers>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canInviteUsers.<get-canInviteUsers>|<get-canInviteUsers>(){}[0]
        final val canManageTopics // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canManageTopics|{}canManageTopics[0]
            final fun <get-canManageTopics>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canManageTopics.<get-canManageTopics>|<get-canManageTopics>(){}[0]
        final val canPinMessages // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canPinMessages|{}canPinMessages[0]
            final fun <get-canPinMessages>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canPinMessages.<get-canPinMessages>|<get-canPinMessages>(){}[0]
        final val canSendAudios // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendAudios|{}canSendAudios[0]
            final fun <get-canSendAudios>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendAudios.<get-canSendAudios>|<get-canSendAudios>(){}[0]
        final val canSendDocuments // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendDocuments|{}canSendDocuments[0]
            final fun <get-canSendDocuments>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendDocuments.<get-canSendDocuments>|<get-canSendDocuments>(){}[0]
        final val canSendMessages // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendMessages|{}canSendMessages[0]
            final fun <get-canSendMessages>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendMessages.<get-canSendMessages>|<get-canSendMessages>(){}[0]
        final val canSendOtherMessages // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendOtherMessages|{}canSendOtherMessages[0]
            final fun <get-canSendOtherMessages>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendOtherMessages.<get-canSendOtherMessages>|<get-canSendOtherMessages>(){}[0]
        final val canSendPhotos // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendPhotos|{}canSendPhotos[0]
            final fun <get-canSendPhotos>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendPhotos.<get-canSendPhotos>|<get-canSendPhotos>(){}[0]
        final val canSendPolls // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendPolls|{}canSendPolls[0]
            final fun <get-canSendPolls>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendPolls.<get-canSendPolls>|<get-canSendPolls>(){}[0]
        final val canSendVideoNotes // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendVideoNotes|{}canSendVideoNotes[0]
            final fun <get-canSendVideoNotes>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendVideoNotes.<get-canSendVideoNotes>|<get-canSendVideoNotes>(){}[0]
        final val canSendVideos // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendVideos|{}canSendVideos[0]
            final fun <get-canSendVideos>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendVideos.<get-canSendVideos>|<get-canSendVideos>(){}[0]
        final val canSendVoiceNotes // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendVoiceNotes|{}canSendVoiceNotes[0]
            final fun <get-canSendVoiceNotes>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.canSendVoiceNotes.<get-canSendVoiceNotes>|<get-canSendVoiceNotes>(){}[0]
        final val isMember // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.isMember|{}isMember[0]
            final fun <get-isMember>(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.isMember.<get-isMember>|<get-isMember>(){}[0]
        final val untilDate // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.untilDate|{}untilDate[0]
            final fun <get-untilDate>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.untilDate.<get-untilDate>|<get-untilDate>(){}[0]
        final val user // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.user|{}user[0]
            final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.user.<get-user>|<get-user>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component1|component1(){}[0]
        final fun component10(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component10|component10(){}[0]
        final fun component11(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component11|component11(){}[0]
        final fun component12(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component12|component12(){}[0]
        final fun component13(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component13|component13(){}[0]
        final fun component14(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component14|component14(){}[0]
        final fun component15(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component15|component15(){}[0]
        final fun component16(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component16|component16(){}[0]
        final fun component17(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component17|component17(){}[0]
        final fun component2(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component2|component2(){}[0]
        final fun component3(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component3|component3(){}[0]
        final fun component4(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component4|component4(){}[0]
        final fun component5(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component5|component5(){}[0]
        final fun component6(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component6|component6(){}[0]
        final fun component7(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component7|component7(){}[0]
        final fun component8(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component8|component8(){}[0]
        final fun component9(): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.component9|component9(){}[0]
        final fun copy(eu.vendeli.tgbot.types/User = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlinx.datetime/Instant = ...): eu.vendeli.tgbot.types.chat/ChatMember.Restricted // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.copy|copy(eu.vendeli.tgbot.types.User;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlinx.datetime.Instant){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.chat/ChatMember.Restricted> { // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.chat/ChatMember.Restricted // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.chat/ChatMember.Restricted) // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.chat.ChatMember.Restricted){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatMember.Restricted> // eu.vendeli.tgbot.types.chat/ChatMember.Restricted.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.chat/ChatMember.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.chat/ChatMember> // eu.vendeli.tgbot.types.chat/ChatMember.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.chat/ChatMember.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult|null[0]
    final val type // eu.vendeli.tgbot.types.inline/InlineQueryResult.type|{}type[0]
        final fun <get-type>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.type.<get-type>|<get-type>(){}[0]

    final class Article : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article|null[0]
        constructor <init>(kotlin/String, kotlin/String, eu.vendeli.tgbot.types/InputMessageContent, eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.<init>|<init>(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.InputMessageContent;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.Int?){}[0]

        final val description // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.description|{}description[0]
            final fun <get-description>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.description.<get-description>|<get-description>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val thumbnailHeight // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.thumbnailHeight|{}thumbnailHeight[0]
            final fun <get-thumbnailHeight>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.thumbnailHeight.<get-thumbnailHeight>|<get-thumbnailHeight>(){}[0]
        final val thumbnailUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.thumbnailUrl|{}thumbnailUrl[0]
            final fun <get-thumbnailUrl>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.thumbnailUrl.<get-thumbnailUrl>|<get-thumbnailUrl>(){}[0]
        final val thumbnailWidth // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.thumbnailWidth|{}thumbnailWidth[0]
            final fun <get-thumbnailWidth>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.thumbnailWidth.<get-thumbnailWidth>|<get-thumbnailWidth>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.title|{}title[0]
            final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.title.<get-title>|<get-title>(){}[0]
        final val url // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.url|{}url[0]
            final fun <get-url>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.url.<get-url>|<get-url>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.component2|component2(){}[0]
        final fun component3(): eu.vendeli.tgbot.types/InputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.component3|component3(){}[0]
        final fun component4(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.component4|component4(){}[0]
        final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.component5|component5(){}[0]
        final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.component6|component6(){}[0]
        final fun component7(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.component7|component7(){}[0]
        final fun component8(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.component8|component8(){}[0]
        final fun component9(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., eu.vendeli.tgbot.types/InputMessageContent = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.Article // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.copy|copy(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.InputMessageContent;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.Int?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Article> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.Article // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.Article) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.Article){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Article> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Article.Companion.serializer|serializer(){}[0]
        }
    }

    final class Audio : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/String? = ..., kotlin/Int? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.String?;kotlin.Int?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?){}[0]

        final val audioDuration // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.audioDuration|{}audioDuration[0]
            final fun <get-audioDuration>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.audioDuration.<get-audioDuration>|<get-audioDuration>(){}[0]
        final val audioUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.audioUrl|{}audioUrl[0]
            final fun <get-audioUrl>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.audioUrl.<get-audioUrl>|<get-audioUrl>(){}[0]
        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val performer // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.performer|{}performer[0]
            final fun <get-performer>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.performer.<get-performer>|<get-performer>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.title|{}title[0]
            final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.component1|component1(){}[0]
        final fun component10(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.component10|component10(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.component3|component3(){}[0]
        final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.component4|component4(){}[0]
        final fun component5(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.component5|component5(){}[0]
        final fun component6(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.component6|component6(){}[0]
        final fun component7(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.component7|component7(){}[0]
        final fun component8(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.component8|component8(){}[0]
        final fun component9(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/String? = ..., kotlin/Int? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.String?;kotlin.Int?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.Audio){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Audio.Companion.serializer|serializer(){}[0]
        }
    }

    final class CachedAudio : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.<init>|<init>(kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?){}[0]

        final val audioFileId // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.audioFileId|{}audioFileId[0]
            final fun <get-audioFileId>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.audioFileId.<get-audioFileId>|<get-audioFileId>(){}[0]
        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.component2|component2(){}[0]
        final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.component3|component3(){}[0]
        final fun component4(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.component4|component4(){}[0]
        final fun component5(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.component5|component5(){}[0]
        final fun component6(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.component6|component6(){}[0]
        final fun component7(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.component7|component7(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.copy|copy(kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.CachedAudio){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedAudio.Companion.serializer|serializer(){}[0]
        }
    }

    final class CachedDocument : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?){}[0]

        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val description // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.description|{}description[0]
            final fun <get-description>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.description.<get-description>|<get-description>(){}[0]
        final val documentFileId // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.documentFileId|{}documentFileId[0]
            final fun <get-documentFileId>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.documentFileId.<get-documentFileId>|<get-documentFileId>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.title|{}title[0]
            final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.component3|component3(){}[0]
        final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.component4|component4(){}[0]
        final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.component5|component5(){}[0]
        final fun component6(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.component6|component6(){}[0]
        final fun component7(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.component7|component7(){}[0]
        final fun component8(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.component8|component8(){}[0]
        final fun component9(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.CachedDocument){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedDocument.Companion.serializer|serializer(){}[0]
        }
    }

    final class CachedGif : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.<init>|<init>(kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]

        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val gifFileId // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.gifFileId|{}gifFileId[0]
            final fun <get-gifFileId>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.gifFileId.<get-gifFileId>|<get-gifFileId>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val showCaptionAboveMedia // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
            final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.title|{}title[0]
            final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.component2|component2(){}[0]
        final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.component3|component3(){}[0]
        final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.component4|component4(){}[0]
        final fun component5(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.component5|component5(){}[0]
        final fun component6(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.component6|component6(){}[0]
        final fun component7(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.component7|component7(){}[0]
        final fun component8(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.component8|component8(){}[0]
        final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.copy|copy(kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.CachedGif){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedGif.Companion.serializer|serializer(){}[0]
        }
    }

    final class CachedMpeg4Gif : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.<init>|<init>(kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]

        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val mpeg4FileId // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.mpeg4FileId|{}mpeg4FileId[0]
            final fun <get-mpeg4FileId>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.mpeg4FileId.<get-mpeg4FileId>|<get-mpeg4FileId>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val showCaptionAboveMedia // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
            final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.title|{}title[0]
            final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.component2|component2(){}[0]
        final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.component3|component3(){}[0]
        final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.component4|component4(){}[0]
        final fun component5(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.component5|component5(){}[0]
        final fun component6(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.component6|component6(){}[0]
        final fun component7(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.component7|component7(){}[0]
        final fun component8(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.component8|component8(){}[0]
        final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.copy|copy(kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.CachedMpeg4Gif){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedMpeg4Gif.Companion.serializer|serializer(){}[0]
        }
    }

    final class CachedPhoto : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.<init>|<init>(kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]

        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val description // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.description|{}description[0]
            final fun <get-description>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.description.<get-description>|<get-description>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val photoFileId // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.photoFileId|{}photoFileId[0]
            final fun <get-photoFileId>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.photoFileId.<get-photoFileId>|<get-photoFileId>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val showCaptionAboveMedia // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
            final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.title|{}title[0]
            final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.component1|component1(){}[0]
        final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.component10|component10(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.component2|component2(){}[0]
        final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.component3|component3(){}[0]
        final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.component4|component4(){}[0]
        final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.component5|component5(){}[0]
        final fun component6(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.component6|component6(){}[0]
        final fun component7(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.component7|component7(){}[0]
        final fun component8(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.component8|component8(){}[0]
        final fun component9(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.copy|copy(kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.CachedPhoto){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedPhoto.Companion.serializer|serializer(){}[0]
        }
    }

    final class CachedSticker : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker|null[0]
        constructor <init>(kotlin/String, kotlin/String, eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.<init>|<init>(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?){}[0]

        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val stickerFileId // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.stickerFileId|{}stickerFileId[0]
            final fun <get-stickerFileId>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.stickerFileId.<get-stickerFileId>|<get-stickerFileId>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.component2|component2(){}[0]
        final fun component3(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.component3|component3(){}[0]
        final fun component4(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.component4|component4(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.copy|copy(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.CachedSticker){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedSticker.Companion.serializer|serializer(){}[0]
        }
    }

    final class CachedVideo : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]

        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val description // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.description|{}description[0]
            final fun <get-description>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.description.<get-description>|<get-description>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val showCaptionAboveMedia // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
            final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.title|{}title[0]
            final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.title.<get-title>|<get-title>(){}[0]
        final val videoFileId // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.videoFileId|{}videoFileId[0]
            final fun <get-videoFileId>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.videoFileId.<get-videoFileId>|<get-videoFileId>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.component1|component1(){}[0]
        final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.component10|component10(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.component3|component3(){}[0]
        final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.component4|component4(){}[0]
        final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.component5|component5(){}[0]
        final fun component6(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.component6|component6(){}[0]
        final fun component7(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.component7|component7(){}[0]
        final fun component8(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.component8|component8(){}[0]
        final fun component9(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.CachedVideo){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVideo.Companion.serializer|serializer(){}[0]
        }
    }

    final class CachedVoice : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?){}[0]

        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.title|{}title[0]
            final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.title.<get-title>|<get-title>(){}[0]
        final val voiceFileId // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.voiceFileId|{}voiceFileId[0]
            final fun <get-voiceFileId>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.voiceFileId.<get-voiceFileId>|<get-voiceFileId>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.component3|component3(){}[0]
        final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.component4|component4(){}[0]
        final fun component5(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.component5|component5(){}[0]
        final fun component6(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.component6|component6(){}[0]
        final fun component7(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.component7|component7(){}[0]
        final fun component8(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.component8|component8(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice) // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.CachedVoice){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice> // eu.vendeli.tgbot.types.inline/InlineQueryResult.CachedVoice.Companion.serializer|serializer(){}[0]
        }
    }

    final class Contact : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.String?;kotlin.Int?;kotlin.Int?){}[0]

        final val firstName // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.firstName|{}firstName[0]
            final fun <get-firstName>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.firstName.<get-firstName>|<get-firstName>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val lastName // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.lastName|{}lastName[0]
            final fun <get-lastName>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.lastName.<get-lastName>|<get-lastName>(){}[0]
        final val phoneNumber // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.phoneNumber|{}phoneNumber[0]
            final fun <get-phoneNumber>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.phoneNumber.<get-phoneNumber>|<get-phoneNumber>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val thumbnailHeight // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.thumbnailHeight|{}thumbnailHeight[0]
            final fun <get-thumbnailHeight>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.thumbnailHeight.<get-thumbnailHeight>|<get-thumbnailHeight>(){}[0]
        final val thumbnailUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.thumbnailUrl|{}thumbnailUrl[0]
            final fun <get-thumbnailUrl>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.thumbnailUrl.<get-thumbnailUrl>|<get-thumbnailUrl>(){}[0]
        final val thumbnailWidth // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.thumbnailWidth|{}thumbnailWidth[0]
            final fun <get-thumbnailWidth>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.thumbnailWidth.<get-thumbnailWidth>|<get-thumbnailWidth>(){}[0]
        final val vcard // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.vcard|{}vcard[0]
            final fun <get-vcard>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.vcard.<get-vcard>|<get-vcard>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.component1|component1(){}[0]
        final fun component10(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.component10|component10(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.component3|component3(){}[0]
        final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.component4|component4(){}[0]
        final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.component5|component5(){}[0]
        final fun component6(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.component6|component6(){}[0]
        final fun component7(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.component7|component7(){}[0]
        final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.component8|component8(){}[0]
        final fun component9(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.String?;kotlin.Int?;kotlin.Int?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.Contact){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Contact.Companion.serializer|serializer(){}[0]
        }
    }

    final class Document : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/String, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.<init>|<init>(kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.String?;kotlin.Int?;kotlin.Int?){}[0]

        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val description // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.description|{}description[0]
            final fun <get-description>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.description.<get-description>|<get-description>(){}[0]
        final val documentUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.documentUrl|{}documentUrl[0]
            final fun <get-documentUrl>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.documentUrl.<get-documentUrl>|<get-documentUrl>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val mimeType // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.mimeType|{}mimeType[0]
            final fun <get-mimeType>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.mimeType.<get-mimeType>|<get-mimeType>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val thumbnailHeight // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.thumbnailHeight|{}thumbnailHeight[0]
            final fun <get-thumbnailHeight>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.thumbnailHeight.<get-thumbnailHeight>|<get-thumbnailHeight>(){}[0]
        final val thumbnailUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.thumbnailUrl|{}thumbnailUrl[0]
            final fun <get-thumbnailUrl>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.thumbnailUrl.<get-thumbnailUrl>|<get-thumbnailUrl>(){}[0]
        final val thumbnailWidth // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.thumbnailWidth|{}thumbnailWidth[0]
            final fun <get-thumbnailWidth>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.thumbnailWidth.<get-thumbnailWidth>|<get-thumbnailWidth>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.title|{}title[0]
            final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component1|component1(){}[0]
        final fun component10(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component10|component10(){}[0]
        final fun component11(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component11|component11(){}[0]
        final fun component12(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component12|component12(){}[0]
        final fun component13(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component13|component13(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component2|component2(){}[0]
        final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component3|component3(){}[0]
        final fun component4(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component4|component4(){}[0]
        final fun component5(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component5|component5(){}[0]
        final fun component6(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component6|component6(){}[0]
        final fun component7(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component7|component7(){}[0]
        final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component8|component8(){}[0]
        final fun component9(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.Document // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.copy|copy(kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.String?;kotlin.Int?;kotlin.Int?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Document> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.Document // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.Document) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.Document){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Document> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Document.Companion.serializer|serializer(){}[0]
        }
    }

    final class Game : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game|null[0]
        constructor <init>(kotlin/String, kotlin/String, eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.<init>|<init>(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?){}[0]

        final val gameShortName // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.gameShortName|{}gameShortName[0]
            final fun <get-gameShortName>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.gameShortName.<get-gameShortName>|<get-gameShortName>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.id.<get-id>|<get-id>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.component2|component2(){}[0]
        final fun component3(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.component3|component3(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.Game // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.copy|copy(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Game> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.Game // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.Game) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.Game){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Game> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Game.Companion.serializer|serializer(){}[0]
        }
    }

    final class Gif : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.<init>|<init>(kotlin.String;kotlin.String;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]

        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val gifDuration // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.gifDuration|{}gifDuration[0]
            final fun <get-gifDuration>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.gifDuration.<get-gifDuration>|<get-gifDuration>(){}[0]
        final val gifHeight // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.gifHeight|{}gifHeight[0]
            final fun <get-gifHeight>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.gifHeight.<get-gifHeight>|<get-gifHeight>(){}[0]
        final val gifUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.gifUrl|{}gifUrl[0]
            final fun <get-gifUrl>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.gifUrl.<get-gifUrl>|<get-gifUrl>(){}[0]
        final val gifWidth // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.gifWidth|{}gifWidth[0]
            final fun <get-gifWidth>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.gifWidth.<get-gifWidth>|<get-gifWidth>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val showCaptionAboveMedia // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
            final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final val thumbnailMimeType // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.thumbnailMimeType|{}thumbnailMimeType[0]
            final fun <get-thumbnailMimeType>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.thumbnailMimeType.<get-thumbnailMimeType>|<get-thumbnailMimeType>(){}[0]
        final val thumbnailUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.thumbnailUrl|{}thumbnailUrl[0]
            final fun <get-thumbnailUrl>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.thumbnailUrl.<get-thumbnailUrl>|<get-thumbnailUrl>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.title|{}title[0]
            final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component1|component1(){}[0]
        final fun component10(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component10|component10(){}[0]
        final fun component11(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component11|component11(){}[0]
        final fun component12(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component12|component12(){}[0]
        final fun component13(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component13|component13(){}[0]
        final fun component14(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component14|component14(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component2|component2(){}[0]
        final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component3|component3(){}[0]
        final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component4|component4(){}[0]
        final fun component5(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component5|component5(){}[0]
        final fun component6(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component6|component6(){}[0]
        final fun component7(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component7|component7(){}[0]
        final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component8|component8(){}[0]
        final fun component9(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.copy|copy(kotlin.String;kotlin.String;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.Gif){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Gif.Companion.serializer|serializer(){}[0]
        }
    }

    final class Location : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location|null[0]
        constructor <init>(kotlin/String, kotlin/Float, kotlin/Float, kotlin/String, kotlin/Float? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.<init>|<init>(kotlin.String;kotlin.Float;kotlin.Float;kotlin.String;kotlin.Float?;kotlin.Int?;kotlin.Int?;kotlin.Int?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.String?;kotlin.Int?;kotlin.Int?){}[0]

        final val heading // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.heading|{}heading[0]
            final fun <get-heading>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.heading.<get-heading>|<get-heading>(){}[0]
        final val horizontalAccuracy // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.horizontalAccuracy|{}horizontalAccuracy[0]
            final fun <get-horizontalAccuracy>(): kotlin/Float? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.horizontalAccuracy.<get-horizontalAccuracy>|<get-horizontalAccuracy>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val latitude // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.latitude|{}latitude[0]
            final fun <get-latitude>(): kotlin/Float // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.latitude.<get-latitude>|<get-latitude>(){}[0]
        final val livePeriod // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.livePeriod|{}livePeriod[0]
            final fun <get-livePeriod>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.livePeriod.<get-livePeriod>|<get-livePeriod>(){}[0]
        final val longitude // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.longitude|{}longitude[0]
            final fun <get-longitude>(): kotlin/Float // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.longitude.<get-longitude>|<get-longitude>(){}[0]
        final val proximityAlertRadius // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.proximityAlertRadius|{}proximityAlertRadius[0]
            final fun <get-proximityAlertRadius>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.proximityAlertRadius.<get-proximityAlertRadius>|<get-proximityAlertRadius>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val thumbnailHeight // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.thumbnailHeight|{}thumbnailHeight[0]
            final fun <get-thumbnailHeight>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.thumbnailHeight.<get-thumbnailHeight>|<get-thumbnailHeight>(){}[0]
        final val thumbnailUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.thumbnailUrl|{}thumbnailUrl[0]
            final fun <get-thumbnailUrl>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.thumbnailUrl.<get-thumbnailUrl>|<get-thumbnailUrl>(){}[0]
        final val thumbnailWidth // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.thumbnailWidth|{}thumbnailWidth[0]
            final fun <get-thumbnailWidth>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.thumbnailWidth.<get-thumbnailWidth>|<get-thumbnailWidth>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.title|{}title[0]
            final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component1|component1(){}[0]
        final fun component10(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component10|component10(){}[0]
        final fun component11(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component11|component11(){}[0]
        final fun component12(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component12|component12(){}[0]
        final fun component13(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component13|component13(){}[0]
        final fun component2(): kotlin/Float // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component2|component2(){}[0]
        final fun component3(): kotlin/Float // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component3|component3(){}[0]
        final fun component4(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component4|component4(){}[0]
        final fun component5(): kotlin/Float? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component5|component5(){}[0]
        final fun component6(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component6|component6(){}[0]
        final fun component7(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component7|component7(){}[0]
        final fun component8(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component8|component8(){}[0]
        final fun component9(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/Float = ..., kotlin/Float = ..., kotlin/String = ..., kotlin/Float? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.Location // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.copy|copy(kotlin.String;kotlin.Float;kotlin.Float;kotlin.String;kotlin.Float?;kotlin.Int?;kotlin.Int?;kotlin.Int?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.String?;kotlin.Int?;kotlin.Int?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Location> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.Location // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.Location) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.Location){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Location> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Location.Companion.serializer|serializer(){}[0]
        }
    }

    final class Mpeg4Gif : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.<init>|<init>(kotlin.String;kotlin.String;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]

        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val mpeg4Duration // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.mpeg4Duration|{}mpeg4Duration[0]
            final fun <get-mpeg4Duration>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.mpeg4Duration.<get-mpeg4Duration>|<get-mpeg4Duration>(){}[0]
        final val mpeg4Height // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.mpeg4Height|{}mpeg4Height[0]
            final fun <get-mpeg4Height>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.mpeg4Height.<get-mpeg4Height>|<get-mpeg4Height>(){}[0]
        final val mpeg4Url // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.mpeg4Url|{}mpeg4Url[0]
            final fun <get-mpeg4Url>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.mpeg4Url.<get-mpeg4Url>|<get-mpeg4Url>(){}[0]
        final val mpeg4Width // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.mpeg4Width|{}mpeg4Width[0]
            final fun <get-mpeg4Width>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.mpeg4Width.<get-mpeg4Width>|<get-mpeg4Width>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val showCaptionAboveMedia // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
            final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final val thumbnailMimeType // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.thumbnailMimeType|{}thumbnailMimeType[0]
            final fun <get-thumbnailMimeType>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.thumbnailMimeType.<get-thumbnailMimeType>|<get-thumbnailMimeType>(){}[0]
        final val thumbnailUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.thumbnailUrl|{}thumbnailUrl[0]
            final fun <get-thumbnailUrl>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.thumbnailUrl.<get-thumbnailUrl>|<get-thumbnailUrl>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.title|{}title[0]
            final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component1|component1(){}[0]
        final fun component10(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component10|component10(){}[0]
        final fun component11(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component11|component11(){}[0]
        final fun component12(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component12|component12(){}[0]
        final fun component13(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component13|component13(){}[0]
        final fun component14(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component14|component14(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component2|component2(){}[0]
        final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component3|component3(){}[0]
        final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component4|component4(){}[0]
        final fun component5(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component5|component5(){}[0]
        final fun component6(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component6|component6(){}[0]
        final fun component7(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component7|component7(){}[0]
        final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component8|component8(){}[0]
        final fun component9(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.copy|copy(kotlin.String;kotlin.String;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.Mpeg4Gif){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Mpeg4Gif.Companion.serializer|serializer(){}[0]
        }
    }

    final class Photo : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/Int? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.Int?;kotlin.Int?;kotlin.String?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]

        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val description // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.description|{}description[0]
            final fun <get-description>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.description.<get-description>|<get-description>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val photoHeight // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.photoHeight|{}photoHeight[0]
            final fun <get-photoHeight>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.photoHeight.<get-photoHeight>|<get-photoHeight>(){}[0]
        final val photoUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.photoUrl|{}photoUrl[0]
            final fun <get-photoUrl>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.photoUrl.<get-photoUrl>|<get-photoUrl>(){}[0]
        final val photoWidth // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.photoWidth|{}photoWidth[0]
            final fun <get-photoWidth>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.photoWidth.<get-photoWidth>|<get-photoWidth>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val showCaptionAboveMedia // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
            final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final val thumbnailUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.thumbnailUrl|{}thumbnailUrl[0]
            final fun <get-thumbnailUrl>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.thumbnailUrl.<get-thumbnailUrl>|<get-thumbnailUrl>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.title|{}title[0]
            final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component1|component1(){}[0]
        final fun component10(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component10|component10(){}[0]
        final fun component11(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component11|component11(){}[0]
        final fun component12(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component12|component12(){}[0]
        final fun component13(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component13|component13(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component3|component3(){}[0]
        final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component4|component4(){}[0]
        final fun component5(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component5|component5(){}[0]
        final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component6|component6(){}[0]
        final fun component7(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component7|component7(){}[0]
        final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component8|component8(){}[0]
        final fun component9(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.Int?;kotlin.Int?;kotlin.String?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.Photo){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Photo.Companion.serializer|serializer(){}[0]
        }
    }

    final class Venue : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue|null[0]
        constructor <init>(kotlin/String, kotlin/Float, kotlin/Float, kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.<init>|<init>(kotlin.String;kotlin.Float;kotlin.Float;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.String?;kotlin.Int?;kotlin.Int?){}[0]

        final val address // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.address|{}address[0]
            final fun <get-address>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.address.<get-address>|<get-address>(){}[0]
        final val foursquareId // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.foursquareId|{}foursquareId[0]
            final fun <get-foursquareId>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.foursquareId.<get-foursquareId>|<get-foursquareId>(){}[0]
        final val foursquareType // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.foursquareType|{}foursquareType[0]
            final fun <get-foursquareType>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.foursquareType.<get-foursquareType>|<get-foursquareType>(){}[0]
        final val googlePlaceId // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.googlePlaceId|{}googlePlaceId[0]
            final fun <get-googlePlaceId>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.googlePlaceId.<get-googlePlaceId>|<get-googlePlaceId>(){}[0]
        final val googlePlaceType // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.googlePlaceType|{}googlePlaceType[0]
            final fun <get-googlePlaceType>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.googlePlaceType.<get-googlePlaceType>|<get-googlePlaceType>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val latitude // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.latitude|{}latitude[0]
            final fun <get-latitude>(): kotlin/Float // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.latitude.<get-latitude>|<get-latitude>(){}[0]
        final val longitude // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.longitude|{}longitude[0]
            final fun <get-longitude>(): kotlin/Float // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.longitude.<get-longitude>|<get-longitude>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val thumbnailHeight // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.thumbnailHeight|{}thumbnailHeight[0]
            final fun <get-thumbnailHeight>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.thumbnailHeight.<get-thumbnailHeight>|<get-thumbnailHeight>(){}[0]
        final val thumbnailUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.thumbnailUrl|{}thumbnailUrl[0]
            final fun <get-thumbnailUrl>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.thumbnailUrl.<get-thumbnailUrl>|<get-thumbnailUrl>(){}[0]
        final val thumbnailWidth // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.thumbnailWidth|{}thumbnailWidth[0]
            final fun <get-thumbnailWidth>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.thumbnailWidth.<get-thumbnailWidth>|<get-thumbnailWidth>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.title|{}title[0]
            final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component1|component1(){}[0]
        final fun component10(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component10|component10(){}[0]
        final fun component11(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component11|component11(){}[0]
        final fun component12(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component12|component12(){}[0]
        final fun component13(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component13|component13(){}[0]
        final fun component14(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component14|component14(){}[0]
        final fun component2(): kotlin/Float // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component2|component2(){}[0]
        final fun component3(): kotlin/Float // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component3|component3(){}[0]
        final fun component4(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component4|component4(){}[0]
        final fun component5(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component5|component5(){}[0]
        final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component6|component6(){}[0]
        final fun component7(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component7|component7(){}[0]
        final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component8|component8(){}[0]
        final fun component9(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/Float = ..., kotlin/Float = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.copy|copy(kotlin.String;kotlin.Float;kotlin.Float;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.String?;kotlin.Int?;kotlin.Int?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.Venue){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Venue.Companion.serializer|serializer(){}[0]
        }
    }

    final class Video : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.String?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]

        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val description // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.description|{}description[0]
            final fun <get-description>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.description.<get-description>|<get-description>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val mimeType // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.mimeType|{}mimeType[0]
            final fun <get-mimeType>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.mimeType.<get-mimeType>|<get-mimeType>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val showCaptionAboveMedia // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
            final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final val thumbnailUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.thumbnailUrl|{}thumbnailUrl[0]
            final fun <get-thumbnailUrl>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.thumbnailUrl.<get-thumbnailUrl>|<get-thumbnailUrl>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.title|{}title[0]
            final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.title.<get-title>|<get-title>(){}[0]
        final val videoDuration // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.videoDuration|{}videoDuration[0]
            final fun <get-videoDuration>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.videoDuration.<get-videoDuration>|<get-videoDuration>(){}[0]
        final val videoHeight // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.videoHeight|{}videoHeight[0]
            final fun <get-videoHeight>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.videoHeight.<get-videoHeight>|<get-videoHeight>(){}[0]
        final val videoUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.videoUrl|{}videoUrl[0]
            final fun <get-videoUrl>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.videoUrl.<get-videoUrl>|<get-videoUrl>(){}[0]
        final val videoWidth // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.videoWidth|{}videoWidth[0]
            final fun <get-videoWidth>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.videoWidth.<get-videoWidth>|<get-videoWidth>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component1|component1(){}[0]
        final fun component10(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component10|component10(){}[0]
        final fun component11(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component11|component11(){}[0]
        final fun component12(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component12|component12(){}[0]
        final fun component13(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component13|component13(){}[0]
        final fun component14(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component14|component14(){}[0]
        final fun component15(): kotlin/Boolean? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component15|component15(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component3|component3(){}[0]
        final fun component4(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component4|component4(){}[0]
        final fun component5(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component5|component5(){}[0]
        final fun component6(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component6|component6(){}[0]
        final fun component7(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component7|component7(){}[0]
        final fun component8(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component8|component8(){}[0]
        final fun component9(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.Video // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.String?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Video> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.Video // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.Video) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.Video){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Video> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Video.Companion.serializer|serializer(){}[0]
        }
    }

    final class Voice : eu.vendeli.tgbot.types.inline/InlineQueryResult { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ...) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?){}[0]

        final val caption // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val id // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.id|{}id[0]
            final fun <get-id>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.id.<get-id>|<get-id>(){}[0]
        final val inputMessageContent // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.inputMessageContent|{}inputMessageContent[0]
            final fun <get-inputMessageContent>(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.inputMessageContent.<get-inputMessageContent>|<get-inputMessageContent>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val replyMarkup // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.replyMarkup|{}replyMarkup[0]
            final fun <get-replyMarkup>(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.replyMarkup.<get-replyMarkup>|<get-replyMarkup>(){}[0]
        final val title // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.title|{}title[0]
            final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.title.<get-title>|<get-title>(){}[0]
        final val voiceDuration // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.voiceDuration|{}voiceDuration[0]
            final fun <get-voiceDuration>(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.voiceDuration.<get-voiceDuration>|<get-voiceDuration>(){}[0]
        final val voiceUrl // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.voiceUrl|{}voiceUrl[0]
            final fun <get-voiceUrl>(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.voiceUrl.<get-voiceUrl>|<get-voiceUrl>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.component3|component3(){}[0]
        final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.component4|component4(){}[0]
        final fun component5(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.component5|component5(){}[0]
        final fun component6(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.component6|component6(){}[0]
        final fun component7(): kotlin/Int? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.component7|component7(){}[0]
        final fun component8(): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.component8|component8(){}[0]
        final fun component9(): eu.vendeli.tgbot.types/InputMessageContent? // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ..., eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup? = ..., eu.vendeli.tgbot.types/InputMessageContent? = ...): eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?;eu.vendeli.tgbot.types.keyboard.InlineKeyboardMarkup?;eu.vendeli.tgbot.types.InputMessageContent?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice> { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice) // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.inline.InlineQueryResult.Voice){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Voice.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.inline/InlineQueryResult.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.inline/InlineQueryResult> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.inline/InlineQueryResult.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.internal.chain/ChainingStrategy { // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy|null[0]
    final class <#A1: eu.vendeli.tgbot.types.internal.chain/Link<*>> LinkTo : eu.vendeli.tgbot.types.internal.chain/ChainingStrategy { // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.LinkTo|null[0]
        constructor <init>(kotlin/Function0<#A1>) // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.LinkTo.<init>|<init>(kotlin.Function0<1:0>){}[0]

        final val target // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.LinkTo.target|{}target[0]
            final fun <get-target>(): kotlin/Function0<#A1> // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.LinkTo.target.<get-target>|<get-target>(){}[0]

        final fun component1(): kotlin/Function0<#A1> // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.LinkTo.component1|component1(){}[0]
        final fun copy(kotlin/Function0<#A1> = ...): eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.LinkTo<#A1> // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.LinkTo.copy|copy(kotlin.Function0<1:0>){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.LinkTo.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.LinkTo.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.LinkTo.toString|toString(){}[0]
    }

    final object Default : eu.vendeli.tgbot.types.internal.chain/ChainingStrategy { // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.Default|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.Default.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.Default.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.Default.toString|toString(){}[0]
    }

    final object DoNothing : eu.vendeli.tgbot.types.internal.chain/ChainingStrategy { // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.DoNothing|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.DoNothing.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.DoNothing.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal.chain/ChainingStrategy.DoNothing.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.internal/CommonMatcher { // eu.vendeli.tgbot.types.internal/CommonMatcher|null[0]
    final val filter // eu.vendeli.tgbot.types.internal/CommonMatcher.filter|{}filter[0]
        final fun <get-filter>(): kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Filter> // eu.vendeli.tgbot.types.internal/CommonMatcher.filter.<get-filter>|<get-filter>(){}[0]
    final val scope // eu.vendeli.tgbot.types.internal/CommonMatcher.scope|{}scope[0]
        final fun <get-scope>(): kotlin.collections/Set<eu.vendeli.tgbot.types.internal/UpdateType> // eu.vendeli.tgbot.types.internal/CommonMatcher.scope.<get-scope>|<get-scope>(){}[0]
    open val value // eu.vendeli.tgbot.types.internal/CommonMatcher.value|{}value[0]
        open fun <get-value>(): kotlin/Any // eu.vendeli.tgbot.types.internal/CommonMatcher.value.<get-value>|<get-value>(){}[0]

    abstract suspend fun match(kotlin/String, eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot): kotlin/Boolean // eu.vendeli.tgbot.types.internal/CommonMatcher.match|match(kotlin.String;eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
    open fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/CommonMatcher.toString|toString(){}[0]

    final class Regex : eu.vendeli.tgbot.types.internal/CommonMatcher { // eu.vendeli.tgbot.types.internal/CommonMatcher.Regex|null[0]
        constructor <init>(kotlin.text/Regex, kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Filter> = ..., kotlin.collections/Set<eu.vendeli.tgbot.types.internal/UpdateType> = ...) // eu.vendeli.tgbot.types.internal/CommonMatcher.Regex.<init>|<init>(kotlin.text.Regex;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.Filter>;kotlin.collections.Set<eu.vendeli.tgbot.types.internal.UpdateType>){}[0]

        final val value // eu.vendeli.tgbot.types.internal/CommonMatcher.Regex.value|{}value[0]
            final fun <get-value>(): kotlin.text/Regex // eu.vendeli.tgbot.types.internal/CommonMatcher.Regex.value.<get-value>|<get-value>(){}[0]

        final suspend fun match(kotlin/String, eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot): kotlin/Boolean // eu.vendeli.tgbot.types.internal/CommonMatcher.Regex.match|match(kotlin.String;eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
    }

    final class String : eu.vendeli.tgbot.types.internal/CommonMatcher { // eu.vendeli.tgbot.types.internal/CommonMatcher.String|null[0]
        constructor <init>(kotlin/String, kotlin.reflect/KClass<out eu.vendeli.tgbot.interfaces.helper/Filter> = ..., kotlin.collections/Set<eu.vendeli.tgbot.types.internal/UpdateType> = ...) // eu.vendeli.tgbot.types.internal/CommonMatcher.String.<init>|<init>(kotlin.String;kotlin.reflect.KClass<out|eu.vendeli.tgbot.interfaces.helper.Filter>;kotlin.collections.Set<eu.vendeli.tgbot.types.internal.UpdateType>){}[0]

        final val value // eu.vendeli.tgbot.types.internal/CommonMatcher.String.value|{}value[0]
            final fun <get-value>(): kotlin/String // eu.vendeli.tgbot.types.internal/CommonMatcher.String.value.<get-value>|<get-value>(){}[0]

        final suspend fun match(kotlin/String, eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot): kotlin/Boolean // eu.vendeli.tgbot.types.internal/CommonMatcher.String.match|match(kotlin.String;eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy { // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy|null[0]
    final class Handle : eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy { // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Handle|null[0]
        constructor <init>(eu.vendeli.tgbot.interfaces.helper/ExceptionHandler) // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Handle.<init>|<init>(eu.vendeli.tgbot.interfaces.helper.ExceptionHandler){}[0]

        final val handler // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Handle.handler|{}handler[0]
            final fun <get-handler>(): eu.vendeli.tgbot.interfaces.helper/ExceptionHandler // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Handle.handler.<get-handler>|<get-handler>(){}[0]

        final fun component1(): eu.vendeli.tgbot.interfaces.helper/ExceptionHandler // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Handle.component1|component1(){}[0]
        final fun copy(eu.vendeli.tgbot.interfaces.helper/ExceptionHandler = ...): eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Handle // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Handle.copy|copy(eu.vendeli.tgbot.interfaces.helper.ExceptionHandler){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Handle.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Handle.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Handle.toString|toString(){}[0]
    }

    final object CollectToChannel : eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy { // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.CollectToChannel|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.CollectToChannel.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.CollectToChannel.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.CollectToChannel.toString|toString(){}[0]
    }

    final object DoNothing : eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy { // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.DoNothing|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.DoNothing.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.DoNothing.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.DoNothing.toString|toString(){}[0]
    }

    final object Throw : eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy { // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Throw|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Throw.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Throw.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/ExceptionHandlingStrategy.Throw.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.internal/Identifier { // eu.vendeli.tgbot.types.internal/Identifier|null[0]
    abstract val get // eu.vendeli.tgbot.types.internal/Identifier.get|{}get[0]
        abstract fun <get-get>(): kotlin/Any // eu.vendeli.tgbot.types.internal/Identifier.get.<get-get>|<get-get>(){}[0]

    final class Long : eu.vendeli.tgbot.types.internal/Identifier { // eu.vendeli.tgbot.types.internal/Identifier.Long|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.tgbot.types.internal/Identifier.Long.<init>|<init>(kotlin.Long){}[0]

        final val get // eu.vendeli.tgbot.types.internal/Identifier.Long.get|{}get[0]
            final fun <get-get>(): kotlin/Long // eu.vendeli.tgbot.types.internal/Identifier.Long.get.<get-get>|<get-get>(){}[0]
        final val to // eu.vendeli.tgbot.types.internal/Identifier.Long.to|{}to[0]
            final fun <get-to>(): kotlin/Long // eu.vendeli.tgbot.types.internal/Identifier.Long.to.<get-to>|<get-to>(){}[0]

        final fun component1(): kotlin/Long // eu.vendeli.tgbot.types.internal/Identifier.Long.component1|component1(){}[0]
        final fun copy(kotlin/Long = ...): eu.vendeli.tgbot.types.internal/Identifier.Long // eu.vendeli.tgbot.types.internal/Identifier.Long.copy|copy(kotlin.Long){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/Identifier.Long.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/Identifier.Long.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/Identifier.Long.toString|toString(){}[0]
    }

    final class String : eu.vendeli.tgbot.types.internal/Identifier { // eu.vendeli.tgbot.types.internal/Identifier.String|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.tgbot.types.internal/Identifier.String.<init>|<init>(kotlin.String){}[0]

        final val get // eu.vendeli.tgbot.types.internal/Identifier.String.get|{}get[0]
            final fun <get-get>(): kotlin/String // eu.vendeli.tgbot.types.internal/Identifier.String.get.<get-get>|<get-get>(){}[0]
        final val to // eu.vendeli.tgbot.types.internal/Identifier.String.to|{}to[0]
            final fun <get-to>(): kotlin/String // eu.vendeli.tgbot.types.internal/Identifier.String.to.<get-to>|<get-to>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.internal/Identifier.String.component1|component1(){}[0]
        final fun copy(kotlin/String = ...): eu.vendeli.tgbot.types.internal/Identifier.String // eu.vendeli.tgbot.types.internal/Identifier.String.copy|copy(kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.internal/Identifier.String.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.internal/Identifier.String.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.internal/Identifier.String.toString|toString(){}[0]
    }

    final object Companion { // eu.vendeli.tgbot.types.internal/Identifier.Companion|null[0]
        final fun from(eu.vendeli.tgbot.types.chat/Chat): eu.vendeli.tgbot.types.internal/Identifier.Long // eu.vendeli.tgbot.types.internal/Identifier.Companion.from|from(eu.vendeli.tgbot.types.chat.Chat){}[0]
        final fun from(eu.vendeli.tgbot.types/User): eu.vendeli.tgbot.types.internal/Identifier.Long // eu.vendeli.tgbot.types.internal/Identifier.Companion.from|from(eu.vendeli.tgbot.types.User){}[0]
        final fun from(kotlin/Long): eu.vendeli.tgbot.types.internal/Identifier.Long // eu.vendeli.tgbot.types.internal/Identifier.Companion.from|from(kotlin.Long){}[0]
        final fun from(kotlin/String): eu.vendeli.tgbot.types.internal/Identifier.String // eu.vendeli.tgbot.types.internal/Identifier.Companion.from|from(kotlin.String){}[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal/Identifier> // eu.vendeli.tgbot.types.internal/Identifier.Companion.serializer|serializer(){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.internal/ImplicitFile { // eu.vendeli.tgbot.types.internal/ImplicitFile|null[0]
    abstract val file // eu.vendeli.tgbot.types.internal/ImplicitFile.file|{}file[0]
        abstract fun <get-file>(): kotlin/Any // eu.vendeli.tgbot.types.internal/ImplicitFile.file.<get-file>|<get-file>(){}[0]

    final class InpFile : eu.vendeli.tgbot.types.internal/ImplicitFile { // eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile|null[0]
        constructor <init>(eu.vendeli.tgbot.types.internal/InputFile) // eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile.<init>|<init>(eu.vendeli.tgbot.types.internal.InputFile){}[0]

        final val file // eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile.file|{}file[0]
            final fun <get-file>(): eu.vendeli.tgbot.types.internal/InputFile // eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile.file.<get-file>|<get-file>(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile> { // eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile // eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile) // eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.ImplicitFile.InpFile){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile> // eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile.Companion.serializer|serializer(){}[0]
        }
    }

    final class Str : eu.vendeli.tgbot.types.internal/ImplicitFile { // eu.vendeli.tgbot.types.internal/ImplicitFile.Str|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.tgbot.types.internal/ImplicitFile.Str.<init>|<init>(kotlin.String){}[0]

        final val file // eu.vendeli.tgbot.types.internal/ImplicitFile.Str.file|{}file[0]
            final fun <get-file>(): kotlin/String // eu.vendeli.tgbot.types.internal/ImplicitFile.Str.file.<get-file>|<get-file>(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.internal/ImplicitFile.Str> { // eu.vendeli.tgbot.types.internal/ImplicitFile.Str.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.internal/ImplicitFile.Str.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.internal/ImplicitFile.Str.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.internal/ImplicitFile.Str.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.internal/ImplicitFile.Str // eu.vendeli.tgbot.types.internal/ImplicitFile.Str.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.internal/ImplicitFile.Str) // eu.vendeli.tgbot.types.internal/ImplicitFile.Str.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.internal.ImplicitFile.Str){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.internal/ImplicitFile.Str.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.internal/ImplicitFile.Str> // eu.vendeli.tgbot.types.internal/ImplicitFile.Str.Companion.serializer|serializer(){}[0]
        }
    }
}

sealed class eu.vendeli.tgbot.types.internal/ProcessedUpdate : eu.vendeli.tgbot.interfaces.marker/MultipleResponse, eu.vendeli.tgbot.types.internal/TextReference { // eu.vendeli.tgbot.types.internal/ProcessedUpdate|null[0]
    open val origin // eu.vendeli.tgbot.types.internal/ProcessedUpdate.origin|{}origin[0]
        open fun <get-origin>(): eu.vendeli.tgbot.types/Update // eu.vendeli.tgbot.types.internal/ProcessedUpdate.origin.<get-origin>|<get-origin>(){}[0]
    open val updateId // eu.vendeli.tgbot.types.internal/ProcessedUpdate.updateId|{}updateId[0]
        open fun <get-updateId>(): kotlin/Int // eu.vendeli.tgbot.types.internal/ProcessedUpdate.updateId.<get-updateId>|<get-updateId>(){}[0]
}

sealed class eu.vendeli.tgbot.types.keyboard/MenuButton { // eu.vendeli.tgbot.types.keyboard/MenuButton|null[0]
    final val type // eu.vendeli.tgbot.types.keyboard/MenuButton.type|{}type[0]
        final fun <get-type>(): kotlin/String // eu.vendeli.tgbot.types.keyboard/MenuButton.type.<get-type>|<get-type>(){}[0]

    final class Commands : eu.vendeli.tgbot.types.keyboard/MenuButton { // eu.vendeli.tgbot.types.keyboard/MenuButton.Commands|null[0]
        constructor <init>() // eu.vendeli.tgbot.types.keyboard/MenuButton.Commands.<init>|<init>(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/MenuButton.Commands> { // eu.vendeli.tgbot.types.keyboard/MenuButton.Commands.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.keyboard/MenuButton.Commands.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/MenuButton.Commands.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/MenuButton.Commands.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/MenuButton.Commands // eu.vendeli.tgbot.types.keyboard/MenuButton.Commands.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/MenuButton.Commands) // eu.vendeli.tgbot.types.keyboard/MenuButton.Commands.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.MenuButton.Commands){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.keyboard/MenuButton.Commands.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/MenuButton.Commands> // eu.vendeli.tgbot.types.keyboard/MenuButton.Commands.Companion.serializer|serializer(){}[0]
        }
    }

    final class Default : eu.vendeli.tgbot.types.keyboard/MenuButton { // eu.vendeli.tgbot.types.keyboard/MenuButton.Default|null[0]
        constructor <init>() // eu.vendeli.tgbot.types.keyboard/MenuButton.Default.<init>|<init>(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/MenuButton.Default> { // eu.vendeli.tgbot.types.keyboard/MenuButton.Default.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.keyboard/MenuButton.Default.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/MenuButton.Default.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/MenuButton.Default.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/MenuButton.Default // eu.vendeli.tgbot.types.keyboard/MenuButton.Default.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/MenuButton.Default) // eu.vendeli.tgbot.types.keyboard/MenuButton.Default.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.MenuButton.Default){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.keyboard/MenuButton.Default.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/MenuButton.Default> // eu.vendeli.tgbot.types.keyboard/MenuButton.Default.Companion.serializer|serializer(){}[0]
        }
    }

    final class WebApp : eu.vendeli.tgbot.types.keyboard/MenuButton { // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp|null[0]
        constructor <init>(kotlin/String, eu.vendeli.tgbot.types.keyboard/WebAppInfo) // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.keyboard.WebAppInfo){}[0]

        final val text // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.text|{}text[0]
            final fun <get-text>(): kotlin/String // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.text.<get-text>|<get-text>(){}[0]
        final val webApp // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.webApp|{}webApp[0]
            final fun <get-webApp>(): eu.vendeli.tgbot.types.keyboard/WebAppInfo // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.webApp.<get-webApp>|<get-webApp>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.component1|component1(){}[0]
        final fun component2(): eu.vendeli.tgbot.types.keyboard/WebAppInfo // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.component2|component2(){}[0]
        final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types.keyboard/WebAppInfo = ...): eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.copy|copy(kotlin.String;eu.vendeli.tgbot.types.keyboard.WebAppInfo){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp> { // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp) // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.keyboard.MenuButton.WebApp){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp> // eu.vendeli.tgbot.types.keyboard/MenuButton.WebApp.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.keyboard/MenuButton.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.keyboard/MenuButton> // eu.vendeli.tgbot.types.keyboard/MenuButton.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.keyboard/MenuButton.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.media/InputMedia : eu.vendeli.tgbot.interfaces.helper/ImplicitMediaData { // eu.vendeli.tgbot.types.media/InputMedia|null[0]
    final val type // eu.vendeli.tgbot.types.media/InputMedia.type|{}type[0]
        final fun <get-type>(): kotlin/String // eu.vendeli.tgbot.types.media/InputMedia.type.<get-type>|<get-type>(){}[0]

    final class Animation : eu.vendeli.tgbot.types.media/InputMedia { // eu.vendeli.tgbot.types.media/InputMedia.Animation|null[0]
        constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile, eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.media/InputMedia.Animation.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?){}[0]

        final val caption // eu.vendeli.tgbot.types.media/InputMedia.Animation.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Animation.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.media/InputMedia.Animation.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.media/InputMedia.Animation.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val duration // eu.vendeli.tgbot.types.media/InputMedia.Animation.duration|{}duration[0]
            final fun <get-duration>(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Animation.duration.<get-duration>|<get-duration>(){}[0]
        final val hasSpoiler // eu.vendeli.tgbot.types.media/InputMedia.Animation.hasSpoiler|{}hasSpoiler[0]
            final fun <get-hasSpoiler>(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Animation.hasSpoiler.<get-hasSpoiler>|<get-hasSpoiler>(){}[0]
        final val height // eu.vendeli.tgbot.types.media/InputMedia.Animation.height|{}height[0]
            final fun <get-height>(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Animation.height.<get-height>|<get-height>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.media/InputMedia.Animation.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.media/InputMedia.Animation.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val showCaptionAboveMedia // eu.vendeli.tgbot.types.media/InputMedia.Animation.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
            final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Animation.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final val width // eu.vendeli.tgbot.types.media/InputMedia.Animation.width|{}width[0]
            final fun <get-width>(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Animation.width.<get-width>|<get-width>(){}[0]

        final var media // eu.vendeli.tgbot.types.media/InputMedia.Animation.media|{}media[0]
            final fun <get-media>(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputMedia.Animation.media.<get-media>|<get-media>(){}[0]
            final fun <set-media>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.types.media/InputMedia.Animation.media.<set-media>|<set-media>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
        final var thumbnail // eu.vendeli.tgbot.types.media/InputMedia.Animation.thumbnail|{}thumbnail[0]
            final fun <get-thumbnail>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputMedia.Animation.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
            final fun <set-thumbnail>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.types.media/InputMedia.Animation.thumbnail.<set-thumbnail>|<set-thumbnail>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]

        final fun component1(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputMedia.Animation.component1|component1(){}[0]
        final fun component10(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Animation.component10|component10(){}[0]
        final fun component2(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputMedia.Animation.component2|component2(){}[0]
        final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Animation.component3|component3(){}[0]
        final fun component4(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.media/InputMedia.Animation.component4|component4(){}[0]
        final fun component5(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.media/InputMedia.Animation.component5|component5(){}[0]
        final fun component6(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Animation.component6|component6(){}[0]
        final fun component7(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Animation.component7|component7(){}[0]
        final fun component8(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Animation.component8|component8(){}[0]
        final fun component9(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Animation.component9|component9(){}[0]
        final fun copy(eu.vendeli.tgbot.types.internal/ImplicitFile = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.media/InputMedia.Animation // eu.vendeli.tgbot.types.media/InputMedia.Animation.copy|copy(eu.vendeli.tgbot.types.internal.ImplicitFile;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/InputMedia.Animation.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/InputMedia.Animation.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/InputMedia.Animation.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/InputMedia.Animation> { // eu.vendeli.tgbot.types.media/InputMedia.Animation.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.media/InputMedia.Animation.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/InputMedia.Animation.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/InputMedia.Animation.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/InputMedia.Animation // eu.vendeli.tgbot.types.media/InputMedia.Animation.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/InputMedia.Animation) // eu.vendeli.tgbot.types.media/InputMedia.Animation.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.InputMedia.Animation){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.media/InputMedia.Animation.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.media/InputMedia.Animation.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/InputMedia.Animation> // eu.vendeli.tgbot.types.media/InputMedia.Animation.Companion.serializer|serializer(){}[0]
        }
    }

    final class Audio : eu.vendeli.tgbot.types.media/InputMedia { // eu.vendeli.tgbot.types.media/InputMedia.Audio|null[0]
        constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile, eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types.media/InputMedia.Audio.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?;kotlin.String?;kotlin.String?){}[0]

        final val caption // eu.vendeli.tgbot.types.media/InputMedia.Audio.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Audio.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.media/InputMedia.Audio.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.media/InputMedia.Audio.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val duration // eu.vendeli.tgbot.types.media/InputMedia.Audio.duration|{}duration[0]
            final fun <get-duration>(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Audio.duration.<get-duration>|<get-duration>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.media/InputMedia.Audio.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.media/InputMedia.Audio.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val performer // eu.vendeli.tgbot.types.media/InputMedia.Audio.performer|{}performer[0]
            final fun <get-performer>(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Audio.performer.<get-performer>|<get-performer>(){}[0]
        final val title // eu.vendeli.tgbot.types.media/InputMedia.Audio.title|{}title[0]
            final fun <get-title>(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Audio.title.<get-title>|<get-title>(){}[0]

        final var media // eu.vendeli.tgbot.types.media/InputMedia.Audio.media|{}media[0]
            final fun <get-media>(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputMedia.Audio.media.<get-media>|<get-media>(){}[0]
            final fun <set-media>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.types.media/InputMedia.Audio.media.<set-media>|<set-media>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
        final var thumbnail // eu.vendeli.tgbot.types.media/InputMedia.Audio.thumbnail|{}thumbnail[0]
            final fun <get-thumbnail>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputMedia.Audio.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
            final fun <set-thumbnail>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.types.media/InputMedia.Audio.thumbnail.<set-thumbnail>|<set-thumbnail>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]

        final fun component1(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputMedia.Audio.component1|component1(){}[0]
        final fun component2(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputMedia.Audio.component2|component2(){}[0]
        final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Audio.component3|component3(){}[0]
        final fun component4(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.media/InputMedia.Audio.component4|component4(){}[0]
        final fun component5(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.media/InputMedia.Audio.component5|component5(){}[0]
        final fun component6(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Audio.component6|component6(){}[0]
        final fun component7(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Audio.component7|component7(){}[0]
        final fun component8(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Audio.component8|component8(){}[0]
        final fun copy(eu.vendeli.tgbot.types.internal/ImplicitFile = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.media/InputMedia.Audio // eu.vendeli.tgbot.types.media/InputMedia.Audio.copy|copy(eu.vendeli.tgbot.types.internal.ImplicitFile;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?;kotlin.String?;kotlin.String?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/InputMedia.Audio.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/InputMedia.Audio.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/InputMedia.Audio.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/InputMedia.Audio> { // eu.vendeli.tgbot.types.media/InputMedia.Audio.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.media/InputMedia.Audio.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/InputMedia.Audio.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/InputMedia.Audio.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/InputMedia.Audio // eu.vendeli.tgbot.types.media/InputMedia.Audio.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/InputMedia.Audio) // eu.vendeli.tgbot.types.media/InputMedia.Audio.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.InputMedia.Audio){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.media/InputMedia.Audio.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.media/InputMedia.Audio.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/InputMedia.Audio> // eu.vendeli.tgbot.types.media/InputMedia.Audio.Companion.serializer|serializer(){}[0]
        }
    }

    final class Document : eu.vendeli.tgbot.types.media/InputMedia { // eu.vendeli.tgbot.types.media/InputMedia.Document|null[0]
        constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile, eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.media/InputMedia.Document.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Boolean?){}[0]

        final val caption // eu.vendeli.tgbot.types.media/InputMedia.Document.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Document.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.media/InputMedia.Document.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.media/InputMedia.Document.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val disableContentTypeDetection // eu.vendeli.tgbot.types.media/InputMedia.Document.disableContentTypeDetection|{}disableContentTypeDetection[0]
            final fun <get-disableContentTypeDetection>(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Document.disableContentTypeDetection.<get-disableContentTypeDetection>|<get-disableContentTypeDetection>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.media/InputMedia.Document.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.media/InputMedia.Document.parseMode.<get-parseMode>|<get-parseMode>(){}[0]

        final var media // eu.vendeli.tgbot.types.media/InputMedia.Document.media|{}media[0]
            final fun <get-media>(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputMedia.Document.media.<get-media>|<get-media>(){}[0]
            final fun <set-media>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.types.media/InputMedia.Document.media.<set-media>|<set-media>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
        final var thumbnail // eu.vendeli.tgbot.types.media/InputMedia.Document.thumbnail|{}thumbnail[0]
            final fun <get-thumbnail>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputMedia.Document.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
            final fun <set-thumbnail>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.types.media/InputMedia.Document.thumbnail.<set-thumbnail>|<set-thumbnail>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]

        final fun component1(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputMedia.Document.component1|component1(){}[0]
        final fun component2(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputMedia.Document.component2|component2(){}[0]
        final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Document.component3|component3(){}[0]
        final fun component4(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.media/InputMedia.Document.component4|component4(){}[0]
        final fun component5(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.media/InputMedia.Document.component5|component5(){}[0]
        final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Document.component6|component6(){}[0]
        final fun copy(eu.vendeli.tgbot.types.internal/ImplicitFile = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.media/InputMedia.Document // eu.vendeli.tgbot.types.media/InputMedia.Document.copy|copy(eu.vendeli.tgbot.types.internal.ImplicitFile;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/InputMedia.Document.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/InputMedia.Document.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/InputMedia.Document.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/InputMedia.Document> { // eu.vendeli.tgbot.types.media/InputMedia.Document.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.media/InputMedia.Document.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/InputMedia.Document.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/InputMedia.Document.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/InputMedia.Document // eu.vendeli.tgbot.types.media/InputMedia.Document.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/InputMedia.Document) // eu.vendeli.tgbot.types.media/InputMedia.Document.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.InputMedia.Document){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.media/InputMedia.Document.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.media/InputMedia.Document.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/InputMedia.Document> // eu.vendeli.tgbot.types.media/InputMedia.Document.Companion.serializer|serializer(){}[0]
        }
    }

    final class Photo : eu.vendeli.tgbot.types.media/InputMedia { // eu.vendeli.tgbot.types.media/InputMedia.Photo|null[0]
        constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile, kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.media/InputMedia.Photo.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Boolean?;kotlin.Boolean?){}[0]

        final val caption // eu.vendeli.tgbot.types.media/InputMedia.Photo.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Photo.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.media/InputMedia.Photo.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.media/InputMedia.Photo.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val hasSpoiler // eu.vendeli.tgbot.types.media/InputMedia.Photo.hasSpoiler|{}hasSpoiler[0]
            final fun <get-hasSpoiler>(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Photo.hasSpoiler.<get-hasSpoiler>|<get-hasSpoiler>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.media/InputMedia.Photo.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.media/InputMedia.Photo.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val showCaptionAboveMedia // eu.vendeli.tgbot.types.media/InputMedia.Photo.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
            final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Photo.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]

        final var media // eu.vendeli.tgbot.types.media/InputMedia.Photo.media|{}media[0]
            final fun <get-media>(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputMedia.Photo.media.<get-media>|<get-media>(){}[0]
            final fun <set-media>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.types.media/InputMedia.Photo.media.<set-media>|<set-media>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]

        final fun component1(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputMedia.Photo.component1|component1(){}[0]
        final fun component2(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Photo.component2|component2(){}[0]
        final fun component3(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.media/InputMedia.Photo.component3|component3(){}[0]
        final fun component4(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.media/InputMedia.Photo.component4|component4(){}[0]
        final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Photo.component5|component5(){}[0]
        final fun component6(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Photo.component6|component6(){}[0]
        final fun copy(eu.vendeli.tgbot.types.internal/ImplicitFile = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.media/InputMedia.Photo // eu.vendeli.tgbot.types.media/InputMedia.Photo.copy|copy(eu.vendeli.tgbot.types.internal.ImplicitFile;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Boolean?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/InputMedia.Photo.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/InputMedia.Photo.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/InputMedia.Photo.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/InputMedia.Photo> { // eu.vendeli.tgbot.types.media/InputMedia.Photo.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.media/InputMedia.Photo.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/InputMedia.Photo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/InputMedia.Photo.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/InputMedia.Photo // eu.vendeli.tgbot.types.media/InputMedia.Photo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/InputMedia.Photo) // eu.vendeli.tgbot.types.media/InputMedia.Photo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.InputMedia.Photo){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.media/InputMedia.Photo.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.media/InputMedia.Photo.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/InputMedia.Photo> // eu.vendeli.tgbot.types.media/InputMedia.Photo.Companion.serializer|serializer(){}[0]
        }
    }

    final class Video : eu.vendeli.tgbot.types.media/InputMedia { // eu.vendeli.tgbot.types.media/InputMedia.Video|null[0]
        constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile, eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin.time/Duration? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.media/InputMedia.Video.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile;eu.vendeli.tgbot.types.internal.ImplicitFile?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.time.Duration?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]

        final val caption // eu.vendeli.tgbot.types.media/InputMedia.Video.caption|{}caption[0]
            final fun <get-caption>(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Video.caption.<get-caption>|<get-caption>(){}[0]
        final val captionEntities // eu.vendeli.tgbot.types.media/InputMedia.Video.captionEntities|{}captionEntities[0]
            final fun <get-captionEntities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.media/InputMedia.Video.captionEntities.<get-captionEntities>|<get-captionEntities>(){}[0]
        final val cover // eu.vendeli.tgbot.types.media/InputMedia.Video.cover|{}cover[0]
            final fun <get-cover>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputMedia.Video.cover.<get-cover>|<get-cover>(){}[0]
        final val duration // eu.vendeli.tgbot.types.media/InputMedia.Video.duration|{}duration[0]
            final fun <get-duration>(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Video.duration.<get-duration>|<get-duration>(){}[0]
        final val hasSpoiler // eu.vendeli.tgbot.types.media/InputMedia.Video.hasSpoiler|{}hasSpoiler[0]
            final fun <get-hasSpoiler>(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Video.hasSpoiler.<get-hasSpoiler>|<get-hasSpoiler>(){}[0]
        final val height // eu.vendeli.tgbot.types.media/InputMedia.Video.height|{}height[0]
            final fun <get-height>(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Video.height.<get-height>|<get-height>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types.media/InputMedia.Video.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.media/InputMedia.Video.parseMode.<get-parseMode>|<get-parseMode>(){}[0]
        final val showCaptionAboveMedia // eu.vendeli.tgbot.types.media/InputMedia.Video.showCaptionAboveMedia|{}showCaptionAboveMedia[0]
            final fun <get-showCaptionAboveMedia>(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Video.showCaptionAboveMedia.<get-showCaptionAboveMedia>|<get-showCaptionAboveMedia>(){}[0]
        final val startTimestamp // eu.vendeli.tgbot.types.media/InputMedia.Video.startTimestamp|{}startTimestamp[0]
            final fun <get-startTimestamp>(): kotlin.time/Duration? // eu.vendeli.tgbot.types.media/InputMedia.Video.startTimestamp.<get-startTimestamp>|<get-startTimestamp>(){}[0]
        final val supportsStreaming // eu.vendeli.tgbot.types.media/InputMedia.Video.supportsStreaming|{}supportsStreaming[0]
            final fun <get-supportsStreaming>(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Video.supportsStreaming.<get-supportsStreaming>|<get-supportsStreaming>(){}[0]
        final val width // eu.vendeli.tgbot.types.media/InputMedia.Video.width|{}width[0]
            final fun <get-width>(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Video.width.<get-width>|<get-width>(){}[0]

        final var media // eu.vendeli.tgbot.types.media/InputMedia.Video.media|{}media[0]
            final fun <get-media>(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputMedia.Video.media.<get-media>|<get-media>(){}[0]
            final fun <set-media>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.types.media/InputMedia.Video.media.<set-media>|<set-media>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
        final var thumbnail // eu.vendeli.tgbot.types.media/InputMedia.Video.thumbnail|{}thumbnail[0]
            final fun <get-thumbnail>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputMedia.Video.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
            final fun <set-thumbnail>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.types.media/InputMedia.Video.thumbnail.<set-thumbnail>|<set-thumbnail>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]

        final fun component1(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputMedia.Video.component1|component1(){}[0]
        final fun component10(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Video.component10|component10(){}[0]
        final fun component11(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Video.component11|component11(){}[0]
        final fun component12(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Video.component12|component12(){}[0]
        final fun component13(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputMedia.Video.component13|component13(){}[0]
        final fun component2(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputMedia.Video.component2|component2(){}[0]
        final fun component3(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputMedia.Video.component3|component3(){}[0]
        final fun component4(): kotlin.time/Duration? // eu.vendeli.tgbot.types.media/InputMedia.Video.component4|component4(){}[0]
        final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.media/InputMedia.Video.component5|component5(){}[0]
        final fun component6(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types.media/InputMedia.Video.component6|component6(){}[0]
        final fun component7(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types.media/InputMedia.Video.component7|component7(){}[0]
        final fun component8(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Video.component8|component8(){}[0]
        final fun component9(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputMedia.Video.component9|component9(){}[0]
        final fun copy(eu.vendeli.tgbot.types.internal/ImplicitFile = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin.time/Duration? = ..., kotlin/String? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.media/InputMedia.Video // eu.vendeli.tgbot.types.media/InputMedia.Video.copy|copy(eu.vendeli.tgbot.types.internal.ImplicitFile;eu.vendeli.tgbot.types.internal.ImplicitFile?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.time.Duration?;kotlin.String?;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/InputMedia.Video.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/InputMedia.Video.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/InputMedia.Video.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/InputMedia.Video> { // eu.vendeli.tgbot.types.media/InputMedia.Video.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.media/InputMedia.Video.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/InputMedia.Video.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/InputMedia.Video.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/InputMedia.Video // eu.vendeli.tgbot.types.media/InputMedia.Video.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/InputMedia.Video) // eu.vendeli.tgbot.types.media/InputMedia.Video.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.InputMedia.Video){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.media/InputMedia.Video.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.media/InputMedia.Video.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/InputMedia.Video> // eu.vendeli.tgbot.types.media/InputMedia.Video.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.media/InputMedia.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/InputMedia> // eu.vendeli.tgbot.types.media/InputMedia.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.media/InputMedia.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.media/InputPaidMedia : eu.vendeli.tgbot.interfaces.helper/ImplicitMediaData { // eu.vendeli.tgbot.types.media/InputPaidMedia|null[0]
    final val type // eu.vendeli.tgbot.types.media/InputPaidMedia.type|{}type[0]
        final fun <get-type>(): kotlin/String // eu.vendeli.tgbot.types.media/InputPaidMedia.type.<get-type>|<get-type>(){}[0]

    final class Photo : eu.vendeli.tgbot.types.media/InputPaidMedia { // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo|null[0]
        constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
        constructor <init>(eu.vendeli.tgbot.types.internal/InputFile) // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.<init>|<init>(eu.vendeli.tgbot.types.internal.InputFile){}[0]
        constructor <init>(kotlin/String) // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.<init>|<init>(kotlin.String){}[0]

        final var media // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.media|{}media[0]
            final fun <get-media>(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.media.<get-media>|<get-media>(){}[0]
            final fun <set-media>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.media.<set-media>|<set-media>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]

        final fun component1(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.component1|component1(){}[0]
        final fun copy(eu.vendeli.tgbot.types.internal/ImplicitFile = ...): eu.vendeli.tgbot.types.media/InputPaidMedia.Photo // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.copy|copy(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/InputPaidMedia.Photo> { // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/InputPaidMedia.Photo // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/InputPaidMedia.Photo) // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.InputPaidMedia.Photo){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/InputPaidMedia.Photo> // eu.vendeli.tgbot.types.media/InputPaidMedia.Photo.Companion.serializer|serializer(){}[0]
        }
    }

    final class Video : eu.vendeli.tgbot.types.media/InputPaidMedia { // eu.vendeli.tgbot.types.media/InputPaidMedia.Video|null[0]
        constructor <init>(eu.vendeli.tgbot.types.internal/ImplicitFile, eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin.time/Duration? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.<init>|<init>(eu.vendeli.tgbot.types.internal.ImplicitFile;eu.vendeli.tgbot.types.internal.ImplicitFile?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.time.Duration?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?){}[0]

        final val cover // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.cover|{}cover[0]
            final fun <get-cover>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.cover.<get-cover>|<get-cover>(){}[0]
        final val duration // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.duration|{}duration[0]
            final fun <get-duration>(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.duration.<get-duration>|<get-duration>(){}[0]
        final val height // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.height|{}height[0]
            final fun <get-height>(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.height.<get-height>|<get-height>(){}[0]
        final val startTimestamp // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.startTimestamp|{}startTimestamp[0]
            final fun <get-startTimestamp>(): kotlin.time/Duration? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.startTimestamp.<get-startTimestamp>|<get-startTimestamp>(){}[0]
        final val supportsStreaming // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.supportsStreaming|{}supportsStreaming[0]
            final fun <get-supportsStreaming>(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.supportsStreaming.<get-supportsStreaming>|<get-supportsStreaming>(){}[0]
        final val width // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.width|{}width[0]
            final fun <get-width>(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.width.<get-width>|<get-width>(){}[0]

        final var media // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.media|{}media[0]
            final fun <get-media>(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.media.<get-media>|<get-media>(){}[0]
            final fun <set-media>(eu.vendeli.tgbot.types.internal/ImplicitFile) // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.media.<set-media>|<set-media>(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
        final var thumbnail // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.thumbnail|{}thumbnail[0]
            final fun <get-thumbnail>(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.thumbnail.<get-thumbnail>|<get-thumbnail>(){}[0]
            final fun <set-thumbnail>(eu.vendeli.tgbot.types.internal/ImplicitFile?) // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.thumbnail.<set-thumbnail>|<set-thumbnail>(eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]

        final fun component1(): eu.vendeli.tgbot.types.internal/ImplicitFile // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.component1|component1(){}[0]
        final fun component2(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.component2|component2(){}[0]
        final fun component3(): eu.vendeli.tgbot.types.internal/ImplicitFile? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.component3|component3(){}[0]
        final fun component4(): kotlin.time/Duration? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.component4|component4(){}[0]
        final fun component5(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.component5|component5(){}[0]
        final fun component6(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.component6|component6(){}[0]
        final fun component7(): kotlin/Int? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.component7|component7(){}[0]
        final fun component8(): kotlin/Boolean? // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.component8|component8(){}[0]
        final fun copy(eu.vendeli.tgbot.types.internal/ImplicitFile = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., eu.vendeli.tgbot.types.internal/ImplicitFile? = ..., kotlin.time/Duration? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types.media/InputPaidMedia.Video // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.copy|copy(eu.vendeli.tgbot.types.internal.ImplicitFile;eu.vendeli.tgbot.types.internal.ImplicitFile?;eu.vendeli.tgbot.types.internal.ImplicitFile?;kotlin.time.Duration?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/InputPaidMedia.Video> { // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/InputPaidMedia.Video // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/InputPaidMedia.Video) // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.InputPaidMedia.Video){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/InputPaidMedia.Video> // eu.vendeli.tgbot.types.media/InputPaidMedia.Video.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.media/InputPaidMedia.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/InputPaidMedia> // eu.vendeli.tgbot.types.media/InputPaidMedia.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.media/InputPaidMedia.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.media/PaidMedia { // eu.vendeli.tgbot.types.media/PaidMedia|null[0]
    final val type // eu.vendeli.tgbot.types.media/PaidMedia.type|{}type[0]
        final fun <get-type>(): kotlin/String // eu.vendeli.tgbot.types.media/PaidMedia.type.<get-type>|<get-type>(){}[0]

    final class Photo : eu.vendeli.tgbot.types.media/PaidMedia { // eu.vendeli.tgbot.types.media/PaidMedia.Photo|null[0]
        constructor <init>(kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize>) // eu.vendeli.tgbot.types.media/PaidMedia.Photo.<init>|<init>(kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>){}[0]

        final val photo // eu.vendeli.tgbot.types.media/PaidMedia.Photo.photo|{}photo[0]
            final fun <get-photo>(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize> // eu.vendeli.tgbot.types.media/PaidMedia.Photo.photo.<get-photo>|<get-photo>(){}[0]

        final fun component1(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize> // eu.vendeli.tgbot.types.media/PaidMedia.Photo.component1|component1(){}[0]
        final fun copy(kotlin.collections/List<eu.vendeli.tgbot.types.media/PhotoSize> = ...): eu.vendeli.tgbot.types.media/PaidMedia.Photo // eu.vendeli.tgbot.types.media/PaidMedia.Photo.copy|copy(kotlin.collections.List<eu.vendeli.tgbot.types.media.PhotoSize>){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/PaidMedia.Photo.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/PaidMedia.Photo.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/PaidMedia.Photo.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/PaidMedia.Photo> { // eu.vendeli.tgbot.types.media/PaidMedia.Photo.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.media/PaidMedia.Photo.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/PaidMedia.Photo.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/PaidMedia.Photo.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/PaidMedia.Photo // eu.vendeli.tgbot.types.media/PaidMedia.Photo.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/PaidMedia.Photo) // eu.vendeli.tgbot.types.media/PaidMedia.Photo.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.PaidMedia.Photo){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.media/PaidMedia.Photo.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.media/PaidMedia.Photo.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/PaidMedia.Photo> // eu.vendeli.tgbot.types.media/PaidMedia.Photo.Companion.serializer|serializer(){}[0]
        }
    }

    final class Preview : eu.vendeli.tgbot.types.media/PaidMedia { // eu.vendeli.tgbot.types.media/PaidMedia.Preview|null[0]
        constructor <init>(kotlin/Int?, kotlin/Int?, kotlin/Int?) // eu.vendeli.tgbot.types.media/PaidMedia.Preview.<init>|<init>(kotlin.Int?;kotlin.Int?;kotlin.Int?){}[0]

        final val duration // eu.vendeli.tgbot.types.media/PaidMedia.Preview.duration|{}duration[0]
            final fun <get-duration>(): kotlin/Int? // eu.vendeli.tgbot.types.media/PaidMedia.Preview.duration.<get-duration>|<get-duration>(){}[0]
        final val height // eu.vendeli.tgbot.types.media/PaidMedia.Preview.height|{}height[0]
            final fun <get-height>(): kotlin/Int? // eu.vendeli.tgbot.types.media/PaidMedia.Preview.height.<get-height>|<get-height>(){}[0]
        final val width // eu.vendeli.tgbot.types.media/PaidMedia.Preview.width|{}width[0]
            final fun <get-width>(): kotlin/Int? // eu.vendeli.tgbot.types.media/PaidMedia.Preview.width.<get-width>|<get-width>(){}[0]

        final fun component1(): kotlin/Int? // eu.vendeli.tgbot.types.media/PaidMedia.Preview.component1|component1(){}[0]
        final fun component2(): kotlin/Int? // eu.vendeli.tgbot.types.media/PaidMedia.Preview.component2|component2(){}[0]
        final fun component3(): kotlin/Int? // eu.vendeli.tgbot.types.media/PaidMedia.Preview.component3|component3(){}[0]
        final fun copy(kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types.media/PaidMedia.Preview // eu.vendeli.tgbot.types.media/PaidMedia.Preview.copy|copy(kotlin.Int?;kotlin.Int?;kotlin.Int?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/PaidMedia.Preview.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/PaidMedia.Preview.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/PaidMedia.Preview.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/PaidMedia.Preview> { // eu.vendeli.tgbot.types.media/PaidMedia.Preview.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.media/PaidMedia.Preview.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/PaidMedia.Preview.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/PaidMedia.Preview.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/PaidMedia.Preview // eu.vendeli.tgbot.types.media/PaidMedia.Preview.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/PaidMedia.Preview) // eu.vendeli.tgbot.types.media/PaidMedia.Preview.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.PaidMedia.Preview){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.media/PaidMedia.Preview.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/PaidMedia.Preview> // eu.vendeli.tgbot.types.media/PaidMedia.Preview.Companion.serializer|serializer(){}[0]
        }
    }

    final class Video : eu.vendeli.tgbot.types.media/PaidMedia { // eu.vendeli.tgbot.types.media/PaidMedia.Video|null[0]
        constructor <init>(eu.vendeli.tgbot.types.media/Video) // eu.vendeli.tgbot.types.media/PaidMedia.Video.<init>|<init>(eu.vendeli.tgbot.types.media.Video){}[0]

        final val video // eu.vendeli.tgbot.types.media/PaidMedia.Video.video|{}video[0]
            final fun <get-video>(): eu.vendeli.tgbot.types.media/Video // eu.vendeli.tgbot.types.media/PaidMedia.Video.video.<get-video>|<get-video>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.media/Video // eu.vendeli.tgbot.types.media/PaidMedia.Video.component1|component1(){}[0]
        final fun copy(eu.vendeli.tgbot.types.media/Video = ...): eu.vendeli.tgbot.types.media/PaidMedia.Video // eu.vendeli.tgbot.types.media/PaidMedia.Video.copy|copy(eu.vendeli.tgbot.types.media.Video){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/PaidMedia.Video.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/PaidMedia.Video.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/PaidMedia.Video.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.media/PaidMedia.Video> { // eu.vendeli.tgbot.types.media/PaidMedia.Video.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.media/PaidMedia.Video.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.media/PaidMedia.Video.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.media/PaidMedia.Video.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.media/PaidMedia.Video // eu.vendeli.tgbot.types.media/PaidMedia.Video.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.media/PaidMedia.Video) // eu.vendeli.tgbot.types.media/PaidMedia.Video.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.media.PaidMedia.Video){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.media/PaidMedia.Video.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/PaidMedia.Video> // eu.vendeli.tgbot.types.media/PaidMedia.Video.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.media/PaidMedia.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/PaidMedia> // eu.vendeli.tgbot.types.media/PaidMedia.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.media/PaidMedia.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage { // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage|null[0]
    abstract val chat // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.chat|{}chat[0]
        abstract fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.chat.<get-chat>|<get-chat>(){}[0]
    abstract val date // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.date|{}date[0]
        abstract fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.date.<get-date>|<get-date>(){}[0]
    abstract val messageId // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.messageId|{}messageId[0]
        abstract fun <get-messageId>(): kotlin/Long // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.messageId.<get-messageId>|<get-messageId>(){}[0]
    final val isAccessible // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.isAccessible|{}isAccessible[0]
        final fun <get-isAccessible>(): kotlin/Boolean // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.isAccessible.<get-isAccessible>|<get-isAccessible>(){}[0]

    final inline fun accessibleOrNull(): eu.vendeli.tgbot.types.msg/Message? // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.accessibleOrNull|accessibleOrNull(){}[0]

    final class InaccessibleMessage : eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage { // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage|null[0]
        constructor <init>(eu.vendeli.tgbot.types.chat/Chat, kotlin/Long, kotlinx.datetime/Instant) // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.<init>|<init>(eu.vendeli.tgbot.types.chat.Chat;kotlin.Long;kotlinx.datetime.Instant){}[0]

        final val chat // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.chat|{}chat[0]
            final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.chat.<get-chat>|<get-chat>(){}[0]
        final val date // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.date|{}date[0]
            final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.date.<get-date>|<get-date>(){}[0]
        final val messageId // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.messageId|{}messageId[0]
            final fun <get-messageId>(): kotlin/Long // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.messageId.<get-messageId>|<get-messageId>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.component1|component1(){}[0]
        final fun component2(): kotlin/Long // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.component2|component2(){}[0]
        final fun component3(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.component3|component3(){}[0]
        final fun copy(eu.vendeli.tgbot.types.chat/Chat = ..., kotlin/Long = ..., kotlinx.datetime/Instant = ...): eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.copy|copy(eu.vendeli.tgbot.types.chat.Chat;kotlin.Long;kotlinx.datetime.Instant){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage> { // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage) // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.msg.MaybeInaccessibleMessage.InaccessibleMessage){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage> // eu.vendeli.tgbot.types.msg/MaybeInaccessibleMessage.InaccessibleMessage.Companion.serializer|serializer(){}[0]
        }
    }
}

sealed class eu.vendeli.tgbot.types.msg/MessageOrigin { // eu.vendeli.tgbot.types.msg/MessageOrigin|null[0]
    abstract val date // eu.vendeli.tgbot.types.msg/MessageOrigin.date|{}date[0]
        abstract fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageOrigin.date.<get-date>|<get-date>(){}[0]
    final val type // eu.vendeli.tgbot.types.msg/MessageOrigin.type|{}type[0]
        final fun <get-type>(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageOrigin.type.<get-type>|<get-type>(){}[0]
    open val from // eu.vendeli.tgbot.types.msg/MessageOrigin.from|{}from[0]
        open fun <get-from>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.msg/MessageOrigin.from.<get-from>|<get-from>(){}[0]
    open val fromChat // eu.vendeli.tgbot.types.msg/MessageOrigin.fromChat|{}fromChat[0]
        open fun <get-fromChat>(): eu.vendeli.tgbot.types.chat/Chat? // eu.vendeli.tgbot.types.msg/MessageOrigin.fromChat.<get-fromChat>|<get-fromChat>(){}[0]
    open val fromMessageId // eu.vendeli.tgbot.types.msg/MessageOrigin.fromMessageId|{}fromMessageId[0]
        open fun <get-fromMessageId>(): kotlin/Long? // eu.vendeli.tgbot.types.msg/MessageOrigin.fromMessageId.<get-fromMessageId>|<get-fromMessageId>(){}[0]
    open val senderName // eu.vendeli.tgbot.types.msg/MessageOrigin.senderName|{}senderName[0]
        open fun <get-senderName>(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageOrigin.senderName.<get-senderName>|<get-senderName>(){}[0]
    open val signature // eu.vendeli.tgbot.types.msg/MessageOrigin.signature|{}signature[0]
        open fun <get-signature>(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageOrigin.signature.<get-signature>|<get-signature>(){}[0]

    final inline fun asChannel(): eu.vendeli.tgbot.types.msg/MessageOrigin.Channel? // eu.vendeli.tgbot.types.msg/MessageOrigin.asChannel|asChannel(){}[0]
    final inline fun asChatOrigin(): eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin? // eu.vendeli.tgbot.types.msg/MessageOrigin.asChatOrigin|asChatOrigin(){}[0]
    final inline fun asHiddenUser(): eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser? // eu.vendeli.tgbot.types.msg/MessageOrigin.asHiddenUser|asHiddenUser(){}[0]
    final inline fun asUserOrigin(): eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin? // eu.vendeli.tgbot.types.msg/MessageOrigin.asUserOrigin|asUserOrigin(){}[0]

    final class Channel : eu.vendeli.tgbot.types.msg/MessageOrigin { // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel|null[0]
        constructor <init>(kotlinx.datetime/Instant, eu.vendeli.tgbot.types.chat/Chat, kotlin/Long, kotlin/String? = ...) // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.<init>|<init>(kotlinx.datetime.Instant;eu.vendeli.tgbot.types.chat.Chat;kotlin.Long;kotlin.String?){}[0]

        final val authorSignature // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.authorSignature|{}authorSignature[0]
            final fun <get-authorSignature>(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.authorSignature.<get-authorSignature>|<get-authorSignature>(){}[0]
        final val chat // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.chat|{}chat[0]
            final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.chat.<get-chat>|<get-chat>(){}[0]
        final val date // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.date|{}date[0]
            final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.date.<get-date>|<get-date>(){}[0]
        final val fromChat // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.fromChat|{}fromChat[0]
            final fun <get-fromChat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.fromChat.<get-fromChat>|<get-fromChat>(){}[0]
        final val fromMessageId // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.fromMessageId|{}fromMessageId[0]
            final fun <get-fromMessageId>(): kotlin/Long // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.fromMessageId.<get-fromMessageId>|<get-fromMessageId>(){}[0]
        final val messageId // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.messageId|{}messageId[0]
            final fun <get-messageId>(): kotlin/Long // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.messageId.<get-messageId>|<get-messageId>(){}[0]
        final val signature // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.signature|{}signature[0]
            final fun <get-signature>(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.signature.<get-signature>|<get-signature>(){}[0]

        final fun component1(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.component1|component1(){}[0]
        final fun component2(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.component2|component2(){}[0]
        final fun component3(): kotlin/Long // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.component3|component3(){}[0]
        final fun component4(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.component4|component4(){}[0]
        final fun copy(kotlinx.datetime/Instant = ..., eu.vendeli.tgbot.types.chat/Chat = ..., kotlin/Long = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.msg/MessageOrigin.Channel // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.copy|copy(kotlinx.datetime.Instant;eu.vendeli.tgbot.types.chat.Chat;kotlin.Long;kotlin.String?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.msg/MessageOrigin.Channel> { // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.msg/MessageOrigin.Channel // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.msg/MessageOrigin.Channel) // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.msg.MessageOrigin.Channel){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/MessageOrigin.Channel> // eu.vendeli.tgbot.types.msg/MessageOrigin.Channel.Companion.serializer|serializer(){}[0]
        }
    }

    final class ChatOrigin : eu.vendeli.tgbot.types.msg/MessageOrigin { // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin|null[0]
        constructor <init>(kotlinx.datetime/Instant, eu.vendeli.tgbot.types.chat/Chat, kotlin/String? = ...) // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.<init>|<init>(kotlinx.datetime.Instant;eu.vendeli.tgbot.types.chat.Chat;kotlin.String?){}[0]

        final val authorSignature // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.authorSignature|{}authorSignature[0]
            final fun <get-authorSignature>(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.authorSignature.<get-authorSignature>|<get-authorSignature>(){}[0]
        final val date // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.date|{}date[0]
            final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.date.<get-date>|<get-date>(){}[0]
        final val fromChat // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.fromChat|{}fromChat[0]
            final fun <get-fromChat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.fromChat.<get-fromChat>|<get-fromChat>(){}[0]
        final val senderChat // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.senderChat|{}senderChat[0]
            final fun <get-senderChat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.senderChat.<get-senderChat>|<get-senderChat>(){}[0]
        final val signature // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.signature|{}signature[0]
            final fun <get-signature>(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.signature.<get-signature>|<get-signature>(){}[0]

        final fun component1(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.component1|component1(){}[0]
        final fun component2(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.component2|component2(){}[0]
        final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.component3|component3(){}[0]
        final fun copy(kotlinx.datetime/Instant = ..., eu.vendeli.tgbot.types.chat/Chat = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.copy|copy(kotlinx.datetime.Instant;eu.vendeli.tgbot.types.chat.Chat;kotlin.String?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin> { // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin) // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.msg.MessageOrigin.ChatOrigin){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin> // eu.vendeli.tgbot.types.msg/MessageOrigin.ChatOrigin.Companion.serializer|serializer(){}[0]
        }
    }

    final class HiddenUser : eu.vendeli.tgbot.types.msg/MessageOrigin { // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser|null[0]
        constructor <init>(kotlinx.datetime/Instant, kotlin/String) // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.<init>|<init>(kotlinx.datetime.Instant;kotlin.String){}[0]

        final val date // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.date|{}date[0]
            final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.date.<get-date>|<get-date>(){}[0]
        final val senderName // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.senderName|{}senderName[0]
            final fun <get-senderName>(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.senderName.<get-senderName>|<get-senderName>(){}[0]
        final val senderUserName // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.senderUserName|{}senderUserName[0]
            final fun <get-senderUserName>(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.senderUserName.<get-senderUserName>|<get-senderUserName>(){}[0]

        final fun component1(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.component2|component2(){}[0]
        final fun copy(kotlinx.datetime/Instant = ..., kotlin/String = ...): eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.copy|copy(kotlinx.datetime.Instant;kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser> { // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser) // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.msg.MessageOrigin.HiddenUser){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser> // eu.vendeli.tgbot.types.msg/MessageOrigin.HiddenUser.Companion.serializer|serializer(){}[0]
        }
    }

    final class UserOrigin : eu.vendeli.tgbot.types.msg/MessageOrigin { // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin|null[0]
        constructor <init>(kotlinx.datetime/Instant, eu.vendeli.tgbot.types/User) // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.<init>|<init>(kotlinx.datetime.Instant;eu.vendeli.tgbot.types.User){}[0]

        final val date // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.date|{}date[0]
            final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.date.<get-date>|<get-date>(){}[0]
        final val from // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.from|{}from[0]
            final fun <get-from>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.from.<get-from>|<get-from>(){}[0]
        final val senderUser // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.senderUser|{}senderUser[0]
            final fun <get-senderUser>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.senderUser.<get-senderUser>|<get-senderUser>(){}[0]

        final fun component1(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.component1|component1(){}[0]
        final fun component2(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.component2|component2(){}[0]
        final fun copy(kotlinx.datetime/Instant = ..., eu.vendeli.tgbot.types/User = ...): eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.copy|copy(kotlinx.datetime.Instant;eu.vendeli.tgbot.types.User){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin> { // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin) // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.msg.MessageOrigin.UserOrigin){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin> // eu.vendeli.tgbot.types.msg/MessageOrigin.UserOrigin.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.msg/MessageOrigin.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.msg/MessageOrigin> // eu.vendeli.tgbot.types.msg/MessageOrigin.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.msg/MessageOrigin.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.passport/PassportElementError { // eu.vendeli.tgbot.types.passport/PassportElementError|null[0]
    final val source // eu.vendeli.tgbot.types.passport/PassportElementError.source|{}source[0]
        final fun <get-source>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.source.<get-source>|<get-source>(){}[0]

    final class DataField : eu.vendeli.tgbot.types.passport/PassportElementError { // eu.vendeli.tgbot.types.passport/PassportElementError.DataField|null[0]
        constructor <init>(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType, kotlin/String, kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.<init>|<init>(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String;kotlin.String){}[0]

        final val dataHash // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.dataHash|{}dataHash[0]
            final fun <get-dataHash>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.dataHash.<get-dataHash>|<get-dataHash>(){}[0]
        final val fieldName // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.fieldName|{}fieldName[0]
            final fun <get-fieldName>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.fieldName.<get-fieldName>|<get-fieldName>(){}[0]
        final val message // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.message|{}message[0]
            final fun <get-message>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.message.<get-message>|<get-message>(){}[0]
        final val type // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.type|{}type[0]
            final fun <get-type>(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.type.<get-type>|<get-type>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.component3|component3(){}[0]
        final fun component4(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.component4|component4(){}[0]
        final fun copy(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.passport/PassportElementError.DataField // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.copy|copy(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String;kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.DataField> { // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/PassportElementError.DataField // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/PassportElementError.DataField) // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.PassportElementError.DataField){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.DataField> // eu.vendeli.tgbot.types.passport/PassportElementError.DataField.Companion.serializer|serializer(){}[0]
        }
    }

    final class FileElement : eu.vendeli.tgbot.types.passport/PassportElementError { // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement|null[0]
        constructor <init>(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType, kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.<init>|<init>(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String){}[0]

        final val fileHash // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.fileHash|{}fileHash[0]
            final fun <get-fileHash>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.fileHash.<get-fileHash>|<get-fileHash>(){}[0]
        final val message // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.message|{}message[0]
            final fun <get-message>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.message.<get-message>|<get-message>(){}[0]
        final val type // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.type|{}type[0]
            final fun <get-type>(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.type.<get-type>|<get-type>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.component3|component3(){}[0]
        final fun copy(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType = ..., kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.passport/PassportElementError.FileElement // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.copy|copy(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.FileElement> { // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/PassportElementError.FileElement // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/PassportElementError.FileElement) // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.PassportElementError.FileElement){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.FileElement> // eu.vendeli.tgbot.types.passport/PassportElementError.FileElement.Companion.serializer|serializer(){}[0]
        }
    }

    final class Files : eu.vendeli.tgbot.types.passport/PassportElementError { // eu.vendeli.tgbot.types.passport/PassportElementError.Files|null[0]
        constructor <init>(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType, kotlin.collections/List<kotlin/String>, kotlin/String) // eu.vendeli.tgbot.types.passport/PassportElementError.Files.<init>|<init>(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.collections.List<kotlin.String>;kotlin.String){}[0]

        final val fileHashes // eu.vendeli.tgbot.types.passport/PassportElementError.Files.fileHashes|{}fileHashes[0]
            final fun <get-fileHashes>(): kotlin.collections/List<kotlin/String> // eu.vendeli.tgbot.types.passport/PassportElementError.Files.fileHashes.<get-fileHashes>|<get-fileHashes>(){}[0]
        final val message // eu.vendeli.tgbot.types.passport/PassportElementError.Files.message|{}message[0]
            final fun <get-message>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Files.message.<get-message>|<get-message>(){}[0]
        final val type // eu.vendeli.tgbot.types.passport/PassportElementError.Files.type|{}type[0]
            final fun <get-type>(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.Files.type.<get-type>|<get-type>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.Files.component1|component1(){}[0]
        final fun component2(): kotlin.collections/List<kotlin/String> // eu.vendeli.tgbot.types.passport/PassportElementError.Files.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Files.component3|component3(){}[0]
        final fun copy(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType = ..., kotlin.collections/List<kotlin/String> = ..., kotlin/String = ...): eu.vendeli.tgbot.types.passport/PassportElementError.Files // eu.vendeli.tgbot.types.passport/PassportElementError.Files.copy|copy(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.collections.List<kotlin.String>;kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/PassportElementError.Files.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportElementError.Files.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Files.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.Files> { // eu.vendeli.tgbot.types.passport/PassportElementError.Files.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.passport/PassportElementError.Files.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/PassportElementError.Files.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/PassportElementError.Files.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/PassportElementError.Files // eu.vendeli.tgbot.types.passport/PassportElementError.Files.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/PassportElementError.Files) // eu.vendeli.tgbot.types.passport/PassportElementError.Files.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.PassportElementError.Files){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.passport/PassportElementError.Files.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.passport/PassportElementError.Files.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.Files> // eu.vendeli.tgbot.types.passport/PassportElementError.Files.Companion.serializer|serializer(){}[0]
        }
    }

    final class FrontSide : eu.vendeli.tgbot.types.passport/PassportElementError { // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide|null[0]
        constructor <init>(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType, kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.<init>|<init>(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String){}[0]

        final val fileHash // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.fileHash|{}fileHash[0]
            final fun <get-fileHash>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.fileHash.<get-fileHash>|<get-fileHash>(){}[0]
        final val message // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.message|{}message[0]
            final fun <get-message>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.message.<get-message>|<get-message>(){}[0]
        final val type // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.type|{}type[0]
            final fun <get-type>(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.type.<get-type>|<get-type>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.component3|component3(){}[0]
        final fun copy(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType = ..., kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.copy|copy(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide> { // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide) // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.PassportElementError.FrontSide){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide> // eu.vendeli.tgbot.types.passport/PassportElementError.FrontSide.Companion.serializer|serializer(){}[0]
        }
    }

    final class ReverseSide : eu.vendeli.tgbot.types.passport/PassportElementError { // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide|null[0]
        constructor <init>(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType, kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.<init>|<init>(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String){}[0]

        final val fileHash // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.fileHash|{}fileHash[0]
            final fun <get-fileHash>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.fileHash.<get-fileHash>|<get-fileHash>(){}[0]
        final val message // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.message|{}message[0]
            final fun <get-message>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.message.<get-message>|<get-message>(){}[0]
        final val type // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.type|{}type[0]
            final fun <get-type>(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.type.<get-type>|<get-type>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.component3|component3(){}[0]
        final fun copy(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType = ..., kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.copy|copy(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide> { // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide) // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.PassportElementError.ReverseSide){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide> // eu.vendeli.tgbot.types.passport/PassportElementError.ReverseSide.Companion.serializer|serializer(){}[0]
        }
    }

    final class Selfie : eu.vendeli.tgbot.types.passport/PassportElementError { // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie|null[0]
        constructor <init>(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType, kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.<init>|<init>(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String){}[0]

        final val fileHash // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.fileHash|{}fileHash[0]
            final fun <get-fileHash>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.fileHash.<get-fileHash>|<get-fileHash>(){}[0]
        final val message // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.message|{}message[0]
            final fun <get-message>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.message.<get-message>|<get-message>(){}[0]
        final val type // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.type|{}type[0]
            final fun <get-type>(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.type.<get-type>|<get-type>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.component3|component3(){}[0]
        final fun copy(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType = ..., kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.passport/PassportElementError.Selfie // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.copy|copy(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.Selfie> { // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/PassportElementError.Selfie // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/PassportElementError.Selfie) // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.PassportElementError.Selfie){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.Selfie> // eu.vendeli.tgbot.types.passport/PassportElementError.Selfie.Companion.serializer|serializer(){}[0]
        }
    }

    final class TranslationFile : eu.vendeli.tgbot.types.passport/PassportElementError { // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile|null[0]
        constructor <init>(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType, kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.<init>|<init>(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String){}[0]

        final val fileHash // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.fileHash|{}fileHash[0]
            final fun <get-fileHash>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.fileHash.<get-fileHash>|<get-fileHash>(){}[0]
        final val message // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.message|{}message[0]
            final fun <get-message>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.message.<get-message>|<get-message>(){}[0]
        final val type // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.type|{}type[0]
            final fun <get-type>(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.type.<get-type>|<get-type>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.component3|component3(){}[0]
        final fun copy(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType = ..., kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.copy|copy(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile> { // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile) // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.PassportElementError.TranslationFile){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile> // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFile.Companion.serializer|serializer(){}[0]
        }
    }

    final class TranslationFiles : eu.vendeli.tgbot.types.passport/PassportElementError { // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles|null[0]
        constructor <init>(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType, kotlin.collections/List<kotlin/String>, kotlin/String) // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.<init>|<init>(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.collections.List<kotlin.String>;kotlin.String){}[0]

        final val fileHashes // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.fileHashes|{}fileHashes[0]
            final fun <get-fileHashes>(): kotlin.collections/List<kotlin/String> // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.fileHashes.<get-fileHashes>|<get-fileHashes>(){}[0]
        final val message // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.message|{}message[0]
            final fun <get-message>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.message.<get-message>|<get-message>(){}[0]
        final val type // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.type|{}type[0]
            final fun <get-type>(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.type.<get-type>|<get-type>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.component1|component1(){}[0]
        final fun component2(): kotlin.collections/List<kotlin/String> // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.component3|component3(){}[0]
        final fun copy(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType = ..., kotlin.collections/List<kotlin/String> = ..., kotlin/String = ...): eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.copy|copy(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.collections.List<kotlin.String>;kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles> { // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles) // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.PassportElementError.TranslationFiles){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles> // eu.vendeli.tgbot.types.passport/PassportElementError.TranslationFiles.Companion.serializer|serializer(){}[0]
        }
    }

    final class Unspecified : eu.vendeli.tgbot.types.passport/PassportElementError { // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified|null[0]
        constructor <init>(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType, kotlin/String, kotlin/String) // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.<init>|<init>(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String){}[0]

        final val elementHash // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.elementHash|{}elementHash[0]
            final fun <get-elementHash>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.elementHash.<get-elementHash>|<get-elementHash>(){}[0]
        final val message // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.message|{}message[0]
            final fun <get-message>(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.message.<get-message>|<get-message>(){}[0]
        final val type // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.type|{}type[0]
            final fun <get-type>(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.type.<get-type>|<get-type>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.passport/EncryptedPassportElementType // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.component3|component3(){}[0]
        final fun copy(eu.vendeli.tgbot.types.passport/EncryptedPassportElementType = ..., kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.copy|copy(eu.vendeli.tgbot.types.passport.EncryptedPassportElementType;kotlin.String;kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified> { // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified) // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.passport.PassportElementError.Unspecified){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified> // eu.vendeli.tgbot.types.passport/PassportElementError.Unspecified.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.passport/PassportElementError.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.passport/PassportElementError> // eu.vendeli.tgbot.types.passport/PassportElementError.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.passport/PassportElementError.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.stars/RevenueWithdrawalState { // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState|null[0]
    final val type // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.type|{}type[0]
        final fun <get-type>(): kotlin/String // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.type.<get-type>|<get-type>(){}[0]

    final class Succeeded : eu.vendeli.tgbot.types.stars/RevenueWithdrawalState { // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded|null[0]
        constructor <init>(kotlinx.datetime/Instant, kotlin/String) // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.<init>|<init>(kotlinx.datetime.Instant;kotlin.String){}[0]

        final val date // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.date|{}date[0]
            final fun <get-date>(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.date.<get-date>|<get-date>(){}[0]
        final val url // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.url|{}url[0]
            final fun <get-url>(): kotlin/String // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.url.<get-url>|<get-url>(){}[0]

        final fun component1(): kotlinx.datetime/Instant // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.component2|component2(){}[0]
        final fun copy(kotlinx.datetime/Instant = ..., kotlin/String = ...): eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.copy|copy(kotlinx.datetime.Instant;kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded> { // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded) // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.stars.RevenueWithdrawalState.Succeeded){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded> // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Succeeded.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/RevenueWithdrawalState> // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }

    final object Failed : eu.vendeli.tgbot.types.stars/RevenueWithdrawalState, kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Failed|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Failed.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Failed.hashCode|hashCode(){}[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Failed> // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Failed.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Failed.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Failed.toString|toString(){}[0]
    }

    final object Pending : eu.vendeli.tgbot.types.stars/RevenueWithdrawalState, kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Pending|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Pending.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Pending.hashCode|hashCode(){}[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Pending> // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Pending.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Pending.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/RevenueWithdrawalState.Pending.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.tgbot.types.stars/TransactionPartner { // eu.vendeli.tgbot.types.stars/TransactionPartner|null[0]
    final val type // eu.vendeli.tgbot.types.stars/TransactionPartner.type|{}type[0]
        final fun <get-type>(): kotlin/String // eu.vendeli.tgbot.types.stars/TransactionPartner.type.<get-type>|<get-type>(){}[0]

    final class AffiliateProgram : eu.vendeli.tgbot.types.stars/TransactionPartner { // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram|null[0]
        constructor <init>(eu.vendeli.tgbot.types/User? = ..., kotlin/Int) // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.<init>|<init>(eu.vendeli.tgbot.types.User?;kotlin.Int){}[0]

        final val commissionPerMille // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.commissionPerMille|{}commissionPerMille[0]
            final fun <get-commissionPerMille>(): kotlin/Int // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.commissionPerMille.<get-commissionPerMille>|<get-commissionPerMille>(){}[0]
        final val sponsorUser // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.sponsorUser|{}sponsorUser[0]
            final fun <get-sponsorUser>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.sponsorUser.<get-sponsorUser>|<get-sponsorUser>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.component1|component1(){}[0]
        final fun component2(): kotlin/Int // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.component2|component2(){}[0]
        final fun copy(eu.vendeli.tgbot.types/User? = ..., kotlin/Int = ...): eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.copy|copy(eu.vendeli.tgbot.types.User?;kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram> { // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram) // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.stars.TransactionPartner.AffiliateProgram){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram> // eu.vendeli.tgbot.types.stars/TransactionPartner.AffiliateProgram.Companion.serializer|serializer(){}[0]
        }
    }

    final class ChatPartner : eu.vendeli.tgbot.types.stars/TransactionPartner { // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner|null[0]
        constructor <init>(eu.vendeli.tgbot.types.chat/Chat, eu.vendeli.tgbot.types.user/Gift? = ...) // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.<init>|<init>(eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.types.user.Gift?){}[0]

        final val chat // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.chat|{}chat[0]
            final fun <get-chat>(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.chat.<get-chat>|<get-chat>(){}[0]
        final val gift // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.gift|{}gift[0]
            final fun <get-gift>(): eu.vendeli.tgbot.types.user/Gift? // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.gift.<get-gift>|<get-gift>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.chat/Chat // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.component1|component1(){}[0]
        final fun component2(): eu.vendeli.tgbot.types.user/Gift? // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.component2|component2(){}[0]
        final fun copy(eu.vendeli.tgbot.types.chat/Chat = ..., eu.vendeli.tgbot.types.user/Gift? = ...): eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.copy|copy(eu.vendeli.tgbot.types.chat.Chat;eu.vendeli.tgbot.types.user.Gift?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner> { // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner) // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.stars.TransactionPartner.ChatPartner){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner> // eu.vendeli.tgbot.types.stars/TransactionPartner.ChatPartner.Companion.serializer|serializer(){}[0]
        }
    }

    final class Fragment : eu.vendeli.tgbot.types.stars/TransactionPartner { // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment|null[0]
        constructor <init>(eu.vendeli.tgbot.types.stars/RevenueWithdrawalState? = ...) // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.<init>|<init>(eu.vendeli.tgbot.types.stars.RevenueWithdrawalState?){}[0]

        final val withdrawalState // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.withdrawalState|{}withdrawalState[0]
            final fun <get-withdrawalState>(): eu.vendeli.tgbot.types.stars/RevenueWithdrawalState? // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.withdrawalState.<get-withdrawalState>|<get-withdrawalState>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.stars/RevenueWithdrawalState? // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.component1|component1(){}[0]
        final fun copy(eu.vendeli.tgbot.types.stars/RevenueWithdrawalState? = ...): eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.copy|copy(eu.vendeli.tgbot.types.stars.RevenueWithdrawalState?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment> { // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment) // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.stars.TransactionPartner.Fragment){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment> // eu.vendeli.tgbot.types.stars/TransactionPartner.Fragment.Companion.serializer|serializer(){}[0]
        }
    }

    final class TelegramApi : eu.vendeli.tgbot.types.stars/TransactionPartner { // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi|null[0]
        constructor <init>(kotlin/Int) // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.<init>|<init>(kotlin.Int){}[0]

        final val requestCount // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.requestCount|{}requestCount[0]
            final fun <get-requestCount>(): kotlin/Int // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.requestCount.<get-requestCount>|<get-requestCount>(){}[0]

        final fun component1(): kotlin/Int // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.component1|component1(){}[0]
        final fun copy(kotlin/Int = ...): eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.copy|copy(kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi> { // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi) // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.stars.TransactionPartner.TelegramApi){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi> // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramApi.Companion.serializer|serializer(){}[0]
        }
    }

    final class UserPartner : eu.vendeli.tgbot.types.stars/TransactionPartner { // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner|null[0]
        constructor <init>(eu.vendeli.tgbot.types/User, eu.vendeli.tgbot.types.stars/AffiliateInfo? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PaidMedia>? = ..., kotlin/String? = ..., kotlin.time/Duration? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.<init>|<init>(eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.stars.AffiliateInfo?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PaidMedia>?;kotlin.String?;kotlin.time.Duration?;kotlin.String?){}[0]

        final val affiliate // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.affiliate|{}affiliate[0]
            final fun <get-affiliate>(): eu.vendeli.tgbot.types.stars/AffiliateInfo? // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.affiliate.<get-affiliate>|<get-affiliate>(){}[0]
        final val gift // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.gift|{}gift[0]
            final fun <get-gift>(): kotlin/String? // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.gift.<get-gift>|<get-gift>(){}[0]
        final val invoicePayload // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.invoicePayload|{}invoicePayload[0]
            final fun <get-invoicePayload>(): kotlin/String? // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.invoicePayload.<get-invoicePayload>|<get-invoicePayload>(){}[0]
        final val paidMedia // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.paidMedia|{}paidMedia[0]
            final fun <get-paidMedia>(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PaidMedia>? // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.paidMedia.<get-paidMedia>|<get-paidMedia>(){}[0]
        final val paidMediaPayload // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.paidMediaPayload|{}paidMediaPayload[0]
            final fun <get-paidMediaPayload>(): kotlin/String? // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.paidMediaPayload.<get-paidMediaPayload>|<get-paidMediaPayload>(){}[0]
        final val subscriptionPeriod // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.subscriptionPeriod|{}subscriptionPeriod[0]
            final fun <get-subscriptionPeriod>(): kotlin.time/Duration? // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.subscriptionPeriod.<get-subscriptionPeriod>|<get-subscriptionPeriod>(){}[0]
        final val user // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.user|{}user[0]
            final fun <get-user>(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.user.<get-user>|<get-user>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.component1|component1(){}[0]
        final fun component2(): eu.vendeli.tgbot.types.stars/AffiliateInfo? // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.component2|component2(){}[0]
        final fun component3(): kotlin/String? // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.component3|component3(){}[0]
        final fun component4(): kotlin.collections/List<eu.vendeli.tgbot.types.media/PaidMedia>? // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.component4|component4(){}[0]
        final fun component5(): kotlin/String? // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.component5|component5(){}[0]
        final fun component6(): kotlin.time/Duration? // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.component6|component6(){}[0]
        final fun component7(): kotlin/String? // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.component7|component7(){}[0]
        final fun copy(eu.vendeli.tgbot.types/User = ..., eu.vendeli.tgbot.types.stars/AffiliateInfo? = ..., kotlin/String? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.media/PaidMedia>? = ..., kotlin/String? = ..., kotlin.time/Duration? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.copy|copy(eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.stars.AffiliateInfo?;kotlin.String?;kotlin.collections.List<eu.vendeli.tgbot.types.media.PaidMedia>?;kotlin.String?;kotlin.time.Duration?;kotlin.String?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner> { // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner) // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.stars.TransactionPartner.UserPartner){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner> // eu.vendeli.tgbot.types.stars/TransactionPartner.UserPartner.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.stars/TransactionPartner.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner> // eu.vendeli.tgbot.types.stars/TransactionPartner.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.stars/TransactionPartner.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }

    final object Other : eu.vendeli.tgbot.types.stars/TransactionPartner, kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.stars/TransactionPartner.Other|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/TransactionPartner.Other.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/TransactionPartner.Other.hashCode|hashCode(){}[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner.Other> // eu.vendeli.tgbot.types.stars/TransactionPartner.Other.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.stars/TransactionPartner.Other.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/TransactionPartner.Other.toString|toString(){}[0]
    }

    final object TelegramAds : eu.vendeli.tgbot.types.stars/TransactionPartner, kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramAds|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramAds.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramAds.hashCode|hashCode(){}[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramAds> // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramAds.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramAds.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types.stars/TransactionPartner.TelegramAds.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.tgbot.types/BackgroundFill { // eu.vendeli.tgbot.types/BackgroundFill|null[0]
    final val type // eu.vendeli.tgbot.types/BackgroundFill.type|{}type[0]
        final fun <get-type>(): kotlin/String // eu.vendeli.tgbot.types/BackgroundFill.type.<get-type>|<get-type>(){}[0]

    final class FreeformGradient : eu.vendeli.tgbot.types/BackgroundFill { // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient|null[0]
        constructor <init>(kotlin.collections/List<kotlin/Int>) // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.<init>|<init>(kotlin.collections.List<kotlin.Int>){}[0]

        final val colors // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.colors|{}colors[0]
            final fun <get-colors>(): kotlin.collections/List<kotlin/Int> // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.colors.<get-colors>|<get-colors>(){}[0]

        final fun component1(): kotlin.collections/List<kotlin/Int> // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.component1|component1(){}[0]
        final fun copy(kotlin.collections/List<kotlin/Int> = ...): eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.copy|copy(kotlin.collections.List<kotlin.Int>){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient> { // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient) // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.BackgroundFill.FreeformGradient){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient> // eu.vendeli.tgbot.types/BackgroundFill.FreeformGradient.Companion.serializer|serializer(){}[0]
        }
    }

    final class Gradient : eu.vendeli.tgbot.types/BackgroundFill { // eu.vendeli.tgbot.types/BackgroundFill.Gradient|null[0]
        constructor <init>(kotlin/Int, kotlin/Int, kotlin/Int) // eu.vendeli.tgbot.types/BackgroundFill.Gradient.<init>|<init>(kotlin.Int;kotlin.Int;kotlin.Int){}[0]

        final val bottomColor // eu.vendeli.tgbot.types/BackgroundFill.Gradient.bottomColor|{}bottomColor[0]
            final fun <get-bottomColor>(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundFill.Gradient.bottomColor.<get-bottomColor>|<get-bottomColor>(){}[0]
        final val rotationAngle // eu.vendeli.tgbot.types/BackgroundFill.Gradient.rotationAngle|{}rotationAngle[0]
            final fun <get-rotationAngle>(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundFill.Gradient.rotationAngle.<get-rotationAngle>|<get-rotationAngle>(){}[0]
        final val topColor // eu.vendeli.tgbot.types/BackgroundFill.Gradient.topColor|{}topColor[0]
            final fun <get-topColor>(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundFill.Gradient.topColor.<get-topColor>|<get-topColor>(){}[0]

        final fun component1(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundFill.Gradient.component1|component1(){}[0]
        final fun component2(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundFill.Gradient.component2|component2(){}[0]
        final fun component3(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundFill.Gradient.component3|component3(){}[0]
        final fun copy(kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ...): eu.vendeli.tgbot.types/BackgroundFill.Gradient // eu.vendeli.tgbot.types/BackgroundFill.Gradient.copy|copy(kotlin.Int;kotlin.Int;kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/BackgroundFill.Gradient.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundFill.Gradient.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/BackgroundFill.Gradient.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/BackgroundFill.Gradient> { // eu.vendeli.tgbot.types/BackgroundFill.Gradient.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/BackgroundFill.Gradient.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/BackgroundFill.Gradient.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/BackgroundFill.Gradient.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/BackgroundFill.Gradient // eu.vendeli.tgbot.types/BackgroundFill.Gradient.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/BackgroundFill.Gradient) // eu.vendeli.tgbot.types/BackgroundFill.Gradient.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.BackgroundFill.Gradient){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/BackgroundFill.Gradient.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/BackgroundFill.Gradient> // eu.vendeli.tgbot.types/BackgroundFill.Gradient.Companion.serializer|serializer(){}[0]
        }
    }

    final class Solid : eu.vendeli.tgbot.types/BackgroundFill { // eu.vendeli.tgbot.types/BackgroundFill.Solid|null[0]
        constructor <init>(kotlin/Int) // eu.vendeli.tgbot.types/BackgroundFill.Solid.<init>|<init>(kotlin.Int){}[0]

        final val color // eu.vendeli.tgbot.types/BackgroundFill.Solid.color|{}color[0]
            final fun <get-color>(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundFill.Solid.color.<get-color>|<get-color>(){}[0]

        final fun component1(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundFill.Solid.component1|component1(){}[0]
        final fun copy(kotlin/Int = ...): eu.vendeli.tgbot.types/BackgroundFill.Solid // eu.vendeli.tgbot.types/BackgroundFill.Solid.copy|copy(kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/BackgroundFill.Solid.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundFill.Solid.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/BackgroundFill.Solid.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/BackgroundFill.Solid> { // eu.vendeli.tgbot.types/BackgroundFill.Solid.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/BackgroundFill.Solid.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/BackgroundFill.Solid.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/BackgroundFill.Solid.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/BackgroundFill.Solid // eu.vendeli.tgbot.types/BackgroundFill.Solid.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/BackgroundFill.Solid) // eu.vendeli.tgbot.types/BackgroundFill.Solid.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.BackgroundFill.Solid){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/BackgroundFill.Solid.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/BackgroundFill.Solid> // eu.vendeli.tgbot.types/BackgroundFill.Solid.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types/BackgroundFill.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/BackgroundFill> // eu.vendeli.tgbot.types/BackgroundFill.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types/BackgroundFill.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types/BackgroundType { // eu.vendeli.tgbot.types/BackgroundType|null[0]
    final val type // eu.vendeli.tgbot.types/BackgroundType.type|{}type[0]
        final fun <get-type>(): kotlin/String // eu.vendeli.tgbot.types/BackgroundType.type.<get-type>|<get-type>(){}[0]

    final class ChatTheme : eu.vendeli.tgbot.types/BackgroundType { // eu.vendeli.tgbot.types/BackgroundType.ChatTheme|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.<init>|<init>(kotlin.String){}[0]

        final val themeName // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.themeName|{}themeName[0]
            final fun <get-themeName>(): kotlin/String // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.themeName.<get-themeName>|<get-themeName>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.component1|component1(){}[0]
        final fun copy(kotlin/String = ...): eu.vendeli.tgbot.types/BackgroundType.ChatTheme // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.copy|copy(kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/BackgroundType.ChatTheme> { // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/BackgroundType.ChatTheme // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/BackgroundType.ChatTheme) // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.BackgroundType.ChatTheme){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/BackgroundType.ChatTheme> // eu.vendeli.tgbot.types/BackgroundType.ChatTheme.Companion.serializer|serializer(){}[0]
        }
    }

    final class Fill : eu.vendeli.tgbot.types/BackgroundType { // eu.vendeli.tgbot.types/BackgroundType.Fill|null[0]
        constructor <init>(eu.vendeli.tgbot.types/BackgroundFill, kotlin/Int) // eu.vendeli.tgbot.types/BackgroundType.Fill.<init>|<init>(eu.vendeli.tgbot.types.BackgroundFill;kotlin.Int){}[0]

        final val darkThemeDimming // eu.vendeli.tgbot.types/BackgroundType.Fill.darkThemeDimming|{}darkThemeDimming[0]
            final fun <get-darkThemeDimming>(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundType.Fill.darkThemeDimming.<get-darkThemeDimming>|<get-darkThemeDimming>(){}[0]
        final val fill // eu.vendeli.tgbot.types/BackgroundType.Fill.fill|{}fill[0]
            final fun <get-fill>(): eu.vendeli.tgbot.types/BackgroundFill // eu.vendeli.tgbot.types/BackgroundType.Fill.fill.<get-fill>|<get-fill>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types/BackgroundFill // eu.vendeli.tgbot.types/BackgroundType.Fill.component1|component1(){}[0]
        final fun component2(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundType.Fill.component2|component2(){}[0]
        final fun copy(eu.vendeli.tgbot.types/BackgroundFill = ..., kotlin/Int = ...): eu.vendeli.tgbot.types/BackgroundType.Fill // eu.vendeli.tgbot.types/BackgroundType.Fill.copy|copy(eu.vendeli.tgbot.types.BackgroundFill;kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/BackgroundType.Fill.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundType.Fill.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/BackgroundType.Fill.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/BackgroundType.Fill> { // eu.vendeli.tgbot.types/BackgroundType.Fill.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/BackgroundType.Fill.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/BackgroundType.Fill.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/BackgroundType.Fill.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/BackgroundType.Fill // eu.vendeli.tgbot.types/BackgroundType.Fill.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/BackgroundType.Fill) // eu.vendeli.tgbot.types/BackgroundType.Fill.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.BackgroundType.Fill){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/BackgroundType.Fill.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types/BackgroundType.Fill.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/BackgroundType.Fill> // eu.vendeli.tgbot.types/BackgroundType.Fill.Companion.serializer|serializer(){}[0]
        }
    }

    final class Pattern : eu.vendeli.tgbot.types/BackgroundType { // eu.vendeli.tgbot.types/BackgroundType.Pattern|null[0]
        constructor <init>(eu.vendeli.tgbot.types.media/Document, eu.vendeli.tgbot.types/BackgroundFill, kotlin/Int, kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types/BackgroundType.Pattern.<init>|<init>(eu.vendeli.tgbot.types.media.Document;eu.vendeli.tgbot.types.BackgroundFill;kotlin.Int;kotlin.Boolean?;kotlin.Boolean?){}[0]

        final val document // eu.vendeli.tgbot.types/BackgroundType.Pattern.document|{}document[0]
            final fun <get-document>(): eu.vendeli.tgbot.types.media/Document // eu.vendeli.tgbot.types/BackgroundType.Pattern.document.<get-document>|<get-document>(){}[0]
        final val fill // eu.vendeli.tgbot.types/BackgroundType.Pattern.fill|{}fill[0]
            final fun <get-fill>(): eu.vendeli.tgbot.types/BackgroundFill // eu.vendeli.tgbot.types/BackgroundType.Pattern.fill.<get-fill>|<get-fill>(){}[0]
        final val intensity // eu.vendeli.tgbot.types/BackgroundType.Pattern.intensity|{}intensity[0]
            final fun <get-intensity>(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundType.Pattern.intensity.<get-intensity>|<get-intensity>(){}[0]
        final val isInverted // eu.vendeli.tgbot.types/BackgroundType.Pattern.isInverted|{}isInverted[0]
            final fun <get-isInverted>(): kotlin/Boolean? // eu.vendeli.tgbot.types/BackgroundType.Pattern.isInverted.<get-isInverted>|<get-isInverted>(){}[0]
        final val isMoving // eu.vendeli.tgbot.types/BackgroundType.Pattern.isMoving|{}isMoving[0]
            final fun <get-isMoving>(): kotlin/Boolean? // eu.vendeli.tgbot.types/BackgroundType.Pattern.isMoving.<get-isMoving>|<get-isMoving>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.media/Document // eu.vendeli.tgbot.types/BackgroundType.Pattern.component1|component1(){}[0]
        final fun component2(): eu.vendeli.tgbot.types/BackgroundFill // eu.vendeli.tgbot.types/BackgroundType.Pattern.component2|component2(){}[0]
        final fun component3(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundType.Pattern.component3|component3(){}[0]
        final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types/BackgroundType.Pattern.component4|component4(){}[0]
        final fun component5(): kotlin/Boolean? // eu.vendeli.tgbot.types/BackgroundType.Pattern.component5|component5(){}[0]
        final fun copy(eu.vendeli.tgbot.types.media/Document = ..., eu.vendeli.tgbot.types/BackgroundFill = ..., kotlin/Int = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types/BackgroundType.Pattern // eu.vendeli.tgbot.types/BackgroundType.Pattern.copy|copy(eu.vendeli.tgbot.types.media.Document;eu.vendeli.tgbot.types.BackgroundFill;kotlin.Int;kotlin.Boolean?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/BackgroundType.Pattern.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundType.Pattern.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/BackgroundType.Pattern.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/BackgroundType.Pattern> { // eu.vendeli.tgbot.types/BackgroundType.Pattern.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/BackgroundType.Pattern.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/BackgroundType.Pattern.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/BackgroundType.Pattern.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/BackgroundType.Pattern // eu.vendeli.tgbot.types/BackgroundType.Pattern.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/BackgroundType.Pattern) // eu.vendeli.tgbot.types/BackgroundType.Pattern.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.BackgroundType.Pattern){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/BackgroundType.Pattern.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types/BackgroundType.Pattern.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/BackgroundType.Pattern> // eu.vendeli.tgbot.types/BackgroundType.Pattern.Companion.serializer|serializer(){}[0]
        }
    }

    final class Wallpaper : eu.vendeli.tgbot.types/BackgroundType { // eu.vendeli.tgbot.types/BackgroundType.Wallpaper|null[0]
        constructor <init>(eu.vendeli.tgbot.types.media/Document, kotlin/Int, kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.<init>|<init>(eu.vendeli.tgbot.types.media.Document;kotlin.Int;kotlin.Boolean?;kotlin.Boolean?){}[0]

        final val darkThemeDimming // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.darkThemeDimming|{}darkThemeDimming[0]
            final fun <get-darkThemeDimming>(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.darkThemeDimming.<get-darkThemeDimming>|<get-darkThemeDimming>(){}[0]
        final val document // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.document|{}document[0]
            final fun <get-document>(): eu.vendeli.tgbot.types.media/Document // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.document.<get-document>|<get-document>(){}[0]
        final val isBlurred // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.isBlurred|{}isBlurred[0]
            final fun <get-isBlurred>(): kotlin/Boolean? // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.isBlurred.<get-isBlurred>|<get-isBlurred>(){}[0]
        final val isMoving // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.isMoving|{}isMoving[0]
            final fun <get-isMoving>(): kotlin/Boolean? // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.isMoving.<get-isMoving>|<get-isMoving>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types.media/Document // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.component1|component1(){}[0]
        final fun component2(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.component2|component2(){}[0]
        final fun component3(): kotlin/Boolean? // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.component3|component3(){}[0]
        final fun component4(): kotlin/Boolean? // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.component4|component4(){}[0]
        final fun copy(eu.vendeli.tgbot.types.media/Document = ..., kotlin/Int = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types/BackgroundType.Wallpaper // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.copy|copy(eu.vendeli.tgbot.types.media.Document;kotlin.Int;kotlin.Boolean?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/BackgroundType.Wallpaper> { // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/BackgroundType.Wallpaper // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/BackgroundType.Wallpaper) // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.BackgroundType.Wallpaper){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/BackgroundType.Wallpaper> // eu.vendeli.tgbot.types/BackgroundType.Wallpaper.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types/BackgroundType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/BackgroundType> // eu.vendeli.tgbot.types/BackgroundType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types/BackgroundType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types/InputMessageContent { // eu.vendeli.tgbot.types/InputMessageContent|null[0]
    final class ContactContent : eu.vendeli.tgbot.types/InputMessageContent { // eu.vendeli.tgbot.types/InputMessageContent.ContactContent|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.<init>|<init>(kotlin.String;kotlin.String;kotlin.String?;kotlin.String?){}[0]

        final val firstName // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.firstName|{}firstName[0]
            final fun <get-firstName>(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.firstName.<get-firstName>|<get-firstName>(){}[0]
        final val lastName // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.lastName|{}lastName[0]
            final fun <get-lastName>(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.lastName.<get-lastName>|<get-lastName>(){}[0]
        final val phoneNumber // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.phoneNumber|{}phoneNumber[0]
            final fun <get-phoneNumber>(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.phoneNumber.<get-phoneNumber>|<get-phoneNumber>(){}[0]
        final val vcard // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.vcard|{}vcard[0]
            final fun <get-vcard>(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.vcard.<get-vcard>|<get-vcard>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.component1|component1(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.component2|component2(){}[0]
        final fun component3(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.component3|component3(){}[0]
        final fun component4(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.component4|component4(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types/InputMessageContent.ContactContent // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.copy|copy(kotlin.String;kotlin.String;kotlin.String?;kotlin.String?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/InputMessageContent.ContactContent> { // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/InputMessageContent.ContactContent // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/InputMessageContent.ContactContent) // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.InputMessageContent.ContactContent){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/InputMessageContent.ContactContent> // eu.vendeli.tgbot.types/InputMessageContent.ContactContent.Companion.serializer|serializer(){}[0]
        }
    }

    final class InvoiceContent : eu.vendeli.tgbot.types/InputMessageContent { // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent|null[0]
        constructor <init>(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types.internal/Currency, kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice>, kotlin/Int? = ..., kotlin.collections/List<kotlin/Int>? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...) // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.<init>|<init>(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.internal.Currency;kotlin.collections.List<eu.vendeli.tgbot.types.payment.LabeledPrice>;kotlin.Int?;kotlin.collections.List<kotlin.Int>?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]

        final val currency // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.currency|{}currency[0]
            final fun <get-currency>(): eu.vendeli.tgbot.types.internal/Currency // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.currency.<get-currency>|<get-currency>(){}[0]
        final val description // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.description|{}description[0]
            final fun <get-description>(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.description.<get-description>|<get-description>(){}[0]
        final val isFlexible // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.isFlexible|{}isFlexible[0]
            final fun <get-isFlexible>(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.isFlexible.<get-isFlexible>|<get-isFlexible>(){}[0]
        final val maxTipAmount // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.maxTipAmount|{}maxTipAmount[0]
            final fun <get-maxTipAmount>(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.maxTipAmount.<get-maxTipAmount>|<get-maxTipAmount>(){}[0]
        final val needEmail // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.needEmail|{}needEmail[0]
            final fun <get-needEmail>(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.needEmail.<get-needEmail>|<get-needEmail>(){}[0]
        final val needName // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.needName|{}needName[0]
            final fun <get-needName>(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.needName.<get-needName>|<get-needName>(){}[0]
        final val needPhoneNumber // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.needPhoneNumber|{}needPhoneNumber[0]
            final fun <get-needPhoneNumber>(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.needPhoneNumber.<get-needPhoneNumber>|<get-needPhoneNumber>(){}[0]
        final val needShippingAddress // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.needShippingAddress|{}needShippingAddress[0]
            final fun <get-needShippingAddress>(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.needShippingAddress.<get-needShippingAddress>|<get-needShippingAddress>(){}[0]
        final val payload // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.payload|{}payload[0]
            final fun <get-payload>(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.payload.<get-payload>|<get-payload>(){}[0]
        final val photoHeight // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.photoHeight|{}photoHeight[0]
            final fun <get-photoHeight>(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.photoHeight.<get-photoHeight>|<get-photoHeight>(){}[0]
        final val photoSize // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.photoSize|{}photoSize[0]
            final fun <get-photoSize>(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.photoSize.<get-photoSize>|<get-photoSize>(){}[0]
        final val photoUrl // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.photoUrl|{}photoUrl[0]
            final fun <get-photoUrl>(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.photoUrl.<get-photoUrl>|<get-photoUrl>(){}[0]
        final val photoWidth // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.photoWidth|{}photoWidth[0]
            final fun <get-photoWidth>(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.photoWidth.<get-photoWidth>|<get-photoWidth>(){}[0]
        final val prices // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.prices|{}prices[0]
            final fun <get-prices>(): kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice> // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.prices.<get-prices>|<get-prices>(){}[0]
        final val providerData // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.providerData|{}providerData[0]
            final fun <get-providerData>(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.providerData.<get-providerData>|<get-providerData>(){}[0]
        final val providerToken // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.providerToken|{}providerToken[0]
            final fun <get-providerToken>(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.providerToken.<get-providerToken>|<get-providerToken>(){}[0]
        final val sendEmailToProvider // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.sendEmailToProvider|{}sendEmailToProvider[0]
            final fun <get-sendEmailToProvider>(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.sendEmailToProvider.<get-sendEmailToProvider>|<get-sendEmailToProvider>(){}[0]
        final val sendPhoneNumberToProvider // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.sendPhoneNumberToProvider|{}sendPhoneNumberToProvider[0]
            final fun <get-sendPhoneNumberToProvider>(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.sendPhoneNumberToProvider.<get-sendPhoneNumberToProvider>|<get-sendPhoneNumberToProvider>(){}[0]
        final val suggestedTipAmounts // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.suggestedTipAmounts|{}suggestedTipAmounts[0]
            final fun <get-suggestedTipAmounts>(): kotlin.collections/List<kotlin/Int>? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.suggestedTipAmounts.<get-suggestedTipAmounts>|<get-suggestedTipAmounts>(){}[0]
        final val title // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.title|{}title[0]
            final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component1|component1(){}[0]
        final fun component10(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component10|component10(){}[0]
        final fun component11(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component11|component11(){}[0]
        final fun component12(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component12|component12(){}[0]
        final fun component13(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component13|component13(){}[0]
        final fun component14(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component14|component14(){}[0]
        final fun component15(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component15|component15(){}[0]
        final fun component16(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component16|component16(){}[0]
        final fun component17(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component17|component17(){}[0]
        final fun component18(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component18|component18(){}[0]
        final fun component19(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component19|component19(){}[0]
        final fun component2(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component2|component2(){}[0]
        final fun component20(): kotlin/Boolean? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component20|component20(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component3|component3(){}[0]
        final fun component4(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component4|component4(){}[0]
        final fun component5(): eu.vendeli.tgbot.types.internal/Currency // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component5|component5(){}[0]
        final fun component6(): kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice> // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component6|component6(){}[0]
        final fun component7(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component7|component7(){}[0]
        final fun component8(): kotlin.collections/List<kotlin/Int>? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component8|component8(){}[0]
        final fun component9(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.component9|component9(){}[0]
        final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., eu.vendeli.tgbot.types.internal/Currency = ..., kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice> = ..., kotlin/Int? = ..., kotlin.collections/List<kotlin/Int>? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.copy|copy(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.internal.Currency;kotlin.collections.List<eu.vendeli.tgbot.types.payment.LabeledPrice>;kotlin.Int?;kotlin.collections.List<kotlin.Int>?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.Int?;kotlin.Int?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent> { // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent) // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.InputMessageContent.InvoiceContent){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent> // eu.vendeli.tgbot.types/InputMessageContent.InvoiceContent.Companion.serializer|serializer(){}[0]
        }
    }

    final class LocationContent : eu.vendeli.tgbot.types/InputMessageContent { // eu.vendeli.tgbot.types/InputMessageContent.LocationContent|null[0]
        constructor <init>(kotlin/Float, kotlin/Float, kotlin/Float? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ...) // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.<init>|<init>(kotlin.Float;kotlin.Float;kotlin.Float?;kotlin.Int?;kotlin.Int?;kotlin.Int?){}[0]

        final val heading // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.heading|{}heading[0]
            final fun <get-heading>(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.heading.<get-heading>|<get-heading>(){}[0]
        final val horizontalAccuracy // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.horizontalAccuracy|{}horizontalAccuracy[0]
            final fun <get-horizontalAccuracy>(): kotlin/Float? // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.horizontalAccuracy.<get-horizontalAccuracy>|<get-horizontalAccuracy>(){}[0]
        final val latitude // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.latitude|{}latitude[0]
            final fun <get-latitude>(): kotlin/Float // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.latitude.<get-latitude>|<get-latitude>(){}[0]
        final val livePeriod // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.livePeriod|{}livePeriod[0]
            final fun <get-livePeriod>(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.livePeriod.<get-livePeriod>|<get-livePeriod>(){}[0]
        final val longitude // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.longitude|{}longitude[0]
            final fun <get-longitude>(): kotlin/Float // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.longitude.<get-longitude>|<get-longitude>(){}[0]
        final val proximityAlertRadius // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.proximityAlertRadius|{}proximityAlertRadius[0]
            final fun <get-proximityAlertRadius>(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.proximityAlertRadius.<get-proximityAlertRadius>|<get-proximityAlertRadius>(){}[0]

        final fun component1(): kotlin/Float // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.component1|component1(){}[0]
        final fun component2(): kotlin/Float // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.component2|component2(){}[0]
        final fun component3(): kotlin/Float? // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.component3|component3(){}[0]
        final fun component4(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.component4|component4(){}[0]
        final fun component5(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.component5|component5(){}[0]
        final fun component6(): kotlin/Int? // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.component6|component6(){}[0]
        final fun copy(kotlin/Float = ..., kotlin/Float = ..., kotlin/Float? = ..., kotlin/Int? = ..., kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.types/InputMessageContent.LocationContent // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.copy|copy(kotlin.Float;kotlin.Float;kotlin.Float?;kotlin.Int?;kotlin.Int?;kotlin.Int?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/InputMessageContent.LocationContent> { // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/InputMessageContent.LocationContent // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/InputMessageContent.LocationContent) // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.InputMessageContent.LocationContent){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/InputMessageContent.LocationContent> // eu.vendeli.tgbot.types/InputMessageContent.LocationContent.Companion.serializer|serializer(){}[0]
        }
    }

    final class Text : eu.vendeli.tgbot.types/InputMessageContent { // eu.vendeli.tgbot.types/InputMessageContent.Text|null[0]
        constructor <init>(kotlin/String, eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types/LinkPreviewOptions? = ...) // eu.vendeli.tgbot.types/InputMessageContent.Text.<init>|<init>(kotlin.String;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.LinkPreviewOptions?){}[0]

        final val entities // eu.vendeli.tgbot.types/InputMessageContent.Text.entities|{}entities[0]
            final fun <get-entities>(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types/InputMessageContent.Text.entities.<get-entities>|<get-entities>(){}[0]
        final val linkPreviewOptions // eu.vendeli.tgbot.types/InputMessageContent.Text.linkPreviewOptions|{}linkPreviewOptions[0]
            final fun <get-linkPreviewOptions>(): eu.vendeli.tgbot.types/LinkPreviewOptions? // eu.vendeli.tgbot.types/InputMessageContent.Text.linkPreviewOptions.<get-linkPreviewOptions>|<get-linkPreviewOptions>(){}[0]
        final val messageText // eu.vendeli.tgbot.types/InputMessageContent.Text.messageText|{}messageText[0]
            final fun <get-messageText>(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.Text.messageText.<get-messageText>|<get-messageText>(){}[0]
        final val parseMode // eu.vendeli.tgbot.types/InputMessageContent.Text.parseMode|{}parseMode[0]
            final fun <get-parseMode>(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types/InputMessageContent.Text.parseMode.<get-parseMode>|<get-parseMode>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.Text.component1|component1(){}[0]
        final fun component2(): eu.vendeli.tgbot.types/ParseMode? // eu.vendeli.tgbot.types/InputMessageContent.Text.component2|component2(){}[0]
        final fun component3(): kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? // eu.vendeli.tgbot.types/InputMessageContent.Text.component3|component3(){}[0]
        final fun component4(): eu.vendeli.tgbot.types/LinkPreviewOptions? // eu.vendeli.tgbot.types/InputMessageContent.Text.component4|component4(){}[0]
        final fun copy(kotlin/String = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.msg/MessageEntity>? = ..., eu.vendeli.tgbot.types/LinkPreviewOptions? = ...): eu.vendeli.tgbot.types/InputMessageContent.Text // eu.vendeli.tgbot.types/InputMessageContent.Text.copy|copy(kotlin.String;eu.vendeli.tgbot.types.ParseMode?;kotlin.collections.List<eu.vendeli.tgbot.types.msg.MessageEntity>?;eu.vendeli.tgbot.types.LinkPreviewOptions?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/InputMessageContent.Text.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/InputMessageContent.Text.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.Text.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/InputMessageContent.Text> { // eu.vendeli.tgbot.types/InputMessageContent.Text.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/InputMessageContent.Text.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/InputMessageContent.Text.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/InputMessageContent.Text.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/InputMessageContent.Text // eu.vendeli.tgbot.types/InputMessageContent.Text.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/InputMessageContent.Text) // eu.vendeli.tgbot.types/InputMessageContent.Text.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.InputMessageContent.Text){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/InputMessageContent.Text.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types/InputMessageContent.Text.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/InputMessageContent.Text> // eu.vendeli.tgbot.types/InputMessageContent.Text.Companion.serializer|serializer(){}[0]
        }
    }

    final class VenueContent : eu.vendeli.tgbot.types/InputMessageContent { // eu.vendeli.tgbot.types/InputMessageContent.VenueContent|null[0]
        constructor <init>(kotlin/Float, kotlin/Float, kotlin/String, kotlin/String, kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...) // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.<init>|<init>(kotlin.Float;kotlin.Float;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?){}[0]

        final val address // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.address|{}address[0]
            final fun <get-address>(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.address.<get-address>|<get-address>(){}[0]
        final val foursquareId // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.foursquareId|{}foursquareId[0]
            final fun <get-foursquareId>(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.foursquareId.<get-foursquareId>|<get-foursquareId>(){}[0]
        final val foursquareType // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.foursquareType|{}foursquareType[0]
            final fun <get-foursquareType>(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.foursquareType.<get-foursquareType>|<get-foursquareType>(){}[0]
        final val googlePlaceId // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.googlePlaceId|{}googlePlaceId[0]
            final fun <get-googlePlaceId>(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.googlePlaceId.<get-googlePlaceId>|<get-googlePlaceId>(){}[0]
        final val googlePlaceType // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.googlePlaceType|{}googlePlaceType[0]
            final fun <get-googlePlaceType>(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.googlePlaceType.<get-googlePlaceType>|<get-googlePlaceType>(){}[0]
        final val latitude // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.latitude|{}latitude[0]
            final fun <get-latitude>(): kotlin/Float // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.latitude.<get-latitude>|<get-latitude>(){}[0]
        final val longitude // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.longitude|{}longitude[0]
            final fun <get-longitude>(): kotlin/Float // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.longitude.<get-longitude>|<get-longitude>(){}[0]
        final val title // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.title|{}title[0]
            final fun <get-title>(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.title.<get-title>|<get-title>(){}[0]

        final fun component1(): kotlin/Float // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.component1|component1(){}[0]
        final fun component2(): kotlin/Float // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.component2|component2(){}[0]
        final fun component3(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.component3|component3(){}[0]
        final fun component4(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.component4|component4(){}[0]
        final fun component5(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.component5|component5(){}[0]
        final fun component6(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.component6|component6(){}[0]
        final fun component7(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.component7|component7(){}[0]
        final fun component8(): kotlin/String? // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.component8|component8(){}[0]
        final fun copy(kotlin/Float = ..., kotlin/Float = ..., kotlin/String = ..., kotlin/String = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...): eu.vendeli.tgbot.types/InputMessageContent.VenueContent // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.copy|copy(kotlin.Float;kotlin.Float;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/InputMessageContent.VenueContent> { // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/InputMessageContent.VenueContent // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/InputMessageContent.VenueContent) // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.InputMessageContent.VenueContent){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/InputMessageContent.VenueContent> // eu.vendeli.tgbot.types/InputMessageContent.VenueContent.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types/InputMessageContent.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/InputMessageContent> // eu.vendeli.tgbot.types/InputMessageContent.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types/InputMessageContent.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

sealed class eu.vendeli.tgbot.types/ReactionType { // eu.vendeli.tgbot.types/ReactionType|null[0]
    final val type // eu.vendeli.tgbot.types/ReactionType.type|{}type[0]
        final fun <get-type>(): kotlin/String // eu.vendeli.tgbot.types/ReactionType.type.<get-type>|<get-type>(){}[0]

    final class CustomEmoji : eu.vendeli.tgbot.types/ReactionType { // eu.vendeli.tgbot.types/ReactionType.CustomEmoji|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.<init>|<init>(kotlin.String){}[0]

        final val customEmojiId // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.customEmojiId|{}customEmojiId[0]
            final fun <get-customEmojiId>(): kotlin/String // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.customEmojiId.<get-customEmojiId>|<get-customEmojiId>(){}[0]

        final fun component1(): kotlin/String // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.component1|component1(){}[0]
        final fun copy(kotlin/String = ...): eu.vendeli.tgbot.types/ReactionType.CustomEmoji // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.copy|copy(kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/ReactionType.CustomEmoji> { // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/ReactionType.CustomEmoji // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/ReactionType.CustomEmoji) // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.ReactionType.CustomEmoji){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/ReactionType.CustomEmoji> // eu.vendeli.tgbot.types/ReactionType.CustomEmoji.Companion.serializer|serializer(){}[0]
        }
    }

    final class Emoji : eu.vendeli.tgbot.types/ReactionType { // eu.vendeli.tgbot.types/ReactionType.Emoji|null[0]
        constructor <init>(eu.vendeli.tgbot.types/EmojiType) // eu.vendeli.tgbot.types/ReactionType.Emoji.<init>|<init>(eu.vendeli.tgbot.types.EmojiType){}[0]
        constructor <init>(kotlin/String) // eu.vendeli.tgbot.types/ReactionType.Emoji.<init>|<init>(kotlin.String){}[0]

        final val emoji // eu.vendeli.tgbot.types/ReactionType.Emoji.emoji|{}emoji[0]
            final fun <get-emoji>(): eu.vendeli.tgbot.types/EmojiType // eu.vendeli.tgbot.types/ReactionType.Emoji.emoji.<get-emoji>|<get-emoji>(){}[0]

        final fun component1(): eu.vendeli.tgbot.types/EmojiType // eu.vendeli.tgbot.types/ReactionType.Emoji.component1|component1(){}[0]
        final fun copy(eu.vendeli.tgbot.types/EmojiType = ...): eu.vendeli.tgbot.types/ReactionType.Emoji // eu.vendeli.tgbot.types/ReactionType.Emoji.copy|copy(eu.vendeli.tgbot.types.EmojiType){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types/ReactionType.Emoji.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types/ReactionType.Emoji.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.tgbot.types/ReactionType.Emoji.toString|toString(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/ReactionType.Emoji> { // eu.vendeli.tgbot.types/ReactionType.Emoji.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/ReactionType.Emoji.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/ReactionType.Emoji.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/ReactionType.Emoji.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/ReactionType.Emoji // eu.vendeli.tgbot.types/ReactionType.Emoji.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/ReactionType.Emoji) // eu.vendeli.tgbot.types/ReactionType.Emoji.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.ReactionType.Emoji){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/ReactionType.Emoji.Companion|null[0]
            final val $childSerializers // eu.vendeli.tgbot.types/ReactionType.Emoji.Companion.$childSerializers|{}$childSerializers[0]

            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/ReactionType.Emoji> // eu.vendeli.tgbot.types/ReactionType.Emoji.Companion.serializer|serializer(){}[0]
        }
    }

    final class Paid : eu.vendeli.tgbot.types/ReactionType { // eu.vendeli.tgbot.types/ReactionType.Paid|null[0]
        constructor <init>() // eu.vendeli.tgbot.types/ReactionType.Paid.<init>|<init>(){}[0]

        final object $serializer : kotlinx.serialization.internal/GeneratedSerializer<eu.vendeli.tgbot.types/ReactionType.Paid> { // eu.vendeli.tgbot.types/ReactionType.Paid.$serializer|null[0]
            final val descriptor // eu.vendeli.tgbot.types/ReactionType.Paid.$serializer.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // eu.vendeli.tgbot.types/ReactionType.Paid.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // eu.vendeli.tgbot.types/ReactionType.Paid.$serializer.childSerializers|childSerializers(){}[0]
            final fun deserialize(kotlinx.serialization.encoding/Decoder): eu.vendeli.tgbot.types/ReactionType.Paid // eu.vendeli.tgbot.types/ReactionType.Paid.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
            final fun serialize(kotlinx.serialization.encoding/Encoder, eu.vendeli.tgbot.types/ReactionType.Paid) // eu.vendeli.tgbot.types/ReactionType.Paid.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;eu.vendeli.tgbot.types.ReactionType.Paid){}[0]
        }

        final object Companion { // eu.vendeli.tgbot.types/ReactionType.Paid.Companion|null[0]
            final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/ReactionType.Paid> // eu.vendeli.tgbot.types/ReactionType.Paid.Companion.serializer|serializer(){}[0]
        }
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types/ReactionType.Companion|null[0]
        final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types/ReactionType> // eu.vendeli.tgbot.types/ReactionType.Companion.serializer|serializer(){}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types/ReactionType.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final object eu.vendeli.tgbot.implementations/DefaultArgParser : eu.vendeli.tgbot.interfaces.helper/ArgumentParser { // eu.vendeli.tgbot.implementations/DefaultArgParser|null[0]
    final fun parse(kotlin/String): kotlin/Nothing // eu.vendeli.tgbot.implementations/DefaultArgParser.parse|parse(kotlin.String){}[0]
}

final object eu.vendeli.tgbot.implementations/DefaultFilter : eu.vendeli.tgbot.interfaces.helper/Filter { // eu.vendeli.tgbot.implementations/DefaultFilter|null[0]
    final suspend fun match(eu.vendeli.tgbot.types/User?, eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot): kotlin/Boolean // eu.vendeli.tgbot.implementations/DefaultFilter.match|match(eu.vendeli.tgbot.types.User?;eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
}

final object eu.vendeli.tgbot.implementations/DefaultGuard : eu.vendeli.tgbot.interfaces.helper/Guard { // eu.vendeli.tgbot.implementations/DefaultGuard|null[0]
    final suspend fun condition(eu.vendeli.tgbot.types/User?, eu.vendeli.tgbot.types.internal/ProcessedUpdate, eu.vendeli.tgbot/TelegramBot): kotlin/Boolean // eu.vendeli.tgbot.implementations/DefaultGuard.condition|condition(eu.vendeli.tgbot.types.User?;eu.vendeli.tgbot.types.internal.ProcessedUpdate;eu.vendeli.tgbot.TelegramBot){}[0]
}

final object eu.vendeli.tgbot.types.forum/ForumTopicClosed : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.forum/ForumTopicClosed|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.forum/ForumTopicClosed.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.forum/ForumTopicClosed.hashCode|hashCode(){}[0]
    final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.forum/ForumTopicClosed> // eu.vendeli.tgbot.types.forum/ForumTopicClosed.serializer|serializer(){}[0]
    final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.forum/ForumTopicClosed.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.forum/ForumTopicClosed.toString|toString(){}[0]
}

final object eu.vendeli.tgbot.types.forum/ForumTopicReopened : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.forum/ForumTopicReopened|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.forum/ForumTopicReopened.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.forum/ForumTopicReopened.hashCode|hashCode(){}[0]
    final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.forum/ForumTopicReopened> // eu.vendeli.tgbot.types.forum/ForumTopicReopened.serializer|serializer(){}[0]
    final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.forum/ForumTopicReopened.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.forum/ForumTopicReopened.toString|toString(){}[0]
}

final object eu.vendeli.tgbot.types.forum/GeneralForumTopicHidden : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.forum/GeneralForumTopicHidden|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.forum/GeneralForumTopicHidden.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.forum/GeneralForumTopicHidden.hashCode|hashCode(){}[0]
    final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.forum/GeneralForumTopicHidden> // eu.vendeli.tgbot.types.forum/GeneralForumTopicHidden.serializer|serializer(){}[0]
    final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.forum/GeneralForumTopicHidden.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.forum/GeneralForumTopicHidden.toString|toString(){}[0]
}

final object eu.vendeli.tgbot.types.forum/GeneralForumTopicUnhidden : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.forum/GeneralForumTopicUnhidden|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.forum/GeneralForumTopicUnhidden.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.forum/GeneralForumTopicUnhidden.hashCode|hashCode(){}[0]
    final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.forum/GeneralForumTopicUnhidden> // eu.vendeli.tgbot.types.forum/GeneralForumTopicUnhidden.serializer|serializer(){}[0]
    final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.forum/GeneralForumTopicUnhidden.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.forum/GeneralForumTopicUnhidden.toString|toString(){}[0]
}

final object eu.vendeli.tgbot.types.game/CallbackGame : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.game/CallbackGame|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.game/CallbackGame.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.game/CallbackGame.hashCode|hashCode(){}[0]
    final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.game/CallbackGame> // eu.vendeli.tgbot.types.game/CallbackGame.serializer|serializer(){}[0]
    final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.game/CallbackGame.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.game/CallbackGame.toString|toString(){}[0]
}

final object eu.vendeli.tgbot.types.media/VideoChatStarted : kotlinx.serialization.internal/SerializerFactory { // eu.vendeli.tgbot.types.media/VideoChatStarted|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.tgbot.types.media/VideoChatStarted.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.tgbot.types.media/VideoChatStarted.hashCode|hashCode(){}[0]
    final fun serializer(): kotlinx.serialization/KSerializer<eu.vendeli.tgbot.types.media/VideoChatStarted> // eu.vendeli.tgbot.types.media/VideoChatStarted.serializer|serializer(){}[0]
    final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // eu.vendeli.tgbot.types.media/VideoChatStarted.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    final fun toString(): kotlin/String // eu.vendeli.tgbot.types.media/VideoChatStarted.toString|toString(){}[0]
}

final const val eu.vendeli.tgbot.utils/DEFAULT_CONTENT_TYPE // eu.vendeli.tgbot.utils/DEFAULT_CONTENT_TYPE|{}DEFAULT_CONTENT_TYPE[0]
    final fun <get-DEFAULT_CONTENT_TYPE>(): kotlin/String // eu.vendeli.tgbot.utils/DEFAULT_CONTENT_TYPE.<get-DEFAULT_CONTENT_TYPE>|<get-DEFAULT_CONTENT_TYPE>(){}[0]
final const val eu.vendeli.tgbot.utils/DEFAULT_FILENAME // eu.vendeli.tgbot.utils/DEFAULT_FILENAME|{}DEFAULT_FILENAME[0]
    final fun <get-DEFAULT_FILENAME>(): kotlin/String // eu.vendeli.tgbot.utils/DEFAULT_FILENAME.<get-DEFAULT_FILENAME>|<get-DEFAULT_FILENAME>(){}[0]

final val eu.vendeli.tgbot.types.internal/userOrNull // eu.vendeli.tgbot.types.internal/userOrNull|@eu.vendeli.tgbot.types.internal.ProcessedUpdate{}userOrNull[0]
    final inline fun (eu.vendeli.tgbot.types.internal/ProcessedUpdate).<get-userOrNull>(): eu.vendeli.tgbot.types/User? // eu.vendeli.tgbot.types.internal/userOrNull.<get-userOrNull>|<get-userOrNull>@eu.vendeli.tgbot.types.internal.ProcessedUpdate(){}[0]
final val eu.vendeli.tgbot.utils/DEFAULT_HANDLING_BEHAVIOUR // eu.vendeli.tgbot.utils/DEFAULT_HANDLING_BEHAVIOUR|{}DEFAULT_HANDLING_BEHAVIOUR[0]
    final fun <get-DEFAULT_HANDLING_BEHAVIOUR>(): kotlin.coroutines/SuspendFunction2<eu.vendeli.tgbot.core/TgUpdateHandler, eu.vendeli.tgbot.types.internal/ProcessedUpdate, kotlin/Unit> // eu.vendeli.tgbot.utils/DEFAULT_HANDLING_BEHAVIOUR.<get-DEFAULT_HANDLING_BEHAVIOUR>|<get-DEFAULT_HANDLING_BEHAVIOUR>(){}[0]
final val eu.vendeli.tgbot.utils/_OperatingActivities // eu.vendeli.tgbot.utils/_OperatingActivities|{}_OperatingActivities[0]
    final fun <get-_OperatingActivities>(): kotlin.collections/Map<kotlin/String, kotlin.collections/List<kotlin/Any?>> // eu.vendeli.tgbot.utils/_OperatingActivities.<get-_OperatingActivities>|<get-_OperatingActivities>(){}[0]
final val eu.vendeli.tgbot.utils/fqName // eu.vendeli.tgbot.utils/fqName|@kotlin.reflect.KClass<*>{}fqName[0]
    // Targets: [native]
    final fun (kotlin.reflect/KClass<*>).<get-fqName>(): kotlin/String // eu.vendeli.tgbot.utils/fqName.<get-fqName>|<get-fqName>@kotlin.reflect.KClass<*>(){}[0]

    // Targets: [js]
    final inline fun (kotlin.reflect/KClass<*>).<get-fqName>(): kotlin/String // eu.vendeli.tgbot.utils/fqName.<get-fqName>|<get-fqName>@kotlin.reflect.KClass<*>(){}[0]

final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onBusinessConnection(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/BusinessConnectionUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onBusinessConnection|onBusinessConnection@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.BusinessConnectionUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onBusinessMessage(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/BusinessMessageUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onBusinessMessage|onBusinessMessage@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.BusinessMessageUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onCallbackQuery(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/CallbackQueryUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onCallbackQuery|onCallbackQuery@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.CallbackQueryUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onChannelPost(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ChannelPostUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onChannelPost|onChannelPost@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ChannelPostUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onChatBoost(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ChatBoostUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onChatBoost|onChatBoost@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ChatBoostUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onChatJoinRequest(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ChatJoinRequestUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onChatJoinRequest|onChatJoinRequest@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ChatJoinRequestUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onChatMember(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ChatMemberUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onChatMember|onChatMember@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ChatMemberUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onChosenInlineResult(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ChosenInlineResultUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onChosenInlineResult|onChosenInlineResult@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ChosenInlineResultUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onDeletedBusinessMessages(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/DeletedBusinessMessagesUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onDeletedBusinessMessages|onDeletedBusinessMessages@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.DeletedBusinessMessagesUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onEditedBusinessMessage(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/EditedBusinessMessageUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onEditedBusinessMessage|onEditedBusinessMessage@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.EditedBusinessMessageUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onEditedChannelPost(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/EditedChannelPostUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onEditedChannelPost|onEditedChannelPost@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.EditedChannelPostUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onEditedMessage(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/EditedMessageUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onEditedMessage|onEditedMessage@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.EditedMessageUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onInlineQuery(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/InlineQueryUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onInlineQuery|onInlineQuery@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.InlineQueryUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onMessage(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/MessageUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onMessage|onMessage@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.MessageUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onMessageReaction(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/MessageReactionUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onMessageReaction|onMessageReaction@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.MessageReactionUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onMessageReactionCount(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/MessageReactionCountUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onMessageReactionCount|onMessageReactionCount@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.MessageReactionCountUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onMyChatMember(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/MyChatMemberUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onMyChatMember|onMyChatMember@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.MyChatMemberUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onPoll(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/PollUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onPoll|onPoll@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.PollUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onPollAnswer(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/PollAnswerUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onPollAnswer|onPollAnswer@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.PollAnswerUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onPreCheckoutQuery(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/PreCheckoutQueryUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onPreCheckoutQuery|onPreCheckoutQuery@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.PreCheckoutQueryUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onPurchasedPaidMedia(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/PurchasedPaidMediaUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onPurchasedPaidMedia|onPurchasedPaidMedia@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.PurchasedPaidMediaUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onRemovedChatBoost(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/RemovedChatBoostUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onRemovedChatBoost|onRemovedChatBoost@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.RemovedChatBoostUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot.core/FunctionalHandlingDsl).eu.vendeli.tgbot.utils/onShippingQuery(kotlin.coroutines/SuspendFunction1<eu.vendeli.tgbot.types.internal/ActivityCtx<eu.vendeli.tgbot.types.internal/ShippingQueryUpdate>, kotlin/Unit>) // eu.vendeli.tgbot.utils/onShippingQuery|onShippingQuery@eu.vendeli.tgbot.core.FunctionalHandlingDsl(kotlin.coroutines.SuspendFunction1<eu.vendeli.tgbot.types.internal.ActivityCtx<eu.vendeli.tgbot.types.internal.ShippingQueryUpdate>,kotlin.Unit>){}[0]
final fun (eu.vendeli.tgbot/TelegramBot).eu.vendeli.tgbot.utils/defineActivities(kotlin.collections/Map<kotlin/String, kotlin.collections/List<kotlin/Any?>>) // eu.vendeli.tgbot.utils/defineActivities|defineActivities@eu.vendeli.tgbot.TelegramBot(kotlin.collections.Map<kotlin.String,kotlin.collections.List<kotlin.Any?>>){}[0]
final fun (kotlin/ByteArray).eu.vendeli.tgbot.utils/toImplicitFile(kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile // eu.vendeli.tgbot.utils/toImplicitFile|toImplicitFile@kotlin.ByteArray(kotlin.String;kotlin.String){}[0]
final fun (kotlin/ByteArray).eu.vendeli.tgbot.utils/toInputFile(kotlin/String = ..., kotlin/String = ...): eu.vendeli.tgbot.types.internal/InputFile // eu.vendeli.tgbot.utils/toInputFile|toInputFile@kotlin.ByteArray(kotlin.String;kotlin.String){}[0]
final fun (kotlin/String).eu.vendeli.tgbot.utils/escapeHTML(): kotlin/String // eu.vendeli.tgbot.utils/escapeHTML|escapeHTML@kotlin.String(){}[0]
final fun (kotlin/String).eu.vendeli.tgbot.utils/escapeMarkdown(): kotlin/String // eu.vendeli.tgbot.utils/escapeMarkdown|escapeMarkdown@kotlin.String(){}[0]
final fun (kotlin/String).eu.vendeli.tgbot.utils/escapeMarkdownV2(): kotlin/String // eu.vendeli.tgbot.utils/escapeMarkdownV2|escapeMarkdownV2@kotlin.String(){}[0]
final fun <#A: eu.vendeli.tgbot.types.internal.chain/Link<*>> (eu.vendeli.tgbot.interfaces.ctx/InputListener).eu.vendeli.tgbot.utils/setChain(eu.vendeli.tgbot.types/User, #A) // eu.vendeli.tgbot.utils/setChain|setChain@eu.vendeli.tgbot.interfaces.ctx.InputListener(eu.vendeli.tgbot.types.User;0:0){0§<eu.vendeli.tgbot.types.internal.chain.Link<*>>}[0]
final fun <#A: kotlin/Any?> (eu.vendeli.tgbot.types.internal/Response<#A>).eu.vendeli.tgbot.types.internal/getOrNull(): #A? // eu.vendeli.tgbot.types.internal/getOrNull|getOrNull@eu.vendeli.tgbot.types.internal.Response<0:0>(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (eu.vendeli.tgbot.types.internal/Response<#A>).eu.vendeli.tgbot.types.internal/isSuccess(): kotlin/Boolean // eu.vendeli.tgbot.types.internal/isSuccess|isSuccess@eu.vendeli.tgbot.types.internal.Response<0:0>(){0§<kotlin.Any?>}[0]
final fun eu.vendeli.tgbot.api.answer/answerInlineQuery(kotlin/String, kotlin/Function1<eu.vendeli.tgbot.utils.builders/ListingBuilder<eu.vendeli.tgbot.types.inline/InlineQueryResult>, kotlin/Unit>): eu.vendeli.tgbot.api.answer/AnswerInlineQueryAction // eu.vendeli.tgbot.api.answer/answerInlineQuery|answerInlineQuery(kotlin.String;kotlin.Function1<eu.vendeli.tgbot.utils.builders.ListingBuilder<eu.vendeli.tgbot.types.inline.InlineQueryResult>,kotlin.Unit>){}[0]
final fun eu.vendeli.tgbot.api.answer/answerShippingQuery(kotlin/String, kotlin/Boolean = ..., kotlin/String? = ..., kotlin/Function1<eu.vendeli.tgbot.utils.builders/ListingBuilder<eu.vendeli.tgbot.types.payment/ShippingOption>, kotlin/Unit>): eu.vendeli.tgbot.api.answer/AnswerShippingQueryAction // eu.vendeli.tgbot.api.answer/answerShippingQuery|answerShippingQuery(kotlin.String;kotlin.Boolean;kotlin.String?;kotlin.Function1<eu.vendeli.tgbot.utils.builders.ListingBuilder<eu.vendeli.tgbot.types.payment.ShippingOption>,kotlin.Unit>){}[0]
final fun eu.vendeli.tgbot.api.botactions/setMyCommands(kotlin/String? = ..., eu.vendeli.tgbot.types.bot/BotCommandScope? = ..., kotlin/Function1<eu.vendeli.tgbot.utils.builders/BotCommandsBuilder, kotlin/Unit>): eu.vendeli.tgbot.api.botactions/SetMyCommandsAction // eu.vendeli.tgbot.api.botactions/setMyCommands|setMyCommands(kotlin.String?;eu.vendeli.tgbot.types.bot.BotCommandScope?;kotlin.Function1<eu.vendeli.tgbot.utils.builders.BotCommandsBuilder,kotlin.Unit>){}[0]
final fun eu.vendeli.tgbot.api.media/sendPaidMedia(kotlin/Int, kotlin/Function1<eu.vendeli.tgbot.utils.builders/ListingBuilder<eu.vendeli.tgbot.types.media/InputPaidMedia>, kotlin/Unit>): eu.vendeli.tgbot.api.media/SendPaidMediaAction // eu.vendeli.tgbot.api.media/sendPaidMedia|sendPaidMedia(kotlin.Int;kotlin.Function1<eu.vendeli.tgbot.utils.builders.ListingBuilder<eu.vendeli.tgbot.types.media.InputPaidMedia>,kotlin.Unit>){}[0]
final fun eu.vendeli.tgbot.api.message/editCaption(): eu.vendeli.tgbot.api.message/EditMessageCaptionAction // eu.vendeli.tgbot.api.message/editCaption|editCaption(){}[0]
final fun eu.vendeli.tgbot.api.message/editCaption(kotlin/Long): eu.vendeli.tgbot.api.message/EditMessageCaptionAction // eu.vendeli.tgbot.api.message/editCaption|editCaption(kotlin.Long){}[0]
final fun eu.vendeli.tgbot.api.message/editMedia(eu.vendeli.tgbot.types.media/InputMedia): eu.vendeli.tgbot.api.message/EditMessageMediaAction // eu.vendeli.tgbot.api.message/editMedia|editMedia(eu.vendeli.tgbot.types.media.InputMedia){}[0]
final fun eu.vendeli.tgbot.api.message/editMedia(kotlin/Long, eu.vendeli.tgbot.types.media/InputMedia): eu.vendeli.tgbot.api.message/EditMessageMediaAction // eu.vendeli.tgbot.api.message/editMedia|editMedia(kotlin.Long;eu.vendeli.tgbot.types.media.InputMedia){}[0]
final fun eu.vendeli.tgbot.api.message/editMessageText(kotlin/Function1<eu.vendeli.tgbot.utils.builders/EntitiesCtxBuilder<eu.vendeli.tgbot.api.message/EditMessageTextAction>, kotlin/String>): eu.vendeli.tgbot.api.message/EditMessageTextAction // eu.vendeli.tgbot.api.message/editMessageText|editMessageText(kotlin.Function1<eu.vendeli.tgbot.utils.builders.EntitiesCtxBuilder<eu.vendeli.tgbot.api.message.EditMessageTextAction>,kotlin.String>){}[0]
final fun eu.vendeli.tgbot.api.message/editText(kotlin/Function1<eu.vendeli.tgbot.utils.builders/EntitiesCtxBuilder<eu.vendeli.tgbot.api.message/EditMessageTextAction>, kotlin/String>): eu.vendeli.tgbot.api.message/EditMessageTextAction // eu.vendeli.tgbot.api.message/editText|editText(kotlin.Function1<eu.vendeli.tgbot.utils.builders.EntitiesCtxBuilder<eu.vendeli.tgbot.api.message.EditMessageTextAction>,kotlin.String>){}[0]
final fun eu.vendeli.tgbot.api.message/message(kotlin/Function1<eu.vendeli.tgbot.utils.builders/EntitiesCtxBuilder<eu.vendeli.tgbot.api.message/SendMessageAction>, kotlin/String>): eu.vendeli.tgbot.api.message/SendMessageAction // eu.vendeli.tgbot.api.message/message|message(kotlin.Function1<eu.vendeli.tgbot.utils.builders.EntitiesCtxBuilder<eu.vendeli.tgbot.api.message.SendMessageAction>,kotlin.String>){}[0]
final fun eu.vendeli.tgbot.api.message/sendMessage(kotlin/Function1<eu.vendeli.tgbot.utils.builders/EntitiesCtxBuilder<eu.vendeli.tgbot.api.message/SendMessageAction>, kotlin/String>): eu.vendeli.tgbot.api.message/SendMessageAction // eu.vendeli.tgbot.api.message/sendMessage|sendMessage(kotlin.Function1<eu.vendeli.tgbot.utils.builders.EntitiesCtxBuilder<eu.vendeli.tgbot.api.message.SendMessageAction>,kotlin.String>){}[0]
final fun eu.vendeli.tgbot.api/poll(kotlin/String, kotlin/Function1<eu.vendeli.tgbot.utils.builders/PollOptionsBuilder, kotlin/Unit>): eu.vendeli.tgbot.api/SendPollAction // eu.vendeli.tgbot.api/poll|poll(kotlin.String;kotlin.Function1<eu.vendeli.tgbot.utils.builders.PollOptionsBuilder,kotlin.Unit>){}[0]
final fun eu.vendeli.tgbot.api/sendPoll(kotlin/String, kotlin/Function1<eu.vendeli.tgbot.utils.builders/PollOptionsBuilder, kotlin/Unit>): eu.vendeli.tgbot.api/SendPollAction // eu.vendeli.tgbot.api/sendPoll|sendPoll(kotlin.String;kotlin.Function1<eu.vendeli.tgbot.utils.builders.PollOptionsBuilder,kotlin.Unit>){}[0]
final fun eu.vendeli.tgbot.api/setMessageReaction(kotlin/Long, kotlin/Boolean? = ..., kotlin/Function1<eu.vendeli.tgbot.utils.builders/ListingBuilder<eu.vendeli.tgbot.types/ReactionType>, kotlin/Unit>): eu.vendeli.tgbot.api/SetMessageReactionAction // eu.vendeli.tgbot.api/setMessageReaction|setMessageReaction(kotlin.Long;kotlin.Boolean?;kotlin.Function1<eu.vendeli.tgbot.utils.builders.ListingBuilder<eu.vendeli.tgbot.types.ReactionType>,kotlin.Unit>){}[0]
final fun eu.vendeli.tgbot.api/setPassportDataErrors(kotlin/Long, kotlin/Function1<eu.vendeli.tgbot.utils.builders/ListingBuilder<eu.vendeli.tgbot.types.passport/PassportElementError>, kotlin/Unit>): eu.vendeli.tgbot.api/SetPassportDataErrorsAction // eu.vendeli.tgbot.api/setPassportDataErrors|setPassportDataErrors(kotlin.Long;kotlin.Function1<eu.vendeli.tgbot.utils.builders.ListingBuilder<eu.vendeli.tgbot.types.passport.PassportElementError>,kotlin.Unit>){}[0]
final fun eu.vendeli.tgbot.utils.builders/inlineKeyboardMarkup(kotlin/Function1<eu.vendeli.tgbot.utils.builders/InlineKeyboardMarkupBuilder, kotlin/Unit>): eu.vendeli.tgbot.types.keyboard/InlineKeyboardMarkup // eu.vendeli.tgbot.utils.builders/inlineKeyboardMarkup|inlineKeyboardMarkup(kotlin.Function1<eu.vendeli.tgbot.utils.builders.InlineKeyboardMarkupBuilder,kotlin.Unit>){}[0]
final fun eu.vendeli.tgbot.utils.builders/replyKeyboardMarkup(kotlin/Function1<eu.vendeli.tgbot.utils.builders/ReplyKeyboardMarkupBuilder, kotlin/Unit>): eu.vendeli.tgbot.types.keyboard/ReplyKeyboardMarkup // eu.vendeli.tgbot.utils.builders/replyKeyboardMarkup|replyKeyboardMarkup(kotlin.Function1<eu.vendeli.tgbot.utils.builders.ReplyKeyboardMarkupBuilder,kotlin.Unit>){}[0]
final inline fun (eu.vendeli.tgbot.types.internal/InputFile).eu.vendeli.tgbot.utils/toImplicitFile(): eu.vendeli.tgbot.types.internal/ImplicitFile.InpFile // eu.vendeli.tgbot.utils/toImplicitFile|toImplicitFile@eu.vendeli.tgbot.types.internal.InputFile(){}[0]
final inline fun (eu.vendeli.tgbot.types.internal/ProcessedUpdate).eu.vendeli.tgbot.types.internal/getUser(): eu.vendeli.tgbot.types/User // eu.vendeli.tgbot.types.internal/getUser|getUser@eu.vendeli.tgbot.types.internal.ProcessedUpdate(){}[0]
final inline fun (kotlin/String).eu.vendeli.tgbot.utils/escapeFormatting(eu.vendeli.tgbot.types/ParseMode): kotlin/String // eu.vendeli.tgbot.utils/escapeFormatting|escapeFormatting@kotlin.String(eu.vendeli.tgbot.types.ParseMode){}[0]
final inline fun (kotlin/String).eu.vendeli.tgbot.utils/toImplicitFile(): eu.vendeli.tgbot.types.internal/ImplicitFile.Str // eu.vendeli.tgbot.utils/toImplicitFile|toImplicitFile@kotlin.String(){}[0]
final inline fun <#A: kotlin/Any?> (eu.vendeli.tgbot.types.internal/Response<#A>).eu.vendeli.tgbot.types.internal/onFailure(kotlin/Function1<eu.vendeli.tgbot.types.internal/Response.Failure, kotlin/Unit>): #A? // eu.vendeli.tgbot.types.internal/onFailure|onFailure@eu.vendeli.tgbot.types.internal.Response<0:0>(kotlin.Function1<eu.vendeli.tgbot.types.internal.Response.Failure,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any> (eu.vendeli.tgbot.interfaces.ctx/ClassManager).eu.vendeli.tgbot.utils/getInstance(kotlin/Array<out kotlin/Any?>...): #A? // eu.vendeli.tgbot.utils/getInstance|getInstance@eu.vendeli.tgbot.interfaces.ctx.ClassManager(kotlin.Array<out|kotlin.Any?>...){0§<kotlin.Any>}[0]
final inline fun eu.vendeli.tgbot.api.answer/answerCallbackQuery(kotlin/String): eu.vendeli.tgbot.api.answer/AnswerCallbackQueryAction // eu.vendeli.tgbot.api.answer/answerCallbackQuery|answerCallbackQuery(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.answer/answerInlineQuery(kotlin/String, kotlin.collections/List<eu.vendeli.tgbot.types.inline/InlineQueryResult>): eu.vendeli.tgbot.api.answer/AnswerInlineQueryAction // eu.vendeli.tgbot.api.answer/answerInlineQuery|answerInlineQuery(kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.inline.InlineQueryResult>){}[0]
final inline fun eu.vendeli.tgbot.api.answer/answerInlineQuery(kotlin/String, kotlin/Array<out eu.vendeli.tgbot.types.inline/InlineQueryResult>...): eu.vendeli.tgbot.api.answer/AnswerInlineQueryAction // eu.vendeli.tgbot.api.answer/answerInlineQuery|answerInlineQuery(kotlin.String;kotlin.Array<out|eu.vendeli.tgbot.types.inline.InlineQueryResult>...){}[0]
final inline fun eu.vendeli.tgbot.api.answer/answerPreCheckoutQuery(kotlin/String, kotlin/Boolean = ..., kotlin/String? = ...): eu.vendeli.tgbot.api.answer/AnswerPreCheckoutQueryAction // eu.vendeli.tgbot.api.answer/answerPreCheckoutQuery|answerPreCheckoutQuery(kotlin.String;kotlin.Boolean;kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.answer/answerShippingQuery(kotlin/String, kotlin/Boolean = ..., kotlin.collections/List<eu.vendeli.tgbot.types.payment/ShippingOption>? = ..., kotlin/String? = ...): eu.vendeli.tgbot.api.answer/AnswerShippingQueryAction // eu.vendeli.tgbot.api.answer/answerShippingQuery|answerShippingQuery(kotlin.String;kotlin.Boolean;kotlin.collections.List<eu.vendeli.tgbot.types.payment.ShippingOption>?;kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.answer/answerShippingQuery(kotlin/String, kotlin/Boolean = ..., kotlin/String? = ..., kotlin/Array<out eu.vendeli.tgbot.types.payment/ShippingOption>...): eu.vendeli.tgbot.api.answer/AnswerShippingQueryAction // eu.vendeli.tgbot.api.answer/answerShippingQuery|answerShippingQuery(kotlin.String;kotlin.Boolean;kotlin.String?;kotlin.Array<out|eu.vendeli.tgbot.types.payment.ShippingOption>...){}[0]
final inline fun eu.vendeli.tgbot.api.answer/answerWebAppQuery(kotlin/String, eu.vendeli.tgbot.types.inline/InlineQueryResult): eu.vendeli.tgbot.api.answer/AnswerWebAppQueryAction // eu.vendeli.tgbot.api.answer/answerWebAppQuery|answerWebAppQuery(kotlin.String;eu.vendeli.tgbot.types.inline.InlineQueryResult){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/close(): eu.vendeli.tgbot.api.botactions/CloseAction // eu.vendeli.tgbot.api.botactions/close|close(){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/createInvoiceLink(kotlin/String, kotlin/String, eu.vendeli.tgbot.types.internal/Currency, kotlin/Array<out eu.vendeli.tgbot.types.payment/LabeledPrice>..., kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.botactions/CreateInvoiceLinkAction // eu.vendeli.tgbot.api.botactions/createInvoiceLink|createInvoiceLink(kotlin.String;kotlin.String;eu.vendeli.tgbot.types.internal.Currency;kotlin.Array<out|eu.vendeli.tgbot.types.payment.LabeledPrice>...;kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/createInvoiceLink(kotlin/String, kotlin/String, kotlin/String, eu.vendeli.tgbot.types.internal/Currency, kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice>): eu.vendeli.tgbot.api.botactions/CreateInvoiceLinkAction // eu.vendeli.tgbot.api.botactions/createInvoiceLink|createInvoiceLink(kotlin.String;kotlin.String;kotlin.String;eu.vendeli.tgbot.types.internal.Currency;kotlin.collections.List<eu.vendeli.tgbot.types.payment.LabeledPrice>){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/deleteMyCommands(kotlin/String? = ..., eu.vendeli.tgbot.types.bot/BotCommandScope? = ...): eu.vendeli.tgbot.api.botactions/DeleteMyCommandsAction // eu.vendeli.tgbot.api.botactions/deleteMyCommands|deleteMyCommands(kotlin.String?;eu.vendeli.tgbot.types.bot.BotCommandScope?){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/deleteWebhook(kotlin/Boolean = ...): eu.vendeli.tgbot.api.botactions/DeleteWebhookAction // eu.vendeli.tgbot.api.botactions/deleteWebhook|deleteWebhook(kotlin.Boolean){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/editUserStarSubscription(kotlin/Long, kotlin/String, kotlin/Boolean): eu.vendeli.tgbot.api.botactions/EditUserStarSubscriptionAction // eu.vendeli.tgbot.api.botactions/editUserStarSubscription|editUserStarSubscription(kotlin.Long;kotlin.String;kotlin.Boolean){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/getAvailableGifts(): eu.vendeli.tgbot.api.botactions/GetAvailableGiftsAction // eu.vendeli.tgbot.api.botactions/getAvailableGifts|getAvailableGifts(){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/getBusinessConnection(kotlin/String): eu.vendeli.tgbot.api.botactions/GetBusinessConnectionAction // eu.vendeli.tgbot.api.botactions/getBusinessConnection|getBusinessConnection(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/getMe(): eu.vendeli.tgbot.api.botactions/GetMeAction // eu.vendeli.tgbot.api.botactions/getMe|getMe(){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/getMyCommands(kotlin/String? = ..., eu.vendeli.tgbot.types.bot/BotCommandScope? = ...): eu.vendeli.tgbot.api.botactions/GetMyCommandsAction // eu.vendeli.tgbot.api.botactions/getMyCommands|getMyCommands(kotlin.String?;eu.vendeli.tgbot.types.bot.BotCommandScope?){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/getMyDefaultAdministratorRights(kotlin/Boolean? = ...): eu.vendeli.tgbot.api.botactions/GetMyDefaultAdministratorRightsAction // eu.vendeli.tgbot.api.botactions/getMyDefaultAdministratorRights|getMyDefaultAdministratorRights(kotlin.Boolean?){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/getMyDescription(kotlin/String? = ...): eu.vendeli.tgbot.api.botactions/GetMyDescriptionAction // eu.vendeli.tgbot.api.botactions/getMyDescription|getMyDescription(kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/getMyName(kotlin/String? = ...): eu.vendeli.tgbot.api.botactions/GetMyNameAction // eu.vendeli.tgbot.api.botactions/getMyName|getMyName(kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/getMyShortDescription(kotlin/String? = ...): eu.vendeli.tgbot.api.botactions/GetMyShortDescriptionAction // eu.vendeli.tgbot.api.botactions/getMyShortDescription|getMyShortDescription(kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/getStarTransactions(kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.api.botactions/GetStarTransactionsAction // eu.vendeli.tgbot.api.botactions/getStarTransactions|getStarTransactions(kotlin.Int?;kotlin.Int?){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/getUpdates(): eu.vendeli.tgbot.api.botactions/GetUpdatesAction // eu.vendeli.tgbot.api.botactions/getUpdates|getUpdates(){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/getWebhookInfo(): eu.vendeli.tgbot.api.botactions/GetWebhookInfoAction // eu.vendeli.tgbot.api.botactions/getWebhookInfo|getWebhookInfo(){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/logOut(): eu.vendeli.tgbot.api.botactions/LogOutAction // eu.vendeli.tgbot.api.botactions/logOut|logOut(){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/refundStarPayment(kotlin/String, kotlin/Long): eu.vendeli.tgbot.api.botactions/RefundStarPaymentAction // eu.vendeli.tgbot.api.botactions/refundStarPayment|refundStarPayment(kotlin.String;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/savePreparedInlineMessage(kotlin/Long, eu.vendeli.tgbot.types.inline/InlineQueryResult): eu.vendeli.tgbot.api.botactions/SavePreparedInlineMessageAction // eu.vendeli.tgbot.api.botactions/savePreparedInlineMessage|savePreparedInlineMessage(kotlin.Long;eu.vendeli.tgbot.types.inline.InlineQueryResult){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/savePreparedInlineMessage(kotlin/Long, kotlin/Function0<eu.vendeli.tgbot.types.inline/InlineQueryResult>): eu.vendeli.tgbot.api.botactions/SavePreparedInlineMessageAction // eu.vendeli.tgbot.api.botactions/savePreparedInlineMessage|savePreparedInlineMessage(kotlin.Long;kotlin.Function0<eu.vendeli.tgbot.types.inline.InlineQueryResult>){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/sendGift(kotlin/String, kotlin/Long? = ..., kotlin/Boolean? = ..., eu.vendeli.tgbot.types/ParseMode? = ..., kotlin/Function0<kotlin/String?> = ...): eu.vendeli.tgbot.api.botactions/SendGiftAction // eu.vendeli.tgbot.api.botactions/sendGift|sendGift(kotlin.String;kotlin.Long?;kotlin.Boolean?;eu.vendeli.tgbot.types.ParseMode?;kotlin.Function0<kotlin.String?>){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/setMyCommands(kotlin/String? = ..., eu.vendeli.tgbot.types.bot/BotCommandScope? = ..., kotlin.collections/List<eu.vendeli.tgbot.types.bot/BotCommand>): eu.vendeli.tgbot.api.botactions/SetMyCommandsAction // eu.vendeli.tgbot.api.botactions/setMyCommands|setMyCommands(kotlin.String?;eu.vendeli.tgbot.types.bot.BotCommandScope?;kotlin.collections.List<eu.vendeli.tgbot.types.bot.BotCommand>){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/setMyCommands(kotlin/String? = ..., eu.vendeli.tgbot.types.bot/BotCommandScope? = ..., kotlin/Array<out eu.vendeli.tgbot.types.bot/BotCommand>...): eu.vendeli.tgbot.api.botactions/SetMyCommandsAction // eu.vendeli.tgbot.api.botactions/setMyCommands|setMyCommands(kotlin.String?;eu.vendeli.tgbot.types.bot.BotCommandScope?;kotlin.Array<out|eu.vendeli.tgbot.types.bot.BotCommand>...){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/setMyDefaultAdministratorRights(eu.vendeli.tgbot.types.chat/ChatAdministratorRights? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.api.botactions/SetMyDefaultAdministratorRightsAction // eu.vendeli.tgbot.api.botactions/setMyDefaultAdministratorRights|setMyDefaultAdministratorRights(eu.vendeli.tgbot.types.chat.ChatAdministratorRights?;kotlin.Boolean?){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/setMyDescription(kotlin/String? = ..., kotlin/String? = ...): eu.vendeli.tgbot.api.botactions/SetMyDescriptionAction // eu.vendeli.tgbot.api.botactions/setMyDescription|setMyDescription(kotlin.String?;kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/setMyName(kotlin/String? = ..., kotlin/String? = ...): eu.vendeli.tgbot.api.botactions/SetMyNameAction // eu.vendeli.tgbot.api.botactions/setMyName|setMyName(kotlin.String?;kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/setMyShortDescription(kotlin/String? = ..., kotlin/String? = ...): eu.vendeli.tgbot.api.botactions/SetMyShortDescriptionAction // eu.vendeli.tgbot.api.botactions/setMyShortDescription|setMyShortDescription(kotlin.String?;kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/setUserEmojiStatus(kotlin/Long, kotlin/String? = ..., kotlinx.datetime/Instant? = ...): eu.vendeli.tgbot.api.botactions/SetUserEmojiStatusAction // eu.vendeli.tgbot.api.botactions/setUserEmojiStatus|setUserEmojiStatus(kotlin.Long;kotlin.String?;kotlinx.datetime.Instant?){}[0]
final inline fun eu.vendeli.tgbot.api.botactions/setWebhook(kotlin/String): eu.vendeli.tgbot.api.botactions/SetWebhookAction // eu.vendeli.tgbot.api.botactions/setWebhook|setWebhook(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.chat/approveChatJoinRequest(eu.vendeli.tgbot.types/User): eu.vendeli.tgbot.api.chat/ApproveChatJoinRequestAction // eu.vendeli.tgbot.api.chat/approveChatJoinRequest|approveChatJoinRequest(eu.vendeli.tgbot.types.User){}[0]
final inline fun eu.vendeli.tgbot.api.chat/approveChatJoinRequest(kotlin/Long): eu.vendeli.tgbot.api.chat/ApproveChatJoinRequestAction // eu.vendeli.tgbot.api.chat/approveChatJoinRequest|approveChatJoinRequest(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.chat/banChatMember(eu.vendeli.tgbot.types/User, kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.api.chat/BanChatMemberAction // eu.vendeli.tgbot.api.chat/banChatMember|banChatMember(eu.vendeli.tgbot.types.User;kotlinx.datetime.Instant?;kotlin.Boolean?){}[0]
final inline fun eu.vendeli.tgbot.api.chat/banChatMember(kotlin/Long, kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.api.chat/BanChatMemberAction // eu.vendeli.tgbot.api.chat/banChatMember|banChatMember(kotlin.Long;kotlinx.datetime.Instant?;kotlin.Boolean?){}[0]
final inline fun eu.vendeli.tgbot.api.chat/banChatSenderChat(eu.vendeli.tgbot.types.chat/Chat): eu.vendeli.tgbot.api.chat/BanChatSenderChatAction // eu.vendeli.tgbot.api.chat/banChatSenderChat|banChatSenderChat(eu.vendeli.tgbot.types.chat.Chat){}[0]
final inline fun eu.vendeli.tgbot.api.chat/banChatSenderChat(eu.vendeli.tgbot.types/User): eu.vendeli.tgbot.api.chat/BanChatSenderChatAction // eu.vendeli.tgbot.api.chat/banChatSenderChat|banChatSenderChat(eu.vendeli.tgbot.types.User){}[0]
final inline fun eu.vendeli.tgbot.api.chat/banChatSenderChat(kotlin/Long): eu.vendeli.tgbot.api.chat/BanChatSenderChatAction // eu.vendeli.tgbot.api.chat/banChatSenderChat|banChatSenderChat(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.chat/chatAction(eu.vendeli.tgbot.types.chat/ChatAction, kotlin/Int? = ...): eu.vendeli.tgbot.api.chat/SendChatActionAction // eu.vendeli.tgbot.api.chat/chatAction|chatAction(eu.vendeli.tgbot.types.chat.ChatAction;kotlin.Int?){}[0]
final inline fun eu.vendeli.tgbot.api.chat/chatAction(kotlin/Int? = ..., kotlin/Function0<eu.vendeli.tgbot.types.chat/ChatAction>): eu.vendeli.tgbot.api.chat/SendChatActionAction // eu.vendeli.tgbot.api.chat/chatAction|chatAction(kotlin.Int?;kotlin.Function0<eu.vendeli.tgbot.types.chat.ChatAction>){}[0]
final inline fun eu.vendeli.tgbot.api.chat/createChatInviteLink(): eu.vendeli.tgbot.api.chat/CreateChatInviteLinkAction // eu.vendeli.tgbot.api.chat/createChatInviteLink|createChatInviteLink(){}[0]
final inline fun eu.vendeli.tgbot.api.chat/createChatSubscriptionInviteLink(kotlin/Int, kotlin/String? = ..., kotlin.time/Duration = ...): eu.vendeli.tgbot.api.chat/CreateChatSubscriptionInviteLinkAction // eu.vendeli.tgbot.api.chat/createChatSubscriptionInviteLink|createChatSubscriptionInviteLink(kotlin.Int;kotlin.String?;kotlin.time.Duration){}[0]
final inline fun eu.vendeli.tgbot.api.chat/declineChatJoinRequest(eu.vendeli.tgbot.types/User): eu.vendeli.tgbot.api.chat/DeclineChatJoinRequestAction // eu.vendeli.tgbot.api.chat/declineChatJoinRequest|declineChatJoinRequest(eu.vendeli.tgbot.types.User){}[0]
final inline fun eu.vendeli.tgbot.api.chat/declineChatJoinRequest(kotlin/Long): eu.vendeli.tgbot.api.chat/DeclineChatJoinRequestAction // eu.vendeli.tgbot.api.chat/declineChatJoinRequest|declineChatJoinRequest(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.chat/deleteChatPhoto(): eu.vendeli.tgbot.api.chat/DeleteChatPhotoAction // eu.vendeli.tgbot.api.chat/deleteChatPhoto|deleteChatPhoto(){}[0]
final inline fun eu.vendeli.tgbot.api.chat/deleteChatStickerSet(): eu.vendeli.tgbot.api.chat/DeleteChatStickerSetAction // eu.vendeli.tgbot.api.chat/deleteChatStickerSet|deleteChatStickerSet(){}[0]
final inline fun eu.vendeli.tgbot.api.chat/editChatInviteLink(kotlin/String): eu.vendeli.tgbot.api.chat/EditChatInviteLinkAction // eu.vendeli.tgbot.api.chat/editChatInviteLink|editChatInviteLink(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.chat/editChatSubscriptionInviteLink(kotlin/String, kotlin/String? = ...): eu.vendeli.tgbot.api.chat/EditChatSubscriptionInviteLinkAction // eu.vendeli.tgbot.api.chat/editChatSubscriptionInviteLink|editChatSubscriptionInviteLink(kotlin.String;kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.chat/exportChatInviteLink(): eu.vendeli.tgbot.api.chat/ExportChatInviteLinkAction // eu.vendeli.tgbot.api.chat/exportChatInviteLink|exportChatInviteLink(){}[0]
final inline fun eu.vendeli.tgbot.api.chat/getChat(): eu.vendeli.tgbot.api.chat/GetChatAction // eu.vendeli.tgbot.api.chat/getChat|getChat(){}[0]
final inline fun eu.vendeli.tgbot.api.chat/getChatAdministrators(): eu.vendeli.tgbot.api.chat/GetChatAdministratorsAction // eu.vendeli.tgbot.api.chat/getChatAdministrators|getChatAdministrators(){}[0]
final inline fun eu.vendeli.tgbot.api.chat/getChatMember(eu.vendeli.tgbot.types/User): eu.vendeli.tgbot.api.chat/GetChatMemberAction // eu.vendeli.tgbot.api.chat/getChatMember|getChatMember(eu.vendeli.tgbot.types.User){}[0]
final inline fun eu.vendeli.tgbot.api.chat/getChatMember(kotlin/Long): eu.vendeli.tgbot.api.chat/GetChatMemberAction // eu.vendeli.tgbot.api.chat/getChatMember|getChatMember(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.chat/getChatMemberCount(): eu.vendeli.tgbot.api.chat/GetChatMemberCountAction // eu.vendeli.tgbot.api.chat/getChatMemberCount|getChatMemberCount(){}[0]
final inline fun eu.vendeli.tgbot.api.chat/getChatMenuButton(): eu.vendeli.tgbot.api.chat/GetChatMenuButtonAction // eu.vendeli.tgbot.api.chat/getChatMenuButton|getChatMenuButton(){}[0]
final inline fun eu.vendeli.tgbot.api.chat/leaveChat(): eu.vendeli.tgbot.api.chat/LeaveChatAction // eu.vendeli.tgbot.api.chat/leaveChat|leaveChat(){}[0]
final inline fun eu.vendeli.tgbot.api.chat/pinChatMessage(kotlin/Long, kotlin/Boolean? = ...): eu.vendeli.tgbot.api.chat/PinChatMessageAction // eu.vendeli.tgbot.api.chat/pinChatMessage|pinChatMessage(kotlin.Long;kotlin.Boolean?){}[0]
final inline fun eu.vendeli.tgbot.api.chat/promoteChatMember(eu.vendeli.tgbot.types/User): eu.vendeli.tgbot.api.chat/PromoteChatMemberAction // eu.vendeli.tgbot.api.chat/promoteChatMember|promoteChatMember(eu.vendeli.tgbot.types.User){}[0]
final inline fun eu.vendeli.tgbot.api.chat/promoteChatMember(kotlin/Long): eu.vendeli.tgbot.api.chat/PromoteChatMemberAction // eu.vendeli.tgbot.api.chat/promoteChatMember|promoteChatMember(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.chat/restrictChatMember(eu.vendeli.tgbot.types/User, eu.vendeli.tgbot.types.chat/ChatPermissions, kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.api.chat/RestrictChatMemberAction // eu.vendeli.tgbot.api.chat/restrictChatMember|restrictChatMember(eu.vendeli.tgbot.types.User;eu.vendeli.tgbot.types.chat.ChatPermissions;kotlinx.datetime.Instant?;kotlin.Boolean?){}[0]
final inline fun eu.vendeli.tgbot.api.chat/restrictChatMember(eu.vendeli.tgbot.types/User, kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ..., kotlin/Function1<eu.vendeli.tgbot.types.chat/ChatPermissions, kotlin/Unit>): eu.vendeli.tgbot.api.chat/RestrictChatMemberAction // eu.vendeli.tgbot.api.chat/restrictChatMember|restrictChatMember(eu.vendeli.tgbot.types.User;kotlinx.datetime.Instant?;kotlin.Boolean?;kotlin.Function1<eu.vendeli.tgbot.types.chat.ChatPermissions,kotlin.Unit>){}[0]
final inline fun eu.vendeli.tgbot.api.chat/restrictChatMember(kotlin/Long, eu.vendeli.tgbot.types.chat/ChatPermissions, kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.api.chat/RestrictChatMemberAction // eu.vendeli.tgbot.api.chat/restrictChatMember|restrictChatMember(kotlin.Long;eu.vendeli.tgbot.types.chat.ChatPermissions;kotlinx.datetime.Instant?;kotlin.Boolean?){}[0]
final inline fun eu.vendeli.tgbot.api.chat/restrictChatMember(kotlin/Long, kotlinx.datetime/Instant? = ..., kotlin/Boolean? = ..., kotlin/Function1<eu.vendeli.tgbot.types.chat/ChatPermissions, kotlin/Unit>): eu.vendeli.tgbot.api.chat/RestrictChatMemberAction // eu.vendeli.tgbot.api.chat/restrictChatMember|restrictChatMember(kotlin.Long;kotlinx.datetime.Instant?;kotlin.Boolean?;kotlin.Function1<eu.vendeli.tgbot.types.chat.ChatPermissions,kotlin.Unit>){}[0]
final inline fun eu.vendeli.tgbot.api.chat/revokeChatInviteLink(kotlin/String): eu.vendeli.tgbot.api.chat/RevokeChatInviteLinkAction // eu.vendeli.tgbot.api.chat/revokeChatInviteLink|revokeChatInviteLink(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.chat/sendChatAction(eu.vendeli.tgbot.types.chat/ChatAction, kotlin/Int? = ...): eu.vendeli.tgbot.api.chat/SendChatActionAction // eu.vendeli.tgbot.api.chat/sendChatAction|sendChatAction(eu.vendeli.tgbot.types.chat.ChatAction;kotlin.Int?){}[0]
final inline fun eu.vendeli.tgbot.api.chat/sendChatAction(kotlin/Int? = ..., kotlin/Function0<eu.vendeli.tgbot.types.chat/ChatAction>): eu.vendeli.tgbot.api.chat/SendChatActionAction // eu.vendeli.tgbot.api.chat/sendChatAction|sendChatAction(kotlin.Int?;kotlin.Function0<eu.vendeli.tgbot.types.chat.ChatAction>){}[0]
final inline fun eu.vendeli.tgbot.api.chat/setChatAdministratorCustomTitle(eu.vendeli.tgbot.types/User, kotlin/String): eu.vendeli.tgbot.api.chat/SetChatAdministratorCustomTitleAction // eu.vendeli.tgbot.api.chat/setChatAdministratorCustomTitle|setChatAdministratorCustomTitle(eu.vendeli.tgbot.types.User;kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.chat/setChatAdministratorCustomTitle(kotlin/Long, kotlin/String): eu.vendeli.tgbot.api.chat/SetChatAdministratorCustomTitleAction // eu.vendeli.tgbot.api.chat/setChatAdministratorCustomTitle|setChatAdministratorCustomTitle(kotlin.Long;kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.chat/setChatDescription(kotlin/String? = ...): eu.vendeli.tgbot.api.chat/SetChatDescriptionAction // eu.vendeli.tgbot.api.chat/setChatDescription|setChatDescription(kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.chat/setChatMenuButton(eu.vendeli.tgbot.types.keyboard/MenuButton): eu.vendeli.tgbot.api.chat/SetChatMenuButtonAction // eu.vendeli.tgbot.api.chat/setChatMenuButton|setChatMenuButton(eu.vendeli.tgbot.types.keyboard.MenuButton){}[0]
final inline fun eu.vendeli.tgbot.api.chat/setChatPermissions(eu.vendeli.tgbot.types.chat/ChatPermissions, kotlin/Boolean? = ...): eu.vendeli.tgbot.api.chat/SetChatPermissionsAction // eu.vendeli.tgbot.api.chat/setChatPermissions|setChatPermissions(eu.vendeli.tgbot.types.chat.ChatPermissions;kotlin.Boolean?){}[0]
final inline fun eu.vendeli.tgbot.api.chat/setChatPermissions(kotlin/Boolean? = ..., kotlin/Function1<eu.vendeli.tgbot.types.chat/ChatPermissions, kotlin/Unit>): eu.vendeli.tgbot.api.chat/SetChatPermissionsAction // eu.vendeli.tgbot.api.chat/setChatPermissions|setChatPermissions(kotlin.Boolean?;kotlin.Function1<eu.vendeli.tgbot.types.chat.ChatPermissions,kotlin.Unit>){}[0]
final inline fun eu.vendeli.tgbot.api.chat/setChatPhoto(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.chat/SetChatPhotoAction // eu.vendeli.tgbot.api.chat/setChatPhoto|setChatPhoto(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.chat/setChatPhoto(eu.vendeli.tgbot.types.internal/InputFile): eu.vendeli.tgbot.api.chat/SetChatPhotoAction // eu.vendeli.tgbot.api.chat/setChatPhoto|setChatPhoto(eu.vendeli.tgbot.types.internal.InputFile){}[0]
final inline fun eu.vendeli.tgbot.api.chat/setChatPhoto(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.chat/SetChatPhotoAction // eu.vendeli.tgbot.api.chat/setChatPhoto|setChatPhoto(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.chat/setChatStickerSet(kotlin/String): eu.vendeli.tgbot.api.chat/SetChatStickerSetAction // eu.vendeli.tgbot.api.chat/setChatStickerSet|setChatStickerSet(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.chat/setChatTitle(kotlin/String): eu.vendeli.tgbot.api.chat/SetChatTitleAction // eu.vendeli.tgbot.api.chat/setChatTitle|setChatTitle(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.chat/unbanChatMember(eu.vendeli.tgbot.types/User, kotlin/Boolean? = ...): eu.vendeli.tgbot.api.chat/UnbanChatMemberAction // eu.vendeli.tgbot.api.chat/unbanChatMember|unbanChatMember(eu.vendeli.tgbot.types.User;kotlin.Boolean?){}[0]
final inline fun eu.vendeli.tgbot.api.chat/unbanChatMember(kotlin/Long, kotlin/Boolean? = ...): eu.vendeli.tgbot.api.chat/UnbanChatMemberAction // eu.vendeli.tgbot.api.chat/unbanChatMember|unbanChatMember(kotlin.Long;kotlin.Boolean?){}[0]
final inline fun eu.vendeli.tgbot.api.chat/unbanChatSenderChat(eu.vendeli.tgbot.types.chat/Chat): eu.vendeli.tgbot.api.chat/UnbanChatSenderChatAction // eu.vendeli.tgbot.api.chat/unbanChatSenderChat|unbanChatSenderChat(eu.vendeli.tgbot.types.chat.Chat){}[0]
final inline fun eu.vendeli.tgbot.api.chat/unbanChatSenderChat(eu.vendeli.tgbot.types/User): eu.vendeli.tgbot.api.chat/UnbanChatSenderChatAction // eu.vendeli.tgbot.api.chat/unbanChatSenderChat|unbanChatSenderChat(eu.vendeli.tgbot.types.User){}[0]
final inline fun eu.vendeli.tgbot.api.chat/unbanChatSenderChat(kotlin/Long): eu.vendeli.tgbot.api.chat/UnbanChatSenderChatAction // eu.vendeli.tgbot.api.chat/unbanChatSenderChat|unbanChatSenderChat(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.chat/unpinAllChatMessages(): eu.vendeli.tgbot.api.chat/UnpinAllChatMessagesAction // eu.vendeli.tgbot.api.chat/unpinAllChatMessages|unpinAllChatMessages(){}[0]
final inline fun eu.vendeli.tgbot.api.chat/unpinChatMessage(kotlin/Long): eu.vendeli.tgbot.api.chat/UnpinChatMessageAction // eu.vendeli.tgbot.api.chat/unpinChatMessage|unpinChatMessage(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.forum/closeForumTopic(kotlin/Int): eu.vendeli.tgbot.api.forum/CloseForumTopicAction // eu.vendeli.tgbot.api.forum/closeForumTopic|closeForumTopic(kotlin.Int){}[0]
final inline fun eu.vendeli.tgbot.api.forum/closeGeneralForumTopic(): eu.vendeli.tgbot.api.forum/CloseGeneralForumTopicAction // eu.vendeli.tgbot.api.forum/closeGeneralForumTopic|closeGeneralForumTopic(){}[0]
final inline fun eu.vendeli.tgbot.api.forum/createForumTopic(kotlin/String, eu.vendeli.tgbot.types.forum/IconColor? = ..., kotlin/String? = ...): eu.vendeli.tgbot.api.forum/CreateForumTopicAction // eu.vendeli.tgbot.api.forum/createForumTopic|createForumTopic(kotlin.String;eu.vendeli.tgbot.types.forum.IconColor?;kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.forum/deleteForumTopic(kotlin/Int): eu.vendeli.tgbot.api.forum/DeleteForumTopicAction // eu.vendeli.tgbot.api.forum/deleteForumTopic|deleteForumTopic(kotlin.Int){}[0]
final inline fun eu.vendeli.tgbot.api.forum/editForumTopic(kotlin/Int, kotlin/String? = ..., kotlin/String? = ...): eu.vendeli.tgbot.api.forum/EditForumTopicAction // eu.vendeli.tgbot.api.forum/editForumTopic|editForumTopic(kotlin.Int;kotlin.String?;kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.forum/editGeneralForumTopic(kotlin/String): eu.vendeli.tgbot.api.forum/EditGeneralForumTopicAction // eu.vendeli.tgbot.api.forum/editGeneralForumTopic|editGeneralForumTopic(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.forum/getForumTopicIconStickers(): eu.vendeli.tgbot.api.forum/GetForumTopicIconStickersAction // eu.vendeli.tgbot.api.forum/getForumTopicIconStickers|getForumTopicIconStickers(){}[0]
final inline fun eu.vendeli.tgbot.api.forum/hideGeneralForumTopic(): eu.vendeli.tgbot.api.forum/HideGeneralForumTopicAction // eu.vendeli.tgbot.api.forum/hideGeneralForumTopic|hideGeneralForumTopic(){}[0]
final inline fun eu.vendeli.tgbot.api.forum/reopenForumTopic(kotlin/Int): eu.vendeli.tgbot.api.forum/ReopenForumTopicAction // eu.vendeli.tgbot.api.forum/reopenForumTopic|reopenForumTopic(kotlin.Int){}[0]
final inline fun eu.vendeli.tgbot.api.forum/reopenGeneralForumTopic(): eu.vendeli.tgbot.api.forum/ReopenGeneralForumTopicAction // eu.vendeli.tgbot.api.forum/reopenGeneralForumTopic|reopenGeneralForumTopic(){}[0]
final inline fun eu.vendeli.tgbot.api.forum/unhideGeneralForumTopic(): eu.vendeli.tgbot.api.forum/UnhideGeneralForumTopicAction // eu.vendeli.tgbot.api.forum/unhideGeneralForumTopic|unhideGeneralForumTopic(){}[0]
final inline fun eu.vendeli.tgbot.api.forum/unpinAllForumTopicMessages(kotlin/Int): eu.vendeli.tgbot.api.forum/UnpinAllForumTopicMessagesAction // eu.vendeli.tgbot.api.forum/unpinAllForumTopicMessages|unpinAllForumTopicMessages(kotlin.Int){}[0]
final inline fun eu.vendeli.tgbot.api.forum/unpinAllGeneralForumTopicMessages(): eu.vendeli.tgbot.api.forum/UnpinAllGeneralForumTopicMessagesAction // eu.vendeli.tgbot.api.forum/unpinAllGeneralForumTopicMessages|unpinAllGeneralForumTopicMessages(){}[0]
final inline fun eu.vendeli.tgbot.api.media/animation(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendAnimationAction // eu.vendeli.tgbot.api.media/animation|animation(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/animation(eu.vendeli.tgbot.types.internal/InputFile): eu.vendeli.tgbot.api.media/SendAnimationAction // eu.vendeli.tgbot.api.media/animation|animation(eu.vendeli.tgbot.types.internal.InputFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/animation(kotlin/ByteArray): eu.vendeli.tgbot.api.media/SendAnimationAction // eu.vendeli.tgbot.api.media/animation|animation(kotlin.ByteArray){}[0]
final inline fun eu.vendeli.tgbot.api.media/animation(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendAnimationAction // eu.vendeli.tgbot.api.media/animation|animation(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/audio(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendAudioAction // eu.vendeli.tgbot.api.media/audio|audio(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/audio(eu.vendeli.tgbot.types.internal/InputFile): eu.vendeli.tgbot.api.media/SendAudioAction // eu.vendeli.tgbot.api.media/audio|audio(eu.vendeli.tgbot.types.internal.InputFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/audio(kotlin/ByteArray): eu.vendeli.tgbot.api.media/SendAudioAction // eu.vendeli.tgbot.api.media/audio|audio(kotlin.ByteArray){}[0]
final inline fun eu.vendeli.tgbot.api.media/audio(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendAudioAction // eu.vendeli.tgbot.api.media/audio|audio(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/document(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendDocumentAction // eu.vendeli.tgbot.api.media/document|document(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/document(eu.vendeli.tgbot.types.internal/InputFile): eu.vendeli.tgbot.api.media/SendDocumentAction // eu.vendeli.tgbot.api.media/document|document(eu.vendeli.tgbot.types.internal.InputFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/document(kotlin/ByteArray): eu.vendeli.tgbot.api.media/SendDocumentAction // eu.vendeli.tgbot.api.media/document|document(kotlin.ByteArray){}[0]
final inline fun eu.vendeli.tgbot.api.media/document(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendDocumentAction // eu.vendeli.tgbot.api.media/document|document(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/mediaGroup(kotlin/Array<out eu.vendeli.tgbot.types.media/InputMedia.Audio>...): eu.vendeli.tgbot.api.media/SendMediaGroupAction // eu.vendeli.tgbot.api.media/mediaGroup|mediaGroup(kotlin.Array<out|eu.vendeli.tgbot.types.media.InputMedia.Audio>...){}[0]
final inline fun eu.vendeli.tgbot.api.media/mediaGroup(kotlin/Array<out eu.vendeli.tgbot.types.media/InputMedia.Document>...): eu.vendeli.tgbot.api.media/SendMediaGroupAction // eu.vendeli.tgbot.api.media/mediaGroup|mediaGroup(kotlin.Array<out|eu.vendeli.tgbot.types.media.InputMedia.Document>...){}[0]
final inline fun eu.vendeli.tgbot.api.media/mediaGroup(kotlin/Array<out eu.vendeli.tgbot.types.media/InputMedia.Photo>...): eu.vendeli.tgbot.api.media/SendMediaGroupAction // eu.vendeli.tgbot.api.media/mediaGroup|mediaGroup(kotlin.Array<out|eu.vendeli.tgbot.types.media.InputMedia.Photo>...){}[0]
final inline fun eu.vendeli.tgbot.api.media/mediaGroup(kotlin/Array<out eu.vendeli.tgbot.types.media/InputMedia.Video>...): eu.vendeli.tgbot.api.media/SendMediaGroupAction // eu.vendeli.tgbot.api.media/mediaGroup|mediaGroup(kotlin.Array<out|eu.vendeli.tgbot.types.media.InputMedia.Video>...){}[0]
final inline fun eu.vendeli.tgbot.api.media/photo(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendPhotoAction // eu.vendeli.tgbot.api.media/photo|photo(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/photo(eu.vendeli.tgbot.types.internal/InputFile): eu.vendeli.tgbot.api.media/SendPhotoAction // eu.vendeli.tgbot.api.media/photo|photo(eu.vendeli.tgbot.types.internal.InputFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/photo(kotlin/ByteArray): eu.vendeli.tgbot.api.media/SendPhotoAction // eu.vendeli.tgbot.api.media/photo|photo(kotlin.ByteArray){}[0]
final inline fun eu.vendeli.tgbot.api.media/photo(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendPhotoAction // eu.vendeli.tgbot.api.media/photo|photo(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendAnimation(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendAnimationAction // eu.vendeli.tgbot.api.media/sendAnimation|sendAnimation(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendAnimation(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendAnimationAction // eu.vendeli.tgbot.api.media/sendAnimation|sendAnimation(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendAudio(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendAudioAction // eu.vendeli.tgbot.api.media/sendAudio|sendAudio(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendAudio(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendAudioAction // eu.vendeli.tgbot.api.media/sendAudio|sendAudio(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendDocument(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendDocumentAction // eu.vendeli.tgbot.api.media/sendDocument|sendDocument(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendDocument(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendDocumentAction // eu.vendeli.tgbot.api.media/sendDocument|sendDocument(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendMediaGroup(kotlin.collections/List<eu.vendeli.tgbot.types.media/InputMedia>): eu.vendeli.tgbot.api.media/SendMediaGroupAction // eu.vendeli.tgbot.api.media/sendMediaGroup|sendMediaGroup(kotlin.collections.List<eu.vendeli.tgbot.types.media.InputMedia>){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendMediaGroup(kotlin/Array<out eu.vendeli.tgbot.types.media/InputMedia>...): eu.vendeli.tgbot.api.media/SendMediaGroupAction // eu.vendeli.tgbot.api.media/sendMediaGroup|sendMediaGroup(kotlin.Array<out|eu.vendeli.tgbot.types.media.InputMedia>...){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendPaidMedia(kotlin/Int, kotlin.collections/List<eu.vendeli.tgbot.types.media/InputPaidMedia>): eu.vendeli.tgbot.api.media/SendPaidMediaAction // eu.vendeli.tgbot.api.media/sendPaidMedia|sendPaidMedia(kotlin.Int;kotlin.collections.List<eu.vendeli.tgbot.types.media.InputPaidMedia>){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendPaidMedia(kotlin/Int, kotlin/Array<out eu.vendeli.tgbot.types.media/InputPaidMedia>...): eu.vendeli.tgbot.api.media/SendPaidMediaAction // eu.vendeli.tgbot.api.media/sendPaidMedia|sendPaidMedia(kotlin.Int;kotlin.Array<out|eu.vendeli.tgbot.types.media.InputPaidMedia>...){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendPhoto(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendPhotoAction // eu.vendeli.tgbot.api.media/sendPhoto|sendPhoto(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendPhoto(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendPhotoAction // eu.vendeli.tgbot.api.media/sendPhoto|sendPhoto(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendSticker(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendStickerAction // eu.vendeli.tgbot.api.media/sendSticker|sendSticker(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendSticker(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendStickerAction // eu.vendeli.tgbot.api.media/sendSticker|sendSticker(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendVideo(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendVideoAction // eu.vendeli.tgbot.api.media/sendVideo|sendVideo(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendVideo(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendVideoAction // eu.vendeli.tgbot.api.media/sendVideo|sendVideo(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendVideoNote(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendVideoNoteAction // eu.vendeli.tgbot.api.media/sendVideoNote|sendVideoNote(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendVideoNote(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendVideoNoteAction // eu.vendeli.tgbot.api.media/sendVideoNote|sendVideoNote(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendVoice(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendVoiceAction // eu.vendeli.tgbot.api.media/sendVoice|sendVoice(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/sendVoice(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendVoiceAction // eu.vendeli.tgbot.api.media/sendVoice|sendVoice(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/sticker(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendStickerAction // eu.vendeli.tgbot.api.media/sticker|sticker(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/sticker(eu.vendeli.tgbot.types.internal/InputFile): eu.vendeli.tgbot.api.media/SendStickerAction // eu.vendeli.tgbot.api.media/sticker|sticker(eu.vendeli.tgbot.types.internal.InputFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/sticker(kotlin/ByteArray): eu.vendeli.tgbot.api.media/SendStickerAction // eu.vendeli.tgbot.api.media/sticker|sticker(kotlin.ByteArray){}[0]
final inline fun eu.vendeli.tgbot.api.media/sticker(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendStickerAction // eu.vendeli.tgbot.api.media/sticker|sticker(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/video(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendVideoAction // eu.vendeli.tgbot.api.media/video|video(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/video(eu.vendeli.tgbot.types.internal/InputFile): eu.vendeli.tgbot.api.media/SendVideoAction // eu.vendeli.tgbot.api.media/video|video(eu.vendeli.tgbot.types.internal.InputFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/video(kotlin/ByteArray): eu.vendeli.tgbot.api.media/SendVideoAction // eu.vendeli.tgbot.api.media/video|video(kotlin.ByteArray){}[0]
final inline fun eu.vendeli.tgbot.api.media/video(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendVideoAction // eu.vendeli.tgbot.api.media/video|video(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/videoNote(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendVideoNoteAction // eu.vendeli.tgbot.api.media/videoNote|videoNote(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/videoNote(eu.vendeli.tgbot.types.internal/InputFile): eu.vendeli.tgbot.api.media/SendVideoNoteAction // eu.vendeli.tgbot.api.media/videoNote|videoNote(eu.vendeli.tgbot.types.internal.InputFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/videoNote(kotlin/ByteArray): eu.vendeli.tgbot.api.media/SendVideoNoteAction // eu.vendeli.tgbot.api.media/videoNote|videoNote(kotlin.ByteArray){}[0]
final inline fun eu.vendeli.tgbot.api.media/videoNote(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendVideoNoteAction // eu.vendeli.tgbot.api.media/videoNote|videoNote(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.media/voice(eu.vendeli.tgbot.types.internal/ImplicitFile): eu.vendeli.tgbot.api.media/SendVoiceAction // eu.vendeli.tgbot.api.media/voice|voice(eu.vendeli.tgbot.types.internal.ImplicitFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/voice(eu.vendeli.tgbot.types.internal/InputFile): eu.vendeli.tgbot.api.media/SendVoiceAction // eu.vendeli.tgbot.api.media/voice|voice(eu.vendeli.tgbot.types.internal.InputFile){}[0]
final inline fun eu.vendeli.tgbot.api.media/voice(kotlin/ByteArray): eu.vendeli.tgbot.api.media/SendVoiceAction // eu.vendeli.tgbot.api.media/voice|voice(kotlin.ByteArray){}[0]
final inline fun eu.vendeli.tgbot.api.media/voice(kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.media/SendVoiceAction // eu.vendeli.tgbot.api.media/voice|voice(kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.message/copyMessage(eu.vendeli.tgbot.types.chat/Chat, kotlin/Long): eu.vendeli.tgbot.api.message/CopyMessageAction // eu.vendeli.tgbot.api.message/copyMessage|copyMessage(eu.vendeli.tgbot.types.chat.Chat;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/copyMessage(eu.vendeli.tgbot.types.internal/Identifier, kotlin/Long): eu.vendeli.tgbot.api.message/CopyMessageAction // eu.vendeli.tgbot.api.message/copyMessage|copyMessage(eu.vendeli.tgbot.types.internal.Identifier;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/copyMessage(eu.vendeli.tgbot.types/User, kotlin/Long): eu.vendeli.tgbot.api.message/CopyMessageAction // eu.vendeli.tgbot.api.message/copyMessage|copyMessage(eu.vendeli.tgbot.types.User;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/copyMessage(kotlin/Long, kotlin/Long): eu.vendeli.tgbot.api.message/CopyMessageAction // eu.vendeli.tgbot.api.message/copyMessage|copyMessage(kotlin.Long;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/copyMessage(kotlin/String, kotlin/Long): eu.vendeli.tgbot.api.message/CopyMessageAction // eu.vendeli.tgbot.api.message/copyMessage|copyMessage(kotlin.String;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/copyMessages(eu.vendeli.tgbot.types.chat/Chat, kotlin/LongArray...): eu.vendeli.tgbot.api.message/CopyMessagesAction // eu.vendeli.tgbot.api.message/copyMessages|copyMessages(eu.vendeli.tgbot.types.chat.Chat;kotlin.LongArray...){}[0]
final inline fun eu.vendeli.tgbot.api.message/copyMessages(eu.vendeli.tgbot.types.internal/Identifier, kotlin.collections/List<kotlin/Long>): eu.vendeli.tgbot.api.message/CopyMessagesAction // eu.vendeli.tgbot.api.message/copyMessages|copyMessages(eu.vendeli.tgbot.types.internal.Identifier;kotlin.collections.List<kotlin.Long>){}[0]
final inline fun eu.vendeli.tgbot.api.message/copyMessages(eu.vendeli.tgbot.types/User, kotlin/LongArray...): eu.vendeli.tgbot.api.message/CopyMessagesAction // eu.vendeli.tgbot.api.message/copyMessages|copyMessages(eu.vendeli.tgbot.types.User;kotlin.LongArray...){}[0]
final inline fun eu.vendeli.tgbot.api.message/copyMessages(kotlin/Long, kotlin/LongArray...): eu.vendeli.tgbot.api.message/CopyMessagesAction // eu.vendeli.tgbot.api.message/copyMessages|copyMessages(kotlin.Long;kotlin.LongArray...){}[0]
final inline fun eu.vendeli.tgbot.api.message/copyMessages(kotlin/String, kotlin/LongArray...): eu.vendeli.tgbot.api.message/CopyMessagesAction // eu.vendeli.tgbot.api.message/copyMessages|copyMessages(kotlin.String;kotlin.LongArray...){}[0]
final inline fun eu.vendeli.tgbot.api.message/deleteMessage(kotlin/Long): eu.vendeli.tgbot.api.message/DeleteMessageAction // eu.vendeli.tgbot.api.message/deleteMessage|deleteMessage(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/deleteMessages(kotlin.collections/List<kotlin/Long>): eu.vendeli.tgbot.api.message/DeleteMessagesAction // eu.vendeli.tgbot.api.message/deleteMessages|deleteMessages(kotlin.collections.List<kotlin.Long>){}[0]
final inline fun eu.vendeli.tgbot.api.message/deleteMessages(kotlin/LongArray...): eu.vendeli.tgbot.api.message/DeleteMessagesAction // eu.vendeli.tgbot.api.message/deleteMessages|deleteMessages(kotlin.LongArray...){}[0]
final inline fun eu.vendeli.tgbot.api.message/editMarkup(): eu.vendeli.tgbot.api.message/EditMessageReplyMarkupAction // eu.vendeli.tgbot.api.message/editMarkup|editMarkup(){}[0]
final inline fun eu.vendeli.tgbot.api.message/editMarkup(kotlin/Long): eu.vendeli.tgbot.api.message/EditMessageReplyMarkupAction // eu.vendeli.tgbot.api.message/editMarkup|editMarkup(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/editMessageCaption(): eu.vendeli.tgbot.api.message/EditMessageCaptionAction // eu.vendeli.tgbot.api.message/editMessageCaption|editMessageCaption(){}[0]
final inline fun eu.vendeli.tgbot.api.message/editMessageCaption(kotlin/Long): eu.vendeli.tgbot.api.message/EditMessageCaptionAction // eu.vendeli.tgbot.api.message/editMessageCaption|editMessageCaption(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/editMessageLiveLocation(kotlin/Float, kotlin/Float): eu.vendeli.tgbot.api.message/EditMessageLiveLocationAction // eu.vendeli.tgbot.api.message/editMessageLiveLocation|editMessageLiveLocation(kotlin.Float;kotlin.Float){}[0]
final inline fun eu.vendeli.tgbot.api.message/editMessageLiveLocation(kotlin/Long, kotlin/Float, kotlin/Float): eu.vendeli.tgbot.api.message/EditMessageLiveLocationAction // eu.vendeli.tgbot.api.message/editMessageLiveLocation|editMessageLiveLocation(kotlin.Long;kotlin.Float;kotlin.Float){}[0]
final inline fun eu.vendeli.tgbot.api.message/editMessageMedia(eu.vendeli.tgbot.types.media/InputMedia): eu.vendeli.tgbot.api.message/EditMessageMediaAction // eu.vendeli.tgbot.api.message/editMessageMedia|editMessageMedia(eu.vendeli.tgbot.types.media.InputMedia){}[0]
final inline fun eu.vendeli.tgbot.api.message/editMessageMedia(kotlin/Long, eu.vendeli.tgbot.types.media/InputMedia): eu.vendeli.tgbot.api.message/EditMessageMediaAction // eu.vendeli.tgbot.api.message/editMessageMedia|editMessageMedia(kotlin.Long;eu.vendeli.tgbot.types.media.InputMedia){}[0]
final inline fun eu.vendeli.tgbot.api.message/editMessageReplyMarkup(): eu.vendeli.tgbot.api.message/EditMessageReplyMarkupAction // eu.vendeli.tgbot.api.message/editMessageReplyMarkup|editMessageReplyMarkup(){}[0]
final inline fun eu.vendeli.tgbot.api.message/editMessageReplyMarkup(kotlin/Long): eu.vendeli.tgbot.api.message/EditMessageReplyMarkupAction // eu.vendeli.tgbot.api.message/editMessageReplyMarkup|editMessageReplyMarkup(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/editMessageText(kotlin/Long, kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.message/EditMessageTextAction // eu.vendeli.tgbot.api.message/editMessageText|editMessageText(kotlin.Long;kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.message/editText(kotlin/Long, kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api.message/EditMessageTextAction // eu.vendeli.tgbot.api.message/editText|editText(kotlin.Long;kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.message/forwardMessage(eu.vendeli.tgbot.types.chat/Chat, kotlin/Long): eu.vendeli.tgbot.api.message/ForwardMessageAction // eu.vendeli.tgbot.api.message/forwardMessage|forwardMessage(eu.vendeli.tgbot.types.chat.Chat;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/forwardMessage(eu.vendeli.tgbot.types.internal/Identifier, kotlin/Long): eu.vendeli.tgbot.api.message/ForwardMessageAction // eu.vendeli.tgbot.api.message/forwardMessage|forwardMessage(eu.vendeli.tgbot.types.internal.Identifier;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/forwardMessage(eu.vendeli.tgbot.types/User, kotlin/Long): eu.vendeli.tgbot.api.message/ForwardMessageAction // eu.vendeli.tgbot.api.message/forwardMessage|forwardMessage(eu.vendeli.tgbot.types.User;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/forwardMessage(kotlin/Long, kotlin/Long): eu.vendeli.tgbot.api.message/ForwardMessageAction // eu.vendeli.tgbot.api.message/forwardMessage|forwardMessage(kotlin.Long;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/forwardMessage(kotlin/String, kotlin/Long): eu.vendeli.tgbot.api.message/ForwardMessageAction // eu.vendeli.tgbot.api.message/forwardMessage|forwardMessage(kotlin.String;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.message/forwardMessages(eu.vendeli.tgbot.types.chat/Chat, kotlin/LongArray...): eu.vendeli.tgbot.api.message/ForwardMessagesAction // eu.vendeli.tgbot.api.message/forwardMessages|forwardMessages(eu.vendeli.tgbot.types.chat.Chat;kotlin.LongArray...){}[0]
final inline fun eu.vendeli.tgbot.api.message/forwardMessages(eu.vendeli.tgbot.types.internal/Identifier, kotlin.collections/List<kotlin/Long>): eu.vendeli.tgbot.api.message/ForwardMessagesAction // eu.vendeli.tgbot.api.message/forwardMessages|forwardMessages(eu.vendeli.tgbot.types.internal.Identifier;kotlin.collections.List<kotlin.Long>){}[0]
final inline fun eu.vendeli.tgbot.api.message/forwardMessages(eu.vendeli.tgbot.types/User, kotlin/LongArray...): eu.vendeli.tgbot.api.message/ForwardMessagesAction // eu.vendeli.tgbot.api.message/forwardMessages|forwardMessages(eu.vendeli.tgbot.types.User;kotlin.LongArray...){}[0]
final inline fun eu.vendeli.tgbot.api.message/forwardMessages(kotlin/Long, kotlin/LongArray...): eu.vendeli.tgbot.api.message/ForwardMessagesAction // eu.vendeli.tgbot.api.message/forwardMessages|forwardMessages(kotlin.Long;kotlin.LongArray...){}[0]
final inline fun eu.vendeli.tgbot.api.message/forwardMessages(kotlin/String, kotlin/LongArray...): eu.vendeli.tgbot.api.message/ForwardMessagesAction // eu.vendeli.tgbot.api.message/forwardMessages|forwardMessages(kotlin.String;kotlin.LongArray...){}[0]
final inline fun eu.vendeli.tgbot.api.message/message(kotlin/String): eu.vendeli.tgbot.api.message/SendMessageAction // eu.vendeli.tgbot.api.message/message|message(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.message/sendMessage(kotlin/String): eu.vendeli.tgbot.api.message/SendMessageAction // eu.vendeli.tgbot.api.message/sendMessage|sendMessage(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/addStickerToSet(kotlin/Long, kotlin/String, eu.vendeli.tgbot.types.media/InputSticker): eu.vendeli.tgbot.api.stickerset/AddStickerToSetAction // eu.vendeli.tgbot.api.stickerset/addStickerToSet|addStickerToSet(kotlin.Long;kotlin.String;eu.vendeli.tgbot.types.media.InputSticker){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/addStickerToSet(kotlin/Long, kotlin/String, kotlin/Function0<eu.vendeli.tgbot.types.media/InputSticker>): eu.vendeli.tgbot.api.stickerset/AddStickerToSetAction // eu.vendeli.tgbot.api.stickerset/addStickerToSet|addStickerToSet(kotlin.Long;kotlin.String;kotlin.Function0<eu.vendeli.tgbot.types.media.InputSticker>){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/createNewStickerSet(kotlin/Long, kotlin/String, kotlin/String, kotlin.collections/List<eu.vendeli.tgbot.types.media/InputSticker>): eu.vendeli.tgbot.api.stickerset/CreateNewStickerSetAction // eu.vendeli.tgbot.api.stickerset/createNewStickerSet|createNewStickerSet(kotlin.Long;kotlin.String;kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.media.InputSticker>){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/deleteStickerFromSet(kotlin/String): eu.vendeli.tgbot.api.stickerset/DeleteStickerFromSetAction // eu.vendeli.tgbot.api.stickerset/deleteStickerFromSet|deleteStickerFromSet(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/deleteStickerSet(kotlin/String): eu.vendeli.tgbot.api.stickerset/DeleteStickerSetAction // eu.vendeli.tgbot.api.stickerset/deleteStickerSet|deleteStickerSet(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/getCustomEmojiStickers(kotlin.collections/List<kotlin/String>): eu.vendeli.tgbot.api.stickerset/GetCustomEmojiStickersAction // eu.vendeli.tgbot.api.stickerset/getCustomEmojiStickers|getCustomEmojiStickers(kotlin.collections.List<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/getCustomEmojiStickers(kotlin/Array<out kotlin/String>...): eu.vendeli.tgbot.api.stickerset/GetCustomEmojiStickersAction // eu.vendeli.tgbot.api.stickerset/getCustomEmojiStickers|getCustomEmojiStickers(kotlin.Array<out|kotlin.String>...){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/getStickerSet(kotlin/String): eu.vendeli.tgbot.api.stickerset/GetStickerSetAction // eu.vendeli.tgbot.api.stickerset/getStickerSet|getStickerSet(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/replaceStickerInSet(kotlin/Long, kotlin/String, kotlin/String, eu.vendeli.tgbot.types.media/InputSticker): eu.vendeli.tgbot.api.stickerset/ReplaceStickerInSetAction // eu.vendeli.tgbot.api.stickerset/replaceStickerInSet|replaceStickerInSet(kotlin.Long;kotlin.String;kotlin.String;eu.vendeli.tgbot.types.media.InputSticker){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/setCustomEmojiStickerSetThumbnail(kotlin/String, kotlin/String? = ...): eu.vendeli.tgbot.api.stickerset/SetCustomEmojiStickerSetThumbnailAction // eu.vendeli.tgbot.api.stickerset/setCustomEmojiStickerSetThumbnail|setCustomEmojiStickerSetThumbnail(kotlin.String;kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/setStickerEmojiList(kotlin/String, kotlin.collections/List<kotlin/String>): eu.vendeli.tgbot.api.stickerset/SetStickerEmojiListAction // eu.vendeli.tgbot.api.stickerset/setStickerEmojiList|setStickerEmojiList(kotlin.String;kotlin.collections.List<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/setStickerKeywords(kotlin/String, kotlin.collections/List<kotlin/String>? = ...): eu.vendeli.tgbot.api.stickerset/SetStickerKeywordsAction // eu.vendeli.tgbot.api.stickerset/setStickerKeywords|setStickerKeywords(kotlin.String;kotlin.collections.List<kotlin.String>?){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/setStickerMaskPosition(kotlin/String, eu.vendeli.tgbot.types.media/MaskPosition? = ...): eu.vendeli.tgbot.api.stickerset/SetStickerMaskPositionAction // eu.vendeli.tgbot.api.stickerset/setStickerMaskPosition|setStickerMaskPosition(kotlin.String;eu.vendeli.tgbot.types.media.MaskPosition?){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/setStickerPositionInSet(kotlin/String, kotlin/Int): eu.vendeli.tgbot.api.stickerset/SetStickerPositionInSetAction // eu.vendeli.tgbot.api.stickerset/setStickerPositionInSet|setStickerPositionInSet(kotlin.String;kotlin.Int){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/setStickerSetThumbnail(kotlin/String, kotlin/Long, eu.vendeli.tgbot.types.media/StickerFormat, eu.vendeli.tgbot.types.internal/ImplicitFile? = ...): eu.vendeli.tgbot.api.stickerset/SetStickerSetThumbnailAction // eu.vendeli.tgbot.api.stickerset/setStickerSetThumbnail|setStickerSetThumbnail(kotlin.String;kotlin.Long;eu.vendeli.tgbot.types.media.StickerFormat;eu.vendeli.tgbot.types.internal.ImplicitFile?){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/setStickerSetTitle(kotlin/String, kotlin/String): eu.vendeli.tgbot.api.stickerset/SetStickerSetTitleAction // eu.vendeli.tgbot.api.stickerset/setStickerSetTitle|setStickerSetTitle(kotlin.String;kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api.stickerset/uploadStickerFile(kotlin/Long, eu.vendeli.tgbot.types.internal/InputFile, eu.vendeli.tgbot.types.media/StickerFormat): eu.vendeli.tgbot.api.stickerset/UploadStickerFileAction // eu.vendeli.tgbot.api.stickerset/uploadStickerFile|uploadStickerFile(kotlin.Long;eu.vendeli.tgbot.types.internal.InputFile;eu.vendeli.tgbot.types.media.StickerFormat){}[0]
final inline fun eu.vendeli.tgbot.api.verification/removeChatVerification(eu.vendeli.tgbot.types.chat/Chat): eu.vendeli.tgbot.api.verification/RemoveChatVerificationAction // eu.vendeli.tgbot.api.verification/removeChatVerification|removeChatVerification(eu.vendeli.tgbot.types.chat.Chat){}[0]
final inline fun eu.vendeli.tgbot.api.verification/removeChatVerification(kotlin/Long): eu.vendeli.tgbot.api.verification/RemoveChatVerificationAction // eu.vendeli.tgbot.api.verification/removeChatVerification|removeChatVerification(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.verification/removeUserVerification(eu.vendeli.tgbot.types/User): eu.vendeli.tgbot.api.verification/RemoveUserVerificationAction // eu.vendeli.tgbot.api.verification/removeUserVerification|removeUserVerification(eu.vendeli.tgbot.types.User){}[0]
final inline fun eu.vendeli.tgbot.api.verification/removeUserVerification(kotlin/Long): eu.vendeli.tgbot.api.verification/RemoveUserVerificationAction // eu.vendeli.tgbot.api.verification/removeUserVerification|removeUserVerification(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api.verification/verifyChat(eu.vendeli.tgbot.types.chat/Chat, kotlin/Function0<kotlin/String?> = ...): eu.vendeli.tgbot.api.verification/VerifyChatAction // eu.vendeli.tgbot.api.verification/verifyChat|verifyChat(eu.vendeli.tgbot.types.chat.Chat;kotlin.Function0<kotlin.String?>){}[0]
final inline fun eu.vendeli.tgbot.api.verification/verifyChat(kotlin/Long, kotlin/Function0<kotlin/String?> = ...): eu.vendeli.tgbot.api.verification/VerifyChatAction // eu.vendeli.tgbot.api.verification/verifyChat|verifyChat(kotlin.Long;kotlin.Function0<kotlin.String?>){}[0]
final inline fun eu.vendeli.tgbot.api.verification/verifyChat(kotlin/Long, kotlin/String? = ...): eu.vendeli.tgbot.api.verification/VerifyChatAction // eu.vendeli.tgbot.api.verification/verifyChat|verifyChat(kotlin.Long;kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api.verification/verifyUser(eu.vendeli.tgbot.types/User, kotlin/Function0<kotlin/String?> = ...): eu.vendeli.tgbot.api.verification/VerifyUserAction // eu.vendeli.tgbot.api.verification/verifyUser|verifyUser(eu.vendeli.tgbot.types.User;kotlin.Function0<kotlin.String?>){}[0]
final inline fun eu.vendeli.tgbot.api.verification/verifyUser(kotlin/Long, kotlin/Function0<kotlin/String?> = ...): eu.vendeli.tgbot.api.verification/VerifyUserAction // eu.vendeli.tgbot.api.verification/verifyUser|verifyUser(kotlin.Long;kotlin.Function0<kotlin.String?>){}[0]
final inline fun eu.vendeli.tgbot.api.verification/verifyUser(kotlin/Long, kotlin/String? = ...): eu.vendeli.tgbot.api.verification/VerifyUserAction // eu.vendeli.tgbot.api.verification/verifyUser|verifyUser(kotlin.Long;kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api/contact(kotlin/String, kotlin/String): eu.vendeli.tgbot.api/SendContactAction // eu.vendeli.tgbot.api/contact|contact(kotlin.String;kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api/dice(kotlin/String? = ...): eu.vendeli.tgbot.api/SendDiceAction // eu.vendeli.tgbot.api/dice|dice(kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api/game(kotlin/String): eu.vendeli.tgbot.api/SendGameAction // eu.vendeli.tgbot.api/game|game(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api/getFile(kotlin/String): eu.vendeli.tgbot.api/GetFileAction // eu.vendeli.tgbot.api/getFile|getFile(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api/getGameHighScores(eu.vendeli.tgbot.types/User): eu.vendeli.tgbot.api/GetGameHighScoresAction // eu.vendeli.tgbot.api/getGameHighScores|getGameHighScores(eu.vendeli.tgbot.types.User){}[0]
final inline fun eu.vendeli.tgbot.api/getGameHighScores(eu.vendeli.tgbot.types/User, kotlin/Long): eu.vendeli.tgbot.api/GetGameHighScoresAction // eu.vendeli.tgbot.api/getGameHighScores|getGameHighScores(eu.vendeli.tgbot.types.User;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api/getGameHighScores(kotlin/Long): eu.vendeli.tgbot.api/GetGameHighScoresAction // eu.vendeli.tgbot.api/getGameHighScores|getGameHighScores(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api/getGameHighScores(kotlin/Long, kotlin/Long): eu.vendeli.tgbot.api/GetGameHighScoresAction // eu.vendeli.tgbot.api/getGameHighScores|getGameHighScores(kotlin.Long;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api/getUserChatBoosts(eu.vendeli.tgbot.types/User): eu.vendeli.tgbot.api/GetUserChatBoostsAction // eu.vendeli.tgbot.api/getUserChatBoosts|getUserChatBoosts(eu.vendeli.tgbot.types.User){}[0]
final inline fun eu.vendeli.tgbot.api/getUserChatBoosts(kotlin/Long): eu.vendeli.tgbot.api/GetUserChatBoostsAction // eu.vendeli.tgbot.api/getUserChatBoosts|getUserChatBoosts(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api/getUserProfilePhotos(eu.vendeli.tgbot.types/User, kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.api/GetUserProfilePhotosAction // eu.vendeli.tgbot.api/getUserProfilePhotos|getUserProfilePhotos(eu.vendeli.tgbot.types.User;kotlin.Int?;kotlin.Int?){}[0]
final inline fun eu.vendeli.tgbot.api/getUserProfilePhotos(kotlin/Long, kotlin/Int? = ..., kotlin/Int? = ...): eu.vendeli.tgbot.api/GetUserProfilePhotosAction // eu.vendeli.tgbot.api/getUserProfilePhotos|getUserProfilePhotos(kotlin.Long;kotlin.Int?;kotlin.Int?){}[0]
final inline fun eu.vendeli.tgbot.api/invoice(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types.internal/Currency, kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice>): eu.vendeli.tgbot.api/SendInvoiceAction // eu.vendeli.tgbot.api/invoice|invoice(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.internal.Currency;kotlin.collections.List<eu.vendeli.tgbot.types.payment.LabeledPrice>){}[0]
final inline fun eu.vendeli.tgbot.api/invoice(kotlin/String, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types.internal/Currency, kotlin/Array<out eu.vendeli.tgbot.types.payment/LabeledPrice>..., kotlin/Function0<kotlin/String>): eu.vendeli.tgbot.api/SendInvoiceAction // eu.vendeli.tgbot.api/invoice|invoice(kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.internal.Currency;kotlin.Array<out|eu.vendeli.tgbot.types.payment.LabeledPrice>...;kotlin.Function0<kotlin.String>){}[0]
final inline fun eu.vendeli.tgbot.api/location(kotlin/Float, kotlin/Float): eu.vendeli.tgbot.api/SendLocationAction // eu.vendeli.tgbot.api/location|location(kotlin.Float;kotlin.Float){}[0]
final inline fun eu.vendeli.tgbot.api/poll(kotlin/String, kotlin.collections/List<eu.vendeli.tgbot.types.poll/InputPollOption>): eu.vendeli.tgbot.api/SendPollAction // eu.vendeli.tgbot.api/poll|poll(kotlin.String;kotlin.collections.List<eu.vendeli.tgbot.types.poll.InputPollOption>){}[0]
final inline fun eu.vendeli.tgbot.api/poll(kotlin/String, kotlin/Array<out eu.vendeli.tgbot.types.poll/InputPollOption>...): eu.vendeli.tgbot.api/SendPollAction // eu.vendeli.tgbot.api/poll|poll(kotlin.String;kotlin.Array<out|eu.vendeli.tgbot.types.poll.InputPollOption>...){}[0]
final inline fun eu.vendeli.tgbot.api/sendContact(kotlin/String, kotlin/String): eu.vendeli.tgbot.api/SendContactAction // eu.vendeli.tgbot.api/sendContact|sendContact(kotlin.String;kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api/sendDice(kotlin/String? = ...): eu.vendeli.tgbot.api/SendDiceAction // eu.vendeli.tgbot.api/sendDice|sendDice(kotlin.String?){}[0]
final inline fun eu.vendeli.tgbot.api/sendGame(kotlin/String): eu.vendeli.tgbot.api/SendGameAction // eu.vendeli.tgbot.api/sendGame|sendGame(kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api/sendInvoice(kotlin/String, kotlin/String, kotlin/String, kotlin/String? = ..., eu.vendeli.tgbot.types.internal/Currency, kotlin.collections/List<eu.vendeli.tgbot.types.payment/LabeledPrice>): eu.vendeli.tgbot.api/SendInvoiceAction // eu.vendeli.tgbot.api/sendInvoice|sendInvoice(kotlin.String;kotlin.String;kotlin.String;kotlin.String?;eu.vendeli.tgbot.types.internal.Currency;kotlin.collections.List<eu.vendeli.tgbot.types.payment.LabeledPrice>){}[0]
final inline fun eu.vendeli.tgbot.api/sendLocation(kotlin/Float, kotlin/Float): eu.vendeli.tgbot.api/SendLocationAction // eu.vendeli.tgbot.api/sendLocation|sendLocation(kotlin.Float;kotlin.Float){}[0]
final inline fun eu.vendeli.tgbot.api/sendVenue(kotlin/Float, kotlin/Float, kotlin/String, kotlin/String): eu.vendeli.tgbot.api/SendVenueAction // eu.vendeli.tgbot.api/sendVenue|sendVenue(kotlin.Float;kotlin.Float;kotlin.String;kotlin.String){}[0]
final inline fun eu.vendeli.tgbot.api/setGameScore(eu.vendeli.tgbot.types/User, kotlin/Long): eu.vendeli.tgbot.api/SetGameScoreAction // eu.vendeli.tgbot.api/setGameScore|setGameScore(eu.vendeli.tgbot.types.User;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api/setGameScore(eu.vendeli.tgbot.types/User, kotlin/Long, kotlin/Long): eu.vendeli.tgbot.api/SetGameScoreAction // eu.vendeli.tgbot.api/setGameScore|setGameScore(eu.vendeli.tgbot.types.User;kotlin.Long;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api/setGameScore(kotlin/Long, kotlin/Long): eu.vendeli.tgbot.api/SetGameScoreAction // eu.vendeli.tgbot.api/setGameScore|setGameScore(kotlin.Long;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api/setGameScore(kotlin/Long, kotlin/Long, kotlin/Long): eu.vendeli.tgbot.api/SetGameScoreAction // eu.vendeli.tgbot.api/setGameScore|setGameScore(kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api/setMessageReaction(kotlin/Long, kotlin.collections/List<eu.vendeli.tgbot.types/ReactionType>? = ..., kotlin/Boolean? = ...): eu.vendeli.tgbot.api/SetMessageReactionAction // eu.vendeli.tgbot.api/setMessageReaction|setMessageReaction(kotlin.Long;kotlin.collections.List<eu.vendeli.tgbot.types.ReactionType>?;kotlin.Boolean?){}[0]
final inline fun eu.vendeli.tgbot.api/setMessageReaction(kotlin/Long, kotlin/Array<out eu.vendeli.tgbot.types/ReactionType>..., kotlin/Boolean? = ...): eu.vendeli.tgbot.api/SetMessageReactionAction // eu.vendeli.tgbot.api/setMessageReaction|setMessageReaction(kotlin.Long;kotlin.Array<out|eu.vendeli.tgbot.types.ReactionType>...;kotlin.Boolean?){}[0]
final inline fun eu.vendeli.tgbot.api/setPassportDataError(kotlin/Long, kotlin/Array<out eu.vendeli.tgbot.types.passport/PassportElementError>...): eu.vendeli.tgbot.api/SetPassportDataErrorsAction // eu.vendeli.tgbot.api/setPassportDataError|setPassportDataError(kotlin.Long;kotlin.Array<out|eu.vendeli.tgbot.types.passport.PassportElementError>...){}[0]
final inline fun eu.vendeli.tgbot.api/setPassportDataErrors(kotlin/Long, kotlin.collections/List<eu.vendeli.tgbot.types.passport/PassportElementError>): eu.vendeli.tgbot.api/SetPassportDataErrorsAction // eu.vendeli.tgbot.api/setPassportDataErrors|setPassportDataErrors(kotlin.Long;kotlin.collections.List<eu.vendeli.tgbot.types.passport.PassportElementError>){}[0]
final inline fun eu.vendeli.tgbot.api/stopMessageLiveLocation(): eu.vendeli.tgbot.api/StopMessageLiveLocationAction // eu.vendeli.tgbot.api/stopMessageLiveLocation|stopMessageLiveLocation(){}[0]
final inline fun eu.vendeli.tgbot.api/stopMessageLiveLocation(kotlin/Long): eu.vendeli.tgbot.api/StopMessageLiveLocationAction // eu.vendeli.tgbot.api/stopMessageLiveLocation|stopMessageLiveLocation(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api/stopPoll(kotlin/Long): eu.vendeli.tgbot.api/StopPollAction // eu.vendeli.tgbot.api/stopPoll|stopPoll(kotlin.Long){}[0]
final inline fun eu.vendeli.tgbot.api/venue(kotlin/Float, kotlin/Float, kotlin/String, kotlin/String): eu.vendeli.tgbot.api/SendVenueAction // eu.vendeli.tgbot.api/venue|venue(kotlin.Float;kotlin.Float;kotlin.String;kotlin.String){}[0]
final suspend inline fun <#A: kotlin/Any?, #B: kotlin/Any?> (kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>>).eu.vendeli.tgbot.types.internal/foldResponse(kotlin/Function1<eu.vendeli.tgbot.types.internal/Response.Success<#A>, #B>, kotlin/Function1<eu.vendeli.tgbot.types.internal/Response.Failure, #B>): #B // eu.vendeli.tgbot.types.internal/foldResponse|foldResponse@kotlinx.coroutines.Deferred<eu.vendeli.tgbot.types.internal.Response<out|0:0>>(kotlin.Function1<eu.vendeli.tgbot.types.internal.Response.Success<0:0>,0:1>;kotlin.Function1<eu.vendeli.tgbot.types.internal.Response.Failure,0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final suspend inline fun <#A: kotlin/Any?> (kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>>).eu.vendeli.tgbot.types.internal/getOrNull(): #A? // eu.vendeli.tgbot.types.internal/getOrNull|getOrNull@kotlinx.coroutines.Deferred<eu.vendeli.tgbot.types.internal.Response<out|0:0>>(){0§<kotlin.Any?>}[0]
final suspend inline fun <#A: kotlin/Any?> (kotlinx.coroutines/Deferred<eu.vendeli.tgbot.types.internal/Response<out #A>>).eu.vendeli.tgbot.types.internal/onFailure(kotlin/Function1<eu.vendeli.tgbot.types.internal/Response.Failure, kotlin/Unit>): #A? // eu.vendeli.tgbot.types.internal/onFailure|onFailure@kotlinx.coroutines.Deferred<eu.vendeli.tgbot.types.internal.Response<out|0:0>>(kotlin.Function1<eu.vendeli.tgbot.types.internal.Response.Failure,kotlin.Unit>){0§<kotlin.Any?>}[0]

// Targets: [native]
final fun (eu.vendeli.tgbot/TelegramBot).eu.vendeli.tgbot.implementations/addInstances(kotlin/Function1<kotlin.collections/MutableMap<kotlin.reflect/KClass<*>, kotlin/Any>, kotlin/Unit>) // eu.vendeli.tgbot.implementations/addInstances|addInstances@eu.vendeli.tgbot.TelegramBot(kotlin.Function1<kotlin.collections.MutableMap<kotlin.reflect.KClass<*>,kotlin.Any>,kotlin.Unit>){}[0]
